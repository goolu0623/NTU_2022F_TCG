* 8:40am Dec 29, 2022
* d1 vs d5
* order RB* board 5 6* time 240 0 0
* ini D5 E5 C5 E3 E4 D4 B1 A1 C1 A3 A2 B2
* 1. R 4 A3 B3
* 2. B 1 D5 C5
* 3. R 4 B3 B4
* 4. B 4 E3 D3
* 5. R 3 C1 D1
* 6. B 1 C5 B4
* 7. R 1 B1 B2
* 8. B 6 D4 C4
* 9. R 6 A2 B2
* 10. B 3 D3 C2
* 11. R 4 B2 C2
* 12. B 5 E4 D4
* 13. R 1 A1 B2
* 14. B 6 C4 B4
* 15. R 1 B2 B3
* 16. B 5 D4 C4
* 17. R 5 C2 D3
* 18. B 5 C4 B3
* 19. R 5 D3 E3
* 20. B 6 B4 B3
* 21. R 2 D1 E2
* 22. B 1 E5 D4
* 23. R 3 E2 E3
* 24. B 6 B3 A2
* 25. R 5 E3 E4
* 26. B 5 A2 A1
* ChessTotheCorner d5 wins
* Comment 0 0
0. 1672274446587
1. 1672274446587
2. 1672274446649
3. 1672274446710
4. 1672274446773
5. 1672274446836
6. 1672274446898
7. 1672274446962
8. 1672274447024
9. 1672274447086
10. 1672274447149
11. 1672274447211
12. 1672274447274
13. 1672274447336
14. 1672274447398
15. 1672274447460
16. 1672274447522
17. 1672274447583
18. 1672274447645
19. 1672274447708
20. 1672274447770
21. 1672274447832
22. 1672274447895
23. 1672274447956
24. 1672274448019
25. 1672274448080
26. 1672274448141
Points   Total
   1         6
   2         1
   3         3
   4         4
   5         7
   6         5

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get B 1 D5 E5 C5 E3 E4 D4 B1 A1 C1 B3 A2 B2
D5 C5
get B 4 C5 E5 0 E3 E4 D4 B1 A1 C1 B4 A2 B2
E3 D3
get B 1 C5 E5 0 D3 E4 D4 B1 A1 D1 B4 A2 B2
C5 B4
get B 6 B4 E5 0 D3 E4 D4 B2 A1 D1 0 A2 0
D4 C4
get B 3 B4 E5 0 D3 E4 C4 0 A1 D1 0 B2 0
D3 C2
get B 5 B4 E5 0 0 E4 C4 0 A1 D1 0 C2 0
E4 D4
get B 6 B4 E5 0 0 D4 C4 0 B2 D1 0 C2 0
C4 B4
get B 5 0 E5 0 0 D4 B4 0 B3 D1 0 C2 0
D4 C4
get B 5 0 E5 0 0 C4 B4 0 B3 D1 0 D3 0
C4 B3
get B 6 0 E5 0 0 B3 B4 0 0 D1 0 E3 0
B4 B3
get B 1 0 E5 0 0 0 B3 0 0 E2 0 E3 0
E5 D4
get B 6 0 D4 0 0 0 B3 0 0 E3 0 0 0
B3 A2
get B 5 0 D4 0 0 0 A2 0 0 E4 0 0 0
A2 A1
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get B 1 D5 E5 C5 E3 E4 D4 B1 A1 C1 B3 A2 B2

The current board:

<1>   B  A  C  0  0  
<2>   E  F  0  0  0  
<3>   0  D  0  0  4  
<4>   0  0  0  6  5  
<5>   0  0  3  1  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  7  9  0  0 -----
----------11  12  0  0  0 -----
----------0  10  0  0  4 -----
----------0  0  0  6  5 -----
----------0  0  3  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now undo move from (4,3) to (3,2)
eatnum = 0
now move from (4,3) to (3,3)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now undo move from (4,3) to (3,3)
eatnum = 6
now move from (4,3) to (4,2)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
now undo move from (4,3) to (4,2)
eatnum = 3
local_max = -30.500000
end search, score = -30.5
fku
org(r,c) = (4,3)
rand= 23  17  1
my  = 23  22  1
org(r,c) = (4,3), tar(r,c) = (4,2), dice = 1
============================ver1
My result:
Blue piece 1: (D5) -> (C5)

<1>   B  A  C  0  0  
<2>   E  F  0  0  0  
<3>   0  D  0  0  4  
<4>   0  0  0  6  5  
<5>   0  0  1  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
============================
D5 C5
get B 4 C5 E5 0 E3 E4 D4 B1 A1 C1 B4 A2 B2

The current board:

<1>   B  A  C  0  0  
<2>   E  F  0  0  0  
<3>   0  0  0  0  4  
<4>   0  D  0  6  5  
<5>   0  0  1  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  7  9  0  0 -----
----------11  12  0  0  0 -----
----------0  0  0  0  4 -----
----------0  10  0  6  5 -----
----------0  0  1  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.666667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.666667
now undo move from (2,4) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.166667
now undo move from (2,4) to (1,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
now undo move from (2,4) to (2,3)
eatnum = 0
local_max = -26.000000
end search, score = -26
fku
org(r,c) = (2,4)
rand= 14  9  4
my  = 14  13  4
org(r,c) = (2,4), tar(r,c) = (2,3), dice = 4
============================ver1
My result:
Blue piece 4: (E3) -> (D3)

<1>   B  A  C  0  0  
<2>   E  F  0  0  0  
<3>   0  0  0  4  0  
<4>   0  D  0  6  5  
<5>   0  0  1  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
============================
E3 D3
get B 1 C5 E5 0 D3 E4 D4 B1 A1 D1 B4 A2 B2

The current board:

<1>   B  A  0  C  0  
<2>   E  F  0  0  0  
<3>   0  0  0  4  0  
<4>   0  D  0  6  5  
<5>   0  0  1  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  7  0  9  0 -----
----------11  12  0  0  0 -----
----------0  0  0  4  0 -----
----------0  10  0  6  5 -----
----------0  0  1  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (4,2) to (3,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
now undo move from (4,2) to (3,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 0.000000
now undo move from (4,2) to (3,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.166667
now undo move from (4,2) to (4,1)
eatnum = 0
local_max = -7.000000
end search, score = -7
fku
org(r,c) = (4,2)
rand= 22  17  1
my  = 22  16  1
org(r,c) = (4,2), tar(r,c) = (3,1), dice = 1
============================ver1
My result:
Blue piece 1: (C5) -> (B4)

<1>   B  A  0  C  0  
<2>   E  F  0  0  0  
<3>   0  0  0  4  0  
<4>   0  1  0  6  5  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
C5 B4
get B 6 B4 E5 0 D3 E4 D4 B2 A1 D1 0 A2 0

The current board:

<1>   B  0  0  C  0  
<2>   E  A  0  0  0  
<3>   0  0  0  4  0  
<4>   0  1  0  6  5  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  0  9  0 -----
----------11  7  0  0  0 -----
----------0  0  0  4  0 -----
----------0  1  0  6  5 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 45.500000, threaten = 37.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 45.500000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 45.500000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 45.500000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 45.500000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 45.500000, threaten = 37.500000
now undo move from (3,3) to (2,2)
eatnum = 0
now move from (3,3) to (2,3)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 6.000000, threaten = 0.000000
now undo move from (3,3) to (2,3)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 10.500000, threaten = 0.000000
now undo move from (3,3) to (3,2)
eatnum = 0
local_max = -3.500000
end search, score = -3.5
fku
org(r,c) = (3,3)
rand= 18  13  6
my  = 18  17  6
org(r,c) = (3,3), tar(r,c) = (3,2), dice = 6
============================ver1
My result:
Blue piece 6: (D4) -> (C4)

<1>   B  0  0  C  0  
<2>   E  A  0  0  0  
<3>   0  0  0  4  0  
<4>   0  1  6  0  5  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
D4 C4
get B 3 B4 E5 0 D3 E4 C4 0 A1 D1 0 B2 0

The current board:

<1>   B  0  0  C  0  
<2>   0  E  0  0  0  
<3>   0  0  0  4  0  
<4>   0  1  6  0  5  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 3
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  0  9  0 -----
----------0  11  0  0  0 -----
----------0  0  0  4  0 -----
----------0  1  6  0  5 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 0.000000
now undo move from (2,3) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 5.000000
now undo move from (2,3) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 80.500000, threaten = 112.500000
now undo move from (2,3) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.166667, threaten = 0.000000
now undo move from (4,4) to (3,3)
eatnum = 0
now move from (4,4) to (3,4)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 15.333333, threaten = 0.000000
now undo move from (4,4) to (3,4)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
now undo move from (4,4) to (4,3)
eatnum = 0
local_max = 56.000000
end search, score = 56
fku
org(r,c) = (2,3)
rand= 13  7  4
my  = 13  7  4
org(r,c) = (2,3), tar(r,c) = (1,2), dice = 3
============================ver1
My result:
Blue piece 4: (D3) -> (C2)

<1>   B  0  0  C  0  
<2>   0  E  4  0  0  
<3>   0  0  0  0  0  
<4>   0  1  6  0  5  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 3
============================
D3 C2
get B 5 B4 E5 0 0 E4 C4 0 A1 D1 0 C2 0

The current board:

<1>   B  0  0  C  0  
<2>   0  0  E  0  0  
<3>   0  0  0  0  0  
<4>   0  1  6  0  5  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  0  9  0 -----
----------0  0  11  0  0 -----
----------0  0  0  0  0 -----
----------0  1  6  0  5 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 7.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 7.500000
now undo move from (3,4) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
now undo move from (3,4) to (2,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 13.000000, threaten = 0.000000
now undo move from (3,4) to (3,3)
eatnum = 0
local_max = -11.500000
end search, score = -11.5
fku
org(r,c) = (3,4)
rand= 19  14  5
my  = 19  18  5
org(r,c) = (3,4), tar(r,c) = (3,3), dice = 5
============================ver1
My result:
Blue piece 5: (E4) -> (D4)

<1>   B  0  0  C  0  
<2>   0  0  E  0  0  
<3>   0  0  0  0  0  
<4>   0  1  6  5  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
E4 D4
get B 6 B4 E5 0 0 D4 C4 0 B2 D1 0 C2 0

The current board:

<1>   0  0  0  C  0  
<2>   0  B  E  0  0  
<3>   0  0  0  0  0  
<4>   0  1  6  5  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  9  0 -----
----------0  8  11  0  0 -----
----------0  0  0  0  0 -----
----------0  1  6  5  0 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 75.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 75.000000
now undo move from (3,2) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 48.000000, threaten = 187.500000
now undo move from (3,2) to (2,2)
eatnum = 0
now move from (3,2) to (3,1)
eatnum = 1
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 0.000000
now undo move from (3,2) to (3,1)
eatnum = 1
local_max = -27.833333
end search, score = -27.8333
fku
org(r,c) = (3,2)
rand= 17  11  6
my  = 17  16  6
org(r,c) = (3,2), tar(r,c) = (3,1), dice = 6
============================ver1
My result:
Blue piece 6: (C4) -> (B4)

<1>   0  0  0  C  0  
<2>   0  B  E  0  0  
<3>   0  0  0  0  0  
<4>   0  6  0  5  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
============================
C4 B4
get B 5 0 E5 0 0 D4 B4 0 B3 D1 0 C2 0

The current board:

<1>   0  0  0  C  0  
<2>   0  0  E  0  0  
<3>   0  B  0  0  0  
<4>   0  6  0  5  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  9  0 -----
----------0  0  11  0  0 -----
----------0  8  0  0  0 -----
----------0  6  0  5  0 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 115.666667, threaten = 117.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 115.666667, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 115.666667, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 115.666667, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 115.666667, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 115.666667, threaten = 117.500000
now undo move from (3,3) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 12.500000
now undo move from (3,3) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 10.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 10.000000
now undo move from (3,3) to (3,2)
eatnum = 0
local_max = -37.833333
end search, score = -37.8333
fku
org(r,c) = (3,3)
rand= 18  13  5
my  = 18  17  5
org(r,c) = (3,3), tar(r,c) = (3,2), dice = 5
============================ver1
My result:
Blue piece 5: (D4) -> (C4)

<1>   0  0  0  C  0  
<2>   0  0  E  0  0  
<3>   0  B  0  0  0  
<4>   0  6  5  0  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
============================
D4 C4
get B 5 0 E5 0 0 C4 B4 0 B3 D1 0 D3 0

The current board:

<1>   0  0  0  C  0  
<2>   0  0  0  0  0  
<3>   0  B  0  E  0  
<4>   0  6  5  0  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  9  0 -----
----------0  0  0  0  0 -----
----------0  8  0  11  0 -----
----------0  6  5  0  0 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (3,2) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
now undo move from (3,2) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.666667, threaten = 5.000000
now undo move from (3,2) to (2,2)
eatnum = 0
now move from (3,2) to (3,1)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 10.666667, threaten = 5.000000
now undo move from (3,2) to (3,1)
eatnum = 6
local_max = -110.666667
end search, score = -110.667
fku
org(r,c) = (3,2)
rand= 17  12  5
my  = 17  11  5
org(r,c) = (3,2), tar(r,c) = (2,1), dice = 5
============================ver1
My result:
Blue piece 5: (C4) -> (B3)

<1>   0  0  0  C  0  
<2>   0  0  0  0  0  
<3>   0  5  0  E  0  
<4>   0  6  0  0  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
C4 B3
get B 6 0 E5 0 0 B3 B4 0 0 D1 0 E3 0

The current board:

<1>   0  0  0  C  0  
<2>   0  0  0  0  0  
<3>   0  5  0  0  E  
<4>   0  6  0  0  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  9  0 -----
----------0  0  0  0  0 -----
----------0  5  0  0  11 -----
----------0  6  0  0  0 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.666667, threaten = 0.000000
now undo move from (3,1) to (2,0)
eatnum = 0
now move from (3,1) to (2,1)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.833333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 150.833333, threaten = 0.000000
now undo move from (3,1) to (2,1)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 115.666667, threaten = 0.000000
now undo move from (3,1) to (3,0)
eatnum = 0
local_max = -75.500000
end search, score = -75.5
fku
org(r,c) = (3,1)
rand= 16  11  6
my  = 16  11  6
org(r,c) = (3,1), tar(r,c) = (2,1), dice = 6
============================ver1
My result:
Blue piece 6: (B4) -> (B3)

<1>   0  0  0  C  0  
<2>   0  0  0  0  0  
<3>   0  6  0  0  E  
<4>   0  0  0  0  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
B4 B3
get B 1 0 E5 0 0 0 B3 0 0 E2 0 E3 0

The current board:

<1>   0  0  0  0  0  
<2>   0  0  0  0  C  
<3>   0  6  0  0  E  
<4>   0  0  0  0  0  
<5>   0  0  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  0  0 -----
----------0  0  0  0  9 -----
----------0  6  0  0  11 -----
----------0  0  0  0  0 -----
----------0  0  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 162.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 162.500000, threaten = 0.000000
now undo move from (4,4) to (3,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.500000
now undo move from (4,4) to (3,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 122.500000, blue_a = 150.833333, threaten = 0.000000
now undo move from (4,4) to (4,3)
eatnum = 0
local_max = -82.500000
end search, score = -82.5
fku
org(r,c) = (4,4)
rand= 24  18  2
my  = 24  18  2
org(r,c) = (4,4), tar(r,c) = (3,3), dice = 1
============================ver1
My result:
Blue piece 2: (E5) -> (D4)

<1>   0  0  0  0  0  
<2>   0  0  0  0  C  
<3>   0  6  0  0  E  
<4>   0  0  0  2  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
E5 D4
get B 6 0 D4 0 0 0 B3 0 0 E3 0 0 0

The current board:

<1>   0  0  0  0  0  
<2>   0  0  0  0  0  
<3>   0  6  0  0  C  
<4>   0  0  0  2  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 1
generate start: 
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
----------0  6  0  0  9 -----
----------0  0  0  2  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (2,1) to (1,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (2,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 162.500000, threaten = 0.000000
now undo move from (2,1) to (2,0)
eatnum = 0
local_max = 2037.500000
end search, score = 2037.5
fku
org(r,c) = (2,1)
rand= 11  6  6
my  = 11  5  6
org(r,c) = (2,1), tar(r,c) = (1,0), dice = 6
============================ver1
My result:
Blue piece 6: (B3) -> (A2)

<1>   0  0  0  0  0  
<2>   6  0  0  0  0  
<3>   0  0  0  0  C  
<4>   0  0  0  2  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 1
============================
B3 A2
get B 5 0 D4 0 0 0 A2 0 0 E4 0 0 0

The current board:

<1>   0  0  0  0  0  
<2>   6  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  2  C  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 1
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 3, piece_value= 3375
----------0  0  0  0  0 -----
----------6  0  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  2  9 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
blue reach: 
new local
start search dep = 1, lim = 1
blue reach: 
start search dep = 1, lim = 1
blue reach: 
start search dep = 1, lim = 1
blue reach: 
start search dep = 1, lim = 1
blue reach: 
start search dep = 1, lim = 1
blue reach: 
now undo move from (1,0) to (0,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2437.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2437.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2437.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2437.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2437.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2437.500000, threaten = 0.000000
now undo move from (3,3) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (3,3) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (3,3) to (3,2)
eatnum = 0
local_max = -0.000000
end search, score = -2.22507e-308
fku
org(r,c) = (1,0)
rand= 18  13  2
my  = 5  0  6
org(r,c) = (1,0), tar(r,c) = (0,0), dice = 5
============================ver1
My result:
Blue piece 2: (A2) -> (A1)

<1>   6  0  0  0  0  
<2>   0  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  2  C  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 1
============================
A2 A1
exit

###
