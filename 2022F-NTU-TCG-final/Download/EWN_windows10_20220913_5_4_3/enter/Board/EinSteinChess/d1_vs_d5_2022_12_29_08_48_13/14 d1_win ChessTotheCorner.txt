* 8:49am Dec 29, 2022
* d5 vs d1
* order RB* board 5 6* time 240 0 0
* ini D5 E4 C5 D4 E3 E5 B1 A2 C1 B2 A3 A1
* 1. R 4 B2 C2
* 2. B 6 E5 D4
* 3. R 2 A2 B2
* 4. B 5 E3 D2
* 5. R 4 C2 D2
* 6. B 6 D4 C3
* 7. R 2 B2 C2
* 8. B 2 E4 D4
* 9. R 1 B1 C1
* 10. B 2 D4 C4
* 11. R 1 C1 D1
* 12. B 6 C3 B2
* 13. R 6 A1 B1
* 14. B 4 B2 B1
* 15. R 5 A3 B3
* 16. B 2 C4 B3
* 17. R 2 C2 D2
* 18. B 3 C5 B4
* 19. R 2 D2 E2
* 20. B 3 B4 B3
* 21. R 3 E2 E3
* 22. B 3 B3 A2
* 23. R 4 E3 E4
* 24. B 3 A2 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672274984464
1. 1672274984464
2. 1672274984525
3. 1672274984587
4. 1672274984650
5. 1672274984712
6. 1672274984775
7. 1672274984838
8. 1672274984901
9. 1672274984963
10. 1672274985024
11. 1672274985090
12. 1672274985148
13. 1672274985210
14. 1672274985272
15. 1672274985334
16. 1672274985396
17. 1672274985459
18. 1672274985521
19. 1672274985584
20. 1672274985646
21. 1672274985708
22. 1672274985770
23. 1672274985833
24. 1672274985894
Points   Total
   1         2
   2         7
   3         5
   4         4
   5         2
   6         4

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D5 E4 C5 D4 E3 E5 B1 A2 C1 B2 A3 A1
B2 C2
get R 2 D5 E4 C5 0 E3 D4 B1 A2 C1 C2 A3 A1
A2 B2
get R 4 D5 E4 C5 0 D2 D4 B1 B2 C1 C2 A3 A1
C2 D2
get R 2 D5 E4 C5 0 0 C3 B1 B2 C1 D2 A3 A1
B2 C2
get R 1 D5 D4 C5 0 0 C3 B1 C2 C1 D2 A3 A1
B1 C1
get R 1 D5 C4 C5 0 0 C3 C1 C2 0 D2 A3 A1
C1 D1
get R 6 D5 C4 C5 0 0 B2 D1 C2 0 D2 A3 A1
A1 B1
get R 5 D5 C4 C5 0 0 B1 D1 C2 0 D2 A3 0
A3 B3
get R 2 D5 B3 C5 0 0 B1 D1 C2 0 D2 0 0
C2 D2
get R 2 D5 B3 B4 0 0 B1 D1 D2 0 0 0 0
D2 E2
get R 3 D5 0 B3 0 0 B1 D1 E2 0 0 0 0
E2 E3
get R 4 D5 0 A2 0 0 B1 D1 E3 0 0 0 0
E3 E4
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D5 E4 C5 D4 E3 E5 B1 A2 C1 B2 A3 A1

The current board:

<1>   F  A  C  0  0  
<2>   B  D  0  0  0  
<3>   E  0  0  0  5  
<4>   0  0  0  4  2  
<5>   0  0  3  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  9  0  0 -----
----------8  10  0  0  0 -----
----------11  0  0  0  5 -----
----------0  0  0  4  2 -----
----------0  0  3  1  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 3.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 3.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 3.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 3.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 3.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 3.333333, threaten = 37.500000
now undo move from (1,1) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -16.666667
end search, score = -16.6667
fku
org(r,c) = (1,1)
rand= 6  11  10
my  = 6  7  10
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 4
============================ver1
My result:
Red piece 4: (B2) -> (C2)

<1>   F  A  C  0  0  
<2>   B  0  D  0  0  
<3>   E  0  0  0  5  
<4>   0  0  0  4  2  
<5>   0  0  3  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
B2 C2
get R 2 D5 E4 C5 0 E3 D4 B1 A2 C1 C2 A3 A1

The current board:

<1>   F  A  C  0  0  
<2>   B  0  D  0  0  
<3>   E  0  0  0  5  
<4>   0  0  0  6  2  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------12  7  9  0  0 -----
----------8  0  10  0  0 -----
----------11  0  0  0  5 -----
----------0  0  0  6  2 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
now undo move from (1,0) to (2,1)
eatnum = 0
now move from (1,0) to (2,0)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.500000, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.500000, threaten = 0.000000
now undo move from (1,0) to (1,1)
eatnum = 0
local_max = -11.833333
end search, score = -11.8333
fku
org(r,c) = (1,0)
rand= 5  10  8
my  = 5  6  8
org(r,c) = (1,0), tar(r,c) = (1,1), dice = 2
============================ver1
My result:
Red piece 2: (A2) -> (B2)

<1>   F  A  C  0  0  
<2>   0  B  D  0  0  
<3>   E  0  0  0  5  
<4>   0  0  0  6  2  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
============================
A2 B2
get R 4 D5 E4 C5 0 D2 D4 B1 B2 C1 C2 A3 A1

The current board:

<1>   F  A  C  0  0  
<2>   0  B  D  5  0  
<3>   E  0  0  0  0  
<4>   0  0  0  6  2  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------12  7  9  0  0 -----
----------0  8  10  5  0 -----
----------11  0  0  0  0 -----
----------0  0  0  6  2 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 75.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 75.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 75.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 75.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 75.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 75.333333
now undo move from (1,2) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.166667, threaten = 37.833333
now undo move from (1,2) to (2,2)
eatnum = 0
now move from (1,2) to (1,3)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.333333, threaten = 0.000000
now undo move from (1,2) to (1,3)
eatnum = 5
local_max = -27.666667
end search, score = -27.6667
fku
org(r,c) = (1,2)
rand= 7  8  10
my  = 7  8  10
org(r,c) = (1,2), tar(r,c) = (1,3), dice = 4
============================ver1
My result:
Red piece 4: (C2) -> (D2)

<1>   F  A  C  0  0  
<2>   0  B  0  D  0  
<3>   E  0  0  0  0  
<4>   0  0  0  6  2  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 6
============================
C2 D2
get R 2 D5 E4 C5 0 0 C3 B1 B2 C1 D2 A3 A1

The current board:

<1>   F  A  C  0  0  
<2>   0  B  0  D  0  
<3>   E  0  6  0  0  
<4>   0  0  0  0  2  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------12  7  9  0  0 -----
----------0  8  0  10  0 -----
----------11  0  6  0  0 -----
----------0  0  0  0  2 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (1,1) to (2,2)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 1.000000, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 0.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 113.333333, threaten = 5.000000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -452.666667
end search, score = -452.667
fku
org(r,c) = (1,1)
rand= 6  7  8
my  = 6  7  8
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 2
============================ver1
My result:
Red piece 2: (B2) -> (C2)

<1>   F  A  C  0  0  
<2>   0  0  B  D  0  
<3>   E  0  6  0  0  
<4>   0  0  0  0  2  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 6
============================
B2 C2
get R 1 D5 D4 C5 0 0 C3 B1 C2 C1 D2 A3 A1

The current board:

<1>   F  A  C  0  0  
<2>   0  0  B  D  0  
<3>   E  0  6  0  0  
<4>   0  0  0  2  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------12  7  9  0  0 -----
----------0  0  8  10  0 -----
----------11  0  6  0  0 -----
----------0  0  0  2  0 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,1) to (1,2)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 115.666667, threaten = 5.000000
now undo move from (0,1) to (1,2)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 115.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 115.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 115.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 115.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 115.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 115.666667, threaten = 10.000000
now undo move from (0,1) to (1,1)
eatnum = 0
now move from (0,1) to (0,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
now undo move from (0,1) to (0,2)
eatnum = 9
local_max = -457.166667
end search, score = -457.167
fku
org(r,c) = (0,1)
rand= 1  2  7
my  = 1  2  7
org(r,c) = (0,1), tar(r,c) = (0,2), dice = 1
============================ver1
My result:
Red piece 1: (B1) -> (C1)

<1>   F  0  A  0  0  
<2>   0  0  B  D  0  
<3>   E  0  6  0  0  
<4>   0  0  0  2  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
B1 C1
get R 1 D5 C4 C5 0 0 C3 C1 C2 0 D2 A3 A1

The current board:

<1>   F  0  A  0  0  
<2>   0  0  B  D  0  
<3>   E  0  6  0  0  
<4>   0  0  2  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------12  0  7  0  0 -----
----------0  0  8  10  0 -----
----------11  0  6  0  0 -----
----------0  0  2  0  0 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,2) to (1,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 115.666667, threaten = 5.000000
now undo move from (0,2) to (1,3)
eatnum = 10
now move from (0,2) to (1,2)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.333333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.333333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.333333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.333333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.333333, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.333333, blue_a = 115.666667, threaten = 5.000000
now undo move from (0,2) to (1,2)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 115.666667, threaten = 5.000000
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -457.166667
end search, score = -457.167
fku
org(r,c) = (0,2)
rand= 2  3  7
my  = 2  3  7
org(r,c) = (0,2), tar(r,c) = (0,3), dice = 1
============================ver1
My result:
Red piece 1: (C1) -> (D1)

<1>   F  0  0  A  0  
<2>   0  0  B  D  0  
<3>   E  0  6  0  0  
<4>   0  0  2  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
C1 D1
get R 6 D5 C4 C5 0 0 B2 D1 C2 0 D2 A3 A1

The current board:

<1>   F  0  0  A  0  
<2>   0  6  B  D  0  
<3>   E  0  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------12  0  0  7  0 -----
----------0  6  8  10  0 -----
----------11  0  0  0  0 -----
----------0  0  2  0  0 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,0) to (1,1)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,0) to (1,1)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
now undo move from (0,0) to (1,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.333333
now undo move from (0,0) to (0,1)
eatnum = 0
local_max = -6752.500000
end search, score = -6752.5
fku
org(r,c) = (0,0)
rand= 0  6  12
my  = 0  1  12
org(r,c) = (0,0), tar(r,c) = (0,1), dice = 6
============================ver1
My result:
Red piece 6: (A1) -> (B1)

<1>   0  F  0  A  0  
<2>   0  6  B  D  0  
<3>   E  0  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
A1 B1
get R 5 D5 C4 C5 0 0 B1 D1 C2 0 D2 A3 0

The current board:

<1>   0  6  0  A  0  
<2>   0  0  B  D  0  
<3>   E  0  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------0  6  0  7  0 -----
----------0  0  8  10  0 -----
----------11  0  0  0  0 -----
----------0  0  2  0  0 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 7.500000
now undo move from (2,0) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 1690.666667, threaten = 0.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 1690.666667, threaten = 2.500000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -6750.000000
end search, score = -6750
fku
org(r,c) = (2,0)
rand= 10  15  11
my  = 10  11  11
org(r,c) = (2,0), tar(r,c) = (2,1), dice = 5
============================ver1
My result:
Red piece 5: (A3) -> (B3)

<1>   0  6  0  A  0  
<2>   0  0  B  D  0  
<3>   0  E  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
A3 B3
get R 2 D5 B3 C5 0 0 B1 D1 C2 0 D2 0 0

The current board:

<1>   0  6  0  A  0  
<2>   0  0  B  D  0  
<3>   0  2  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------0  6  0  7  0 -----
----------0  0  8  10  0 -----
----------0  2  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  3  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
now undo move from (1,2) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1725.666667, threaten = 0.000000
now undo move from (1,2) to (2,2)
eatnum = 0
now move from (1,2) to (1,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1725.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1725.666667, threaten = 0.000000
now undo move from (1,2) to (1,3)
eatnum = 10
local_max = -6890.000000
end search, score = -6890
fku
org(r,c) = (1,2)
rand= 7  8  8
my  = 7  8  8
org(r,c) = (1,2), tar(r,c) = (1,3), dice = 2
============================ver1
My result:
Red piece 2: (C2) -> (D2)

<1>   0  6  0  A  0  
<2>   0  0  0  B  0  
<3>   0  2  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  3  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 2
============================
C2 D2
get R 2 D5 B3 B4 0 0 B1 D1 D2 0 0 0 0

The current board:

<1>   0  6  0  A  0  
<2>   0  0  0  B  0  
<3>   0  2  0  0  0  
<4>   0  3  0  0  0  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
----------0  6  0  7  0 -----
----------0  0  0  8  0 -----
----------0  2  0  0  0 -----
----------0  3  0  0  0 -----
----------0  0  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
now undo move from (1,3) to (2,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1732.666667, threaten = 0.000000
now undo move from (1,3) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1732.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1732.666667, threaten = 0.000000
now undo move from (1,3) to (1,4)
eatnum = 0
local_max = -6918.000000
end search, score = -6918
fku
org(r,c) = (1,3)
rand= 8  13  8
my  = 8  9  8
org(r,c) = (1,3), tar(r,c) = (1,4), dice = 2
============================ver1
My result:
Red piece 2: (D2) -> (E2)

<1>   0  6  0  A  0  
<2>   0  0  0  0  B  
<3>   0  2  0  0  0  
<4>   0  3  0  0  0  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 2
============================
D2 E2
get R 3 D5 0 B3 0 0 B1 D1 E2 0 0 0 0

The current board:

<1>   0  6  0  A  0  
<2>   0  0  0  0  B  
<3>   0  3  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
----------0  6  0  7  0 -----
----------0  0  0  0  8 -----
----------0  3  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1837.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1837.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1837.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1837.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1837.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1837.833333, threaten = 0.000000
now undo move from (1,4) to (2,4)
eatnum = 0
local_max = -5325.833333
end search, score = -5325.83
fku
org(r,c) = (1,4)
rand= 9  14  8
my  = 9  14  8
org(r,c) = (1,4), tar(r,c) = (2,4), dice = 3
============================ver1
My result:
Red piece 2: (E2) -> (E3)

<1>   0  6  0  A  0  
<2>   0  0  0  0  0  
<3>   0  3  0  0  B  
<4>   0  0  0  0  0  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
E2 E3
get R 4 D5 0 A2 0 0 B1 D1 E3 0 0 0 0

The current board:

<1>   0  6  0  A  0  
<2>   3  0  0  0  0  
<3>   0  0  0  0  B  
<4>   0  0  0  0  0  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 3, piece_value= 3375
piece_num=8, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
----------0  6  0  7  0 -----
----------3  0  0  0  0 -----
----------0  0  0  0  8 -----
----------0  0  0  0  0 -----
----------0  0  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.666667, blue_a = 3937.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.666667, blue_a = 3937.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.666667, blue_a = 3937.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.666667, blue_a = 3937.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.666667, blue_a = 3937.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.666667, blue_a = 3937.833333, threaten = 0.000000
now undo move from (2,4) to (3,4)
eatnum = 0
local_max = -9000.833333
end search, score = -9000.83
fku
org(r,c) = (2,4)
rand= 14  19  8
my  = 14  19  8
org(r,c) = (2,4), tar(r,c) = (3,4), dice = 4
============================ver1
My result:
Red piece 2: (E3) -> (E4)

<1>   0  6  0  A  0  
<2>   3  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  0  B  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
E3 E4
exit

###
