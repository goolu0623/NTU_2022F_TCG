* 8:48am Dec 29, 2022
* d5 vs d1
* order RB* board 5 6* time 240 0 0
* ini D4 E4 C5 E3 D5 E5 B2 A2 C1 A3 B1 A1
* 1. R 4 A3 B3
* 2. B 2 E4 D3
* 3. R 1 B2 C2
* 4. B 6 E5 D4
* 5. R 4 B3 C3
* 6. B 6 D4 C3
* 7. R 3 C1 D1
* 8. B 3 C5 B4
* 9. R 6 A1 B1
* 10. B 5 D5 C4
* 11. R 4 D1 E1
* 12. B 3 B4 A4
* 13. R 5 E1 E2
* 14. B 3 A4 A3
* 15. R 1 C2 D2
* 16. B 1 D3 C3
* 17. R 1 D2 E2
* 18. B 4 E3 D2
* 19. R 2 A2 B2
* 20. B 6 C4 C3
* 21. R 4 B2 C2
* 22. B 4 D2 C2
* 23. R 1 E2 E3
* 24. B 1 A3 A2
* 25. R 6 B1 C1
* 26. B 3 A2 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672274915428
1. 1672274915428
2. 1672274915490
3. 1672274915552
4. 1672274915614
5. 1672274915675
6. 1672274915737
7. 1672274915800
8. 1672274915861
9. 1672274915923
10. 1672274915986
11. 1672274916047
12. 1672274916110
13. 1672274916174
14. 1672274916236
15. 1672274916297
16. 1672274916360
17. 1672274916421
18. 1672274916483
19. 1672274916545
20. 1672274916606
21. 1672274916668
22. 1672274916730
23. 1672274916793
24. 1672274916855
25. 1672274916916
26. 1672274916979
Points   Total
   1         6
   2         2
   3         5
   4         6
   5         2
   6         5

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D4 E4 C5 E3 D5 E5 B2 A2 C1 A3 B1 A1
A3 B3
get R 1 D4 D3 C5 E3 D5 E5 B2 A2 C1 B3 B1 A1
B2 C2
get R 4 0 D3 C5 E3 D5 D4 C2 A2 C1 B3 B1 A1
B3 C3
get R 3 0 D3 C5 E3 D5 C3 C2 A2 C1 0 B1 A1
C1 D1
get R 6 0 D3 B4 E3 D5 C3 C2 A2 D1 0 B1 A1
A1 B1
get R 4 0 D3 B4 E3 C4 C3 C2 A2 D1 0 0 B1
D1 E1
get R 5 0 D3 A4 E3 C4 C3 C2 A2 E1 0 0 B1
E1 E2
get R 1 0 D3 A3 E3 C4 C3 C2 A2 E2 0 0 B1
C2 D2
get R 1 0 C3 A3 E3 C4 0 D2 A2 E2 0 0 B1
D2 E2
get R 2 0 C3 A3 D2 C4 0 E2 A2 0 0 0 B1
A2 B2
get R 4 0 0 A3 D2 C3 0 E2 B2 0 0 0 B1
B2 C2
get R 1 0 0 A3 C2 C3 0 E2 0 0 0 0 B1
E2 E3
get R 6 0 0 A2 C2 C3 0 E3 0 0 0 0 B1
B1 C1
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D4 E4 C5 E3 D5 E5 B2 A2 C1 A3 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   B  A  0  0  0  
<3>   D  0  0  0  4  
<4>   0  0  0  1  2  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------8  7  0  0  0 -----
----------10  0  0  0  4 -----
----------0  0  0  1  2 -----
----------0  0  3  5  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.500000
now undo move from (2,0) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -14.333333
end search, score = -14.3333
fku
org(r,c) = (2,0)
rand= 10  15  10
my  = 10  11  10
org(r,c) = (2,0), tar(r,c) = (2,1), dice = 4
============================ver1
My result:
Red piece 4: (A3) -> (B3)

<1>   F  E  C  0  0  
<2>   B  A  0  0  0  
<3>   0  D  0  0  4  
<4>   0  0  0  1  2  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
A3 B3
get R 1 D4 D3 C5 E3 D5 E5 B2 A2 C1 B3 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   B  A  0  0  0  
<3>   0  D  0  2  4  
<4>   0  0  0  1  0  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------8  7  0  0  0 -----
----------0  10  0  2  4 -----
----------0  0  0  1  0 -----
----------0  0  3  5  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
now undo move from (1,1) to (2,2)
eatnum = 0
now move from (1,1) to (2,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,1) to (2,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -30.833333
end search, score = -30.8333
fku
org(r,c) = (1,1)
rand= 6  12  7
my  = 6  7  7
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 1
============================ver1
My result:
Red piece 1: (B2) -> (C2)

<1>   F  E  C  0  0  
<2>   B  0  A  0  0  
<3>   0  D  0  2  4  
<4>   0  0  0  1  0  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
B2 C2
get R 4 0 D3 C5 E3 D5 D4 C2 A2 C1 B3 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   B  0  A  0  0  
<3>   0  D  0  2  4  
<4>   0  0  0  6  0  
<5>   0  0  3  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------8  0  7  0  0 -----
----------0  10  0  2  4 -----
----------0  0  0  6  0 -----
----------0  0  3  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 80.000000
now undo move from (2,1) to (3,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 7.500000
now undo move from (2,1) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 8.000000, threaten = 42.500000
now undo move from (2,1) to (2,2)
eatnum = 0
local_max = -41.833333
end search, score = -41.8333
fku
org(r,c) = (2,1)
rand= 11  16  10
my  = 11  12  10
org(r,c) = (2,1), tar(r,c) = (2,2), dice = 4
============================ver1
My result:
Red piece 4: (B3) -> (C3)

<1>   F  E  C  0  0  
<2>   B  0  A  0  0  
<3>   0  0  D  2  4  
<4>   0  0  0  6  0  
<5>   0  0  3  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
============================
B3 C3
get R 3 0 D3 C5 E3 D5 C3 C2 A2 C1 0 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   0  0  0  0  0  
<5>   0  0  3  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------8  0  7  0  0 -----
----------0  0  6  2  4 -----
----------0  0  0  0  0 -----
----------0  0  3  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 15.000000
now undo move from (0,2) to (1,3)
eatnum = 0
now move from (0,2) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 7.500000
now undo move from (0,2) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 43.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 43.000000, threaten = 7.500000
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -219.000000
end search, score = -219
fku
org(r,c) = (0,2)
rand= 2  7  9
my  = 2  3  9
org(r,c) = (0,2), tar(r,c) = (0,3), dice = 3
============================ver1
My result:
Red piece 3: (C1) -> (D1)

<1>   F  E  0  C  0  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   0  0  0  0  0  
<5>   0  0  3  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
C1 D1
get R 6 0 D3 B4 E3 D5 C3 C2 A2 D1 0 B1 A1

The current board:

<1>   F  E  0  C  0  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   0  3  0  0  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  0  9  0 -----
----------8  0  7  0  0 -----
----------0  0  6  2  4 -----
----------0  3  0  0  0 -----
----------0  0  0  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 45.333333, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 45.333333, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 45.333333, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 45.333333, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 45.333333, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 45.333333, threaten = 10.000000
now undo move from (0,0) to (1,1)
eatnum = 0
now move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 45.333333, threaten = 7.500000
now undo move from (0,0) to (1,0)
eatnum = 8
now move from (0,0) to (0,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 45.333333, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 45.333333, threaten = 7.500000
now undo move from (0,0) to (0,1)
eatnum = 11
local_max = -230.500000
end search, score = -230.5
fku
org(r,c) = (0,0)
rand= 0  6  12
my  = 0  1  12
org(r,c) = (0,0), tar(r,c) = (0,1), dice = 6
============================ver1
My result:
Red piece 6: (A1) -> (B1)

<1>   0  F  0  C  0  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   0  3  0  0  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
A1 B1
get R 4 0 D3 B4 E3 C4 C3 C2 A2 D1 0 0 B1

The current board:

<1>   0  F  0  C  0  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   0  3  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
----------0  12  0  9  0 -----
----------8  0  7  0  0 -----
----------0  0  6  2  4 -----
----------0  3  5  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
now undo move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
now undo move from (0,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
now undo move from (0,1) to (0,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
now undo move from (0,3) to (1,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 15.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 15.000000
now undo move from (0,3) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
now undo move from (0,3) to (0,4)
eatnum = 0
local_max = -242.166667
end search, score = -242.167
fku
org(r,c) = (0,3)
rand= 3  9  9
my  = 3  4  9
org(r,c) = (0,3), tar(r,c) = (0,4), dice = 4
============================ver1
My result:
Red piece 3: (D1) -> (E1)

<1>   0  F  0  0  C  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   0  3  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
D1 E1
get R 5 0 D3 A4 E3 C4 C3 C2 A2 E1 0 0 B1

The current board:

<1>   0  F  0  0  C  
<2>   B  0  A  0  0  
<3>   0  0  6  2  4  
<4>   3  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
----------0  12  0  0  9 -----
----------8  0  7  0  0 -----
----------0  0  6  2  4 -----
----------3  0  5  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 47.666667, threaten = 7.500000
now undo move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
now undo move from (0,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 47.666667, threaten = 7.500000
now undo move from (0,1) to (0,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 47.666667, threaten = 10.000000
now undo move from (0,4) to (1,4)
eatnum = 0
local_max = -237.666667
end search, score = -237.667
fku
org(r,c) = (0,4)
rand= 1  2  12
my  = 4  9  9
org(r,c) = (0,4), tar(r,c) = (1,4), dice = 5
============================ver1
My result:
Red piece 6: (E1) -> (E2)

<1>   0  F  0  0  0  
<2>   B  0  A  0  C  
<3>   0  0  6  2  4  
<4>   3  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
E1 E2
get R 1 0 D3 A3 E3 C4 C3 C2 A2 E2 0 0 B1

The current board:

<1>   0  F  0  0  0  
<2>   B  0  A  0  C  
<3>   3  0  6  2  4  
<4>   0  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
----------0  12  0  0  0 -----
----------8  0  7  0  9 -----
----------3  0  6  2  4 -----
----------0  0  5  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (1,2) to (2,3)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 152.666667, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 152.666667, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 152.666667, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 152.666667, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 152.666667, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 152.666667, threaten = 2.833333
now undo move from (1,2) to (2,3)
eatnum = 2
now move from (1,2) to (2,2)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 47.666667, threaten = 77.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 47.666667, threaten = 77.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 47.666667, threaten = 77.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 47.666667, threaten = 77.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 47.666667, threaten = 77.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 47.666667, threaten = 77.666667
now undo move from (1,2) to (2,2)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 82.666667, threaten = 10.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 82.666667, threaten = 10.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 82.666667, threaten = 10.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 82.666667, threaten = 10.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 82.666667, threaten = 10.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.666667, blue_a = 82.666667, threaten = 10.166667
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = -412.833333
end search, score = -412.833
fku
org(r,c) = (1,2)
rand= 7  13  7
my  = 7  8  7
org(r,c) = (1,2), tar(r,c) = (1,3), dice = 1
============================ver1
My result:
Red piece 1: (C2) -> (D2)

<1>   0  F  0  0  0  
<2>   B  0  0  A  C  
<3>   3  0  6  2  4  
<4>   0  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
C2 D2
get R 1 0 C3 A3 E3 C4 0 D2 A2 E2 0 0 B1

The current board:

<1>   0  F  0  0  0  
<2>   B  0  0  A  C  
<3>   3  0  2  0  4  
<4>   0  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
----------0  12  0  0  0 -----
----------8  0  0  7  9 -----
----------3  0  2  0  4 -----
----------0  0  5  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (1,3) to (2,4)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 157.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 157.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 157.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 157.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 157.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 157.500000, threaten = 0.333333
now undo move from (1,3) to (2,4)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.666667, blue_a = 117.666667, threaten = 2.666667
now undo move from (1,3) to (2,3)
eatnum = 0
now move from (1,3) to (1,4)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 117.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 117.666667, threaten = 2.666667
now undo move from (1,3) to (1,4)
eatnum = 9
local_max = -469.500000
end search, score = -469.5
fku
org(r,c) = (1,3)
rand= 8  9  7
my  = 8  9  7
org(r,c) = (1,3), tar(r,c) = (1,4), dice = 1
============================ver1
My result:
Red piece 1: (D2) -> (E2)

<1>   0  F  0  0  0  
<2>   B  0  0  0  A  
<3>   3  0  2  0  4  
<4>   0  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
D2 E2
get R 2 0 C3 A3 D2 C4 0 E2 A2 0 0 0 B1

The current board:

<1>   0  F  0  0  0  
<2>   B  0  0  4  A  
<3>   3  0  2  0  0  
<4>   0  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=5, piece_distance= 1, piece_value= 15
----------0  12  0  0  0 -----
----------8  0  0  4  7 -----
----------3  0  2  0  0 -----
----------0  0  5  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
now undo move from (1,0) to (2,1)
eatnum = 0
now move from (1,0) to (2,0)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 122.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 122.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 122.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 122.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 122.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.833333, blue_a = 122.500000, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 120.000000, threaten = 5.000000
now undo move from (1,0) to (1,1)
eatnum = 0
local_max = -471.833333
end search, score = -471.833
fku
org(r,c) = (1,0)
rand= 5  6  8
my  = 5  6  8
org(r,c) = (1,0), tar(r,c) = (1,1), dice = 2
============================ver1
My result:
Red piece 2: (A2) -> (B2)

<1>   0  F  0  0  0  
<2>   0  B  0  4  A  
<3>   3  0  2  0  0  
<4>   0  0  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
A2 B2
get R 4 0 0 A3 D2 C3 0 E2 B2 0 0 0 B1

The current board:

<1>   0  F  0  0  0  
<2>   0  B  0  4  A  
<3>   3  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=5, piece_distance= 2, piece_value= 225
----------0  12  0  0  0 -----
----------0  8  0  4  7 -----
----------3  0  5  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 22.500000, blue_a = 190.000000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 22.500000, blue_a = 190.000000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 22.500000, blue_a = 190.000000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 22.500000, blue_a = 190.000000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 22.500000, blue_a = 190.000000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 22.500000, blue_a = 190.000000, threaten = 10.000000
now undo move from (0,1) to (1,2)
eatnum = 0
now move from (0,1) to (1,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 25.000000, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 25.000000, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 25.000000, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 25.000000, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 25.000000, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 25.000000, blue_a = 190.000000, threaten = 5.000000
now undo move from (0,1) to (1,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.166667
now undo move from (0,1) to (0,2)
eatnum = 0
now move from (1,1) to (2,2)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 153.166667, blue_a = 120.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 153.166667, blue_a = 120.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 153.166667, blue_a = 120.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 153.166667, blue_a = 120.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 153.166667, blue_a = 120.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 153.166667, blue_a = 120.000000, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 0.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.166667, blue_a = 190.000000, threaten = 5.000000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -561.833333
end search, score = -561.833
fku
org(r,c) = (1,1)
rand= 6  7  8
my  = 6  7  8
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 4
============================ver1
My result:
Red piece 2: (B2) -> (C2)

<1>   0  F  0  0  0  
<2>   0  0  B  4  A  
<3>   3  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
============================
B2 C2
get R 1 0 0 A3 C2 C3 0 E2 0 0 0 0 B1

The current board:

<1>   0  F  0  0  0  
<2>   0  0  4  0  A  
<3>   3  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=5, piece_distance= 2, piece_value= 225
----------0  12  0  0  0 -----
----------0  0  4  0  7 -----
----------3  0  5  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 225.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 225.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 225.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 225.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 225.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 225.000000, threaten = 0.166667
now undo move from (1,4) to (2,4)
eatnum = 0
local_max = -486.833333
end search, score = -486.833
fku
org(r,c) = (1,4)
rand= 9  14  7
my  = 9  14  7
org(r,c) = (1,4), tar(r,c) = (2,4), dice = 1
============================ver1
My result:
Red piece 1: (E2) -> (E3)

<1>   0  F  0  0  0  
<2>   0  0  4  0  0  
<3>   3  0  5  0  A  
<4>   0  0  0  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
E2 E3
get R 6 0 0 A2 C2 C3 0 E3 0 0 0 0 B1

The current board:

<1>   0  F  0  0  0  
<2>   3  0  4  0  0  
<3>   0  0  5  0  A  
<4>   0  0  0  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 2, piece_value= 225
----------0  12  0  0  0 -----
----------3  0  4  0  0 -----
----------0  0  5  0  7 -----
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,1) to (1,2)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 2362.500000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 2362.500000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 2362.500000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 2362.500000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 2362.500000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 2362.500000, threaten = 7.500000
now undo move from (0,1) to (1,2)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 1800.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 1800.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 1800.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 1800.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 1800.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 1800.000000, threaten = 5.000000
now undo move from (0,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 1800.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 1800.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 1800.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 1800.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 1800.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.333333, blue_a = 1800.000000, threaten = 0.166667
now undo move from (0,1) to (0,2)
eatnum = 0
local_max = -5211.833333
end search, score = -5211.83
fku
org(r,c) = (0,1)
rand= 1  2  12
my  = 1  2  12
org(r,c) = (0,1), tar(r,c) = (0,2), dice = 6
============================ver1
My result:
Red piece 6: (B1) -> (C1)

<1>   0  0  F  0  0  
<2>   3  0  4  0  0  
<3>   0  0  5  0  A  
<4>   0  0  0  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
B1 C1
exit

###
