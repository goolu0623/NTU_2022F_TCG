* 9:0am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini C5 D5 E3 E5 D4 E4 C1 B1 A3 A1 B2 A2
* 1. B 5 D4 D3
* 2. R 6 A2 B2
* 3. B 1 C5 C4
* 4. R 3 A3 B4
* 5. B 2 D5 C4
* 6. R 6 B2 C2
* 7. B 3 E3 D3
* 8. R 1 C1 D1
* 9. B 2 C4 B3
* 10. R 6 C2 C3
* 11. B 5 E4 D3
* 12. R 4 A1 B1
* 13. B 4 E5 D4
* 14. R 4 B1 C1
* 15. B 2 B3 A2
* 16. R 3 B4 C5
* 17. B 3 D4 C3
* 18. R 6 C1 D1
* 19. B 1 A2 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672275601419
1. 1672275601419
2. 1672275601481
3. 1672275601543
4. 1672275601606
5. 1672275601669
6. 1672275601731
7. 1672275601793
8. 1672275601856
9. 1672275601917
10. 1672275601979
11. 1672275602041
12. 1672275602103
13. 1672275602165
14. 1672275602228
15. 1672275602291
16. 1672275602353
17. 1672275602415
18. 1672275602477
19. 1672275602538
Points   Total
   1         3
   2         3
   3         4
   4         3
   5         2
   6         4

# 8 10 12 14 16 18 20 22 24 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 6 C5 D5 E3 E5 D3 E4 C1 B1 A3 A1 B2 A2
A2 B2
get R 3 C4 D5 E3 E5 D3 E4 C1 B1 A3 A1 0 B2
A3 B4
get R 6 0 C4 E3 E5 D3 E4 C1 B1 B4 A1 0 B2
B2 C2
get R 1 0 C4 D3 E5 0 E4 C1 B1 B4 A1 0 C2
C1 D1
get R 6 0 B3 D3 E5 0 E4 D1 B1 B4 A1 0 C2
C2 C3
get R 4 0 B3 0 E5 0 D3 D1 B1 B4 A1 0 C3
A1 B1
get R 4 0 B3 0 D4 0 D3 D1 0 B4 B1 0 C3
B1 C1
get R 3 0 A2 0 D4 0 D3 D1 0 B4 C1 0 C3
B4 C5
get R 6 0 A2 0 C3 0 D3 D1 0 C5 C1 0 0
C1 D1
exit

# 8 10 12 14 16 18 20 22 24 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 6 C5 D5 E3 E5 D3 E4 C1 B1 A3 A1 B2 A2

The current board:

<1>   D  B  A  0  0  
<2>   F  E  0  0  0  
<3>   C  0  0  5  3  
<4>   0  0  0  0  6  
<5>   0  0  1  2  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  8  7  0  0 -----
----------12  11  0  0  0 -----
----------9  0  0  5  3 -----
----------0  0  0  0  6 -----
----------0  0  1  2  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (2,1)
eatnum = 0
now move from (1,0) to (2,0)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 9
now move from (1,0) to (1,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (1,1)
eatnum = 11
local_max = -14.166667
end search, score = -14.1667
fku
org(r,c) = (1,0)
rand= 5  6  12
my  = 5  6  12
org(r,c) = (1,0), tar(r,c) = (1,1), dice = 6
============================ver1
My result:
Red piece 6: (A2) -> (B2)

<1>   D  B  A  0  0  
<2>   0  F  0  0  0  
<3>   C  0  0  5  3  
<4>   0  0  0  0  6  
<5>   0  0  1  2  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A2 B2
get R 3 C4 D5 E3 E5 D3 E4 C1 B1 A3 A1 0 B2

The current board:

<1>   D  B  A  0  0  
<2>   0  F  0  0  0  
<3>   C  0  0  5  3  
<4>   0  0  1  0  6  
<5>   0  0  0  2  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  8  7  0  0 -----
----------0  12  0  0  0 -----
----------9  0  0  5  3 -----
----------0  0  1  0  6 -----
----------0  0  0  2  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.000000
now undo move from (2,0) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.500000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -25.833333
end search, score = -25.8333
fku
org(r,c) = (2,0)
rand= 10  11  9
my  = 10  16  9
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 3
============================ver1
My result:
Red piece 3: (A3) -> (B4)

<1>   D  B  A  0  0  
<2>   0  F  0  0  0  
<3>   0  0  0  5  3  
<4>   0  C  1  0  6  
<5>   0  0  0  2  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A3 B4
get R 6 0 C4 E3 E5 D3 E4 C1 B1 B4 A1 0 B2

The current board:

<1>   D  B  A  0  0  
<2>   0  F  0  0  0  
<3>   0  0  0  5  3  
<4>   0  C  2  0  6  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  8  7  0  0 -----
----------0  12  0  0  0 -----
----------0  0  0  5  3 -----
----------0  9  2  0  6 -----
----------0  0  0  0  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 8.000000, threaten = 75.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 8.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 8.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 8.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 8.000000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 8.000000, threaten = 75.000000
now undo move from (1,1) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 5.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 2.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 2.500000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -34.333333
end search, score = -34.3333
fku
org(r,c) = (1,1)
rand= 6  11  12
my  = 6  7  12
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 6
============================ver1
My result:
Red piece 6: (B2) -> (C2)

<1>   D  B  A  0  0  
<2>   0  0  F  0  0  
<3>   0  0  0  5  3  
<4>   0  C  2  0  6  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
B2 C2
get R 1 0 C4 D3 E5 0 E4 C1 B1 B4 A1 0 C2

The current board:

<1>   D  B  A  0  0  
<2>   0  0  F  0  0  
<3>   0  0  0  3  0  
<4>   0  C  2  0  6  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  8  7  0  0 -----
----------0  0  12  0  0 -----
----------0  0  0  3  0 -----
----------0  9  2  0  6 -----
----------0  0  0  0  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.166667, threaten = 5.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.166667, threaten = 5.000000
now undo move from (0,2) to (1,3)
eatnum = 0
now move from (0,2) to (1,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
now undo move from (0,2) to (1,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.500000
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -27.000000
end search, score = -27
fku
org(r,c) = (0,2)
rand= 2  8  7
my  = 2  3  7
org(r,c) = (0,2), tar(r,c) = (0,3), dice = 1
============================ver1
My result:
Red piece 1: (C1) -> (D1)

<1>   D  B  0  A  0  
<2>   0  0  F  0  0  
<3>   0  0  0  3  0  
<4>   0  C  2  0  6  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
C1 D1
get R 6 0 B3 D3 E5 0 E4 D1 B1 B4 A1 0 C2

The current board:

<1>   D  B  0  A  0  
<2>   0  0  F  0  0  
<3>   0  2  0  3  0  
<4>   0  C  0  0  6  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  8  0  7  0 -----
----------0  0  12  0  0 -----
----------0  2  0  3  0 -----
----------0  9  0  0  6 -----
----------0  0  0  0  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (1,2) to (2,3)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 113.333333, threaten = 75.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 113.333333, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 113.333333, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 113.333333, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 113.333333, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 113.333333, threaten = 75.000000
now undo move from (1,2) to (2,3)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 78.166667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 78.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 78.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 78.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 78.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 78.166667, threaten = 0.000000
now undo move from (1,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 78.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 78.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 78.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 78.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 78.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 78.166667, threaten = 2.500000
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = -234.500000
end search, score = -234.5
fku
org(r,c) = (1,2)
rand= 7  8  12
my  = 7  12  12
org(r,c) = (1,2), tar(r,c) = (2,2), dice = 6
============================ver1
My result:
Red piece 6: (C2) -> (C3)

<1>   D  B  0  A  0  
<2>   0  0  0  0  0  
<3>   0  2  F  3  0  
<4>   0  C  0  0  6  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
C2 C3
get R 4 0 B3 0 E5 0 D3 D1 B1 B4 A1 0 C3

The current board:

<1>   D  B  0  A  0  
<2>   0  0  0  0  0  
<3>   0  2  F  6  0  
<4>   0  C  0  0  0  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
----------10  8  0  7  0 -----
----------0  0  0  0  0 -----
----------0  2  12  6  0 -----
----------0  9  0  0  0 -----
----------0  0  0  0  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 118.000000, threaten = 7.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 118.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 118.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 118.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 118.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 118.000000, threaten = 7.500000
now undo move from (0,0) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 118.000000, threaten = 0.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 118.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 118.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 118.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 118.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.166667, blue_a = 118.000000, threaten = 0.500000
now undo move from (0,0) to (1,0)
eatnum = 0
now move from (0,0) to (0,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 118.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 118.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 118.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 118.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 118.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 118.000000, threaten = 0.000000
now undo move from (0,0) to (0,1)
eatnum = 8
local_max = -273.333333
end search, score = -273.333
fku
org(r,c) = (0,0)
rand= 0  5  10
my  = 0  1  10
org(r,c) = (0,0), tar(r,c) = (0,1), dice = 4
============================ver1
My result:
Red piece 4: (A1) -> (B1)

<1>   0  D  0  A  0  
<2>   0  0  0  0  0  
<3>   0  2  F  6  0  
<4>   0  C  0  0  0  
<5>   0  0  0  0  4  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
A1 B1
get R 4 0 B3 0 D4 0 D3 D1 0 B4 B1 0 C3

The current board:

<1>   0  D  0  A  0  
<2>   0  0  0  0  0  
<3>   0  2  F  6  0  
<4>   0  C  0  4  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
----------0  10  0  7  0 -----
----------0  0  0  0  0 -----
----------0  2  12  6  0 -----
----------0  9  0  4  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 117.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 117.500000
now undo move from (0,1) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 120.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 120.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 120.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 120.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 120.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.333333, blue_a = 125.000000, threaten = 120.000000
now undo move from (0,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 125.000000, threaten = 112.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 125.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 125.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 125.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 125.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 125.000000, threaten = 112.500000
now undo move from (0,1) to (0,2)
eatnum = 0
local_max = -406.833333
end search, score = -406.833
fku
org(r,c) = (0,1)
rand= 1  2  10
my  = 1  2  10
org(r,c) = (0,1), tar(r,c) = (0,2), dice = 4
============================ver1
My result:
Red piece 4: (B1) -> (C1)

<1>   0  0  D  A  0  
<2>   0  0  0  0  0  
<3>   0  2  F  6  0  
<4>   0  C  0  4  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
B1 C1
get R 3 0 A2 0 D4 0 D3 D1 0 B4 C1 0 C3

The current board:

<1>   0  0  D  A  0  
<2>   2  0  0  0  0  
<3>   0  0  F  6  0  
<4>   0  C  0  4  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
----------0  0  10  7  0 -----
----------2  0  0  0  0 -----
----------0  0  12  6  0 -----
----------0  9  0  4  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
now undo move from (3,1) to (4,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.666667, blue_a = 1700.000000, threaten = 112.500000
now undo move from (3,1) to (4,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.666667, blue_a = 1700.000000, threaten = 112.500000
now undo move from (3,1) to (3,2)
eatnum = 0
local_max = -5061.833333
end search, score = -5061.83
fku
org(r,c) = (3,1)
rand= 16  17  9
my  = 16  22  9
org(r,c) = (3,1), tar(r,c) = (4,2), dice = 3
============================ver1
My result:
Red piece 3: (B4) -> (C5)

<1>   0  0  D  A  0  
<2>   2  0  0  0  0  
<3>   0  0  F  6  0  
<4>   0  0  0  4  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
B4 C5
get R 6 0 A2 0 C3 0 D3 D1 0 C5 C1 0 0

The current board:

<1>   0  0  D  A  0  
<2>   2  0  0  0  0  
<3>   0  0  4  6  0  
<4>   0  0  0  0  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 2, piece_value= 225
----------0  0  10  7  0 -----
----------2  0  0  0  0 -----
----------0  0  4  6  0 -----
----------0  0  0  0  0 -----
----------0  0  9  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 5.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 5.000000
now undo move from (0,2) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 1805.000000, threaten = 12.500000
now undo move from (0,2) to (1,2)
eatnum = 0
now move from (0,2) to (0,3)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 1805.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 1805.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 1805.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 1805.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 1805.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 1805.000000, threaten = 0.000000
now undo move from (0,2) to (0,3)
eatnum = 7
local_max = -5302.000000
end search, score = -5302
fku
org(r,c) = (0,2)
rand= 2  8  10
my  = 2  3  10
org(r,c) = (0,2), tar(r,c) = (0,3), dice = 6
============================ver1
My result:
Red piece 4: (C1) -> (D1)

<1>   0  0  0  D  0  
<2>   2  0  0  0  0  
<3>   0  0  4  6  0  
<4>   0  0  0  0  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
C1 D1
exit

###
