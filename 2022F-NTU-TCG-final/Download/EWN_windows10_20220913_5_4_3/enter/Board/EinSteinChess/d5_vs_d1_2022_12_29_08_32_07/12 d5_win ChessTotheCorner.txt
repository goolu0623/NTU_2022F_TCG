* 8:33am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini E3 E4 D5 E5 D4 C5 A3 A2 B1 A1 B2 C1
* 1. B 6 C5 C4
* 2. R 3 B1 C2
* 3. B 6 C4 B4
* 4. R 5 B2 C2
* 5. B 1 E3 E2
* 6. R 3 A1 B2
* 7. B 4 E5 D4
* 8. R 1 A3 B4
* 9. B 3 D5 C4
* 10. R 1 B4 C5
* 11. B 6 D4 C4
* 12. R 2 A2 B2
* 13. B 6 C4 B3
* 14. R 2 B2 B3
* 15. B 6 E4 D4
* 16. R 3 B3 C4
* 17. B 2 D4 C4
* 18. R 6 C1 C2
* 19. B 1 E2 D1
* 20. R 6 C2 D3
* 21. B 5 C4 B3
* 22. R 3 D3 E4
* 23. B 1 D1 C1
* 24. R 4 C5 D5
* 25. B 5 B3 A2
* 26. R 2 E4 E5
* ChessTotheCorner d5 wins
* Comment 0 0
0. 1672274001849
1. 1672274001849
2. 1672274001911
3. 1672274001973
4. 1672274002036
5. 1672274002098
6. 1672274002160
7. 1672274002222
8. 1672274002284
9. 1672274002346
10. 1672274002409
11. 1672274002471
12. 1672274002532
13. 1672274002595
14. 1672274002656
15. 1672274002719
16. 1672274002780
17. 1672274002841
18. 1672274002903
19. 1672274002964
20. 1672274003027
21. 1672274003088
22. 1672274003151
23. 1672274003213
24. 1672274003275
25. 1672274003337
26. 1672274003398
Points   Total
   1         5
   2         4
   3         5
   4         2
   5         3
   6         7

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 3 E3 E4 D5 E5 D4 C4 A3 A2 B1 A1 B2 C1
B1 C2
get R 5 E3 E4 D5 E5 D4 B4 A3 A2 C2 A1 B2 C1
B2 C2
get R 3 E2 E4 D5 E5 D4 B4 A3 A2 0 A1 C2 C1
A1 B2
get R 1 E2 E4 D5 D4 0 B4 A3 A2 0 B2 C2 C1
A3 B4
get R 1 E2 E4 C4 D4 0 0 B4 A2 0 B2 C2 C1
B4 C5
get R 2 E2 E4 0 C4 0 0 C5 A2 0 B2 C2 C1
A2 B2
get R 2 E2 E4 0 B3 0 0 C5 B2 0 0 C2 C1
B2 B3
get R 3 E2 D4 0 0 0 0 C5 B3 0 0 C2 C1
B3 C4
get R 6 E2 C4 0 0 0 0 C5 0 0 0 C2 C1
C1 C2
get R 6 D1 C4 0 0 0 0 C5 0 0 0 0 C2
C2 D3
get R 3 D1 B3 0 0 0 0 C5 0 0 0 0 D3
D3 E4
get R 4 C1 B3 0 0 0 0 C5 0 0 0 0 E4
C5 D5
get R 2 C1 A2 0 0 0 0 D5 0 0 0 0 E4
E4 E5
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 3 E3 E4 D5 E5 D4 C4 A3 A2 B1 A1 B2 C1

The current board:

<1>   D  C  F  0  0  
<2>   B  E  0  0  0  
<3>   A  0  0  0  1  
<4>   0  0  6  5  2  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  9  12  0  0 -----
----------8  11  0  0  0 -----
----------7  0  0  0  1 -----
----------0  0  6  5  2 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,1) to (1,2)
eatnum = 0
now move from (0,1) to (1,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,1) to (1,1)
eatnum = 11
now move from (0,1) to (0,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,1) to (0,2)
eatnum = 12
local_max = -22.666667
end search, score = -22.6667
fku
org(r,c) = (0,1)
rand= 1  6  9
my  = 1  7  9
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 3
============================ver1
My result:
Red piece 3: (B1) -> (C2)

<1>   D  0  F  0  0  
<2>   B  E  C  0  0  
<3>   A  0  0  0  1  
<4>   0  0  6  5  2  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
B1 C2
get R 5 E3 E4 D5 E5 D4 B4 A3 A2 C2 A1 B2 C1

The current board:

<1>   D  0  F  0  0  
<2>   B  E  C  0  0  
<3>   A  0  0  0  1  
<4>   0  6  0  5  2  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  0  12  0  0 -----
----------8  11  9  0  0 -----
----------7  0  0  0  1 -----
----------0  6  0  5  2 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.666667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.666667
now undo move from (1,1) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.666667
now undo move from (1,1) to (2,1)
eatnum = 0
now move from (1,1) to (1,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
now undo move from (1,1) to (1,2)
eatnum = 9
local_max = -25.000000
end search, score = -25
fku
org(r,c) = (1,1)
rand= 6  12  11
my  = 6  7  11
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 5
============================ver1
My result:
Red piece 5: (B2) -> (C2)

<1>   D  0  F  0  0  
<2>   B  0  E  0  0  
<3>   A  0  0  0  1  
<4>   0  6  0  5  2  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B2 C2
get R 3 E2 E4 D5 E5 D4 B4 A3 A2 0 A1 C2 C1

The current board:

<1>   D  0  F  0  0  
<2>   B  0  E  0  1  
<3>   A  0  0  0  0  
<4>   0  6  0  5  2  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  0  12  0  0 -----
----------8  0  11  0  1 -----
----------7  0  0  0  0 -----
----------0  6  0  5  2 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
now undo move from (0,0) to (1,1)
eatnum = 0
now move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.666667, blue_a = 5.666667, threaten = 0.166667
now undo move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
now undo move from (0,0) to (0,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 2.666667
now undo move from (1,0) to (2,1)
eatnum = 0
now move from (1,0) to (2,0)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
now undo move from (1,0) to (2,0)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 5.666667, threaten = 0.166667
now undo move from (1,0) to (1,1)
eatnum = 0
local_max = -20.333333
end search, score = -20.3333
fku
org(r,c) = (0,0)
rand= 0  6  10
my  = 0  6  10
org(r,c) = (0,0), tar(r,c) = (1,1), dice = 3
============================ver1
My result:
Red piece 4: (A1) -> (B2)

<1>   0  0  F  0  0  
<2>   B  D  E  0  1  
<3>   A  0  0  0  0  
<4>   0  6  0  5  2  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A1 B2
get R 1 E2 E4 D5 D4 0 B4 A3 A2 0 B2 C2 C1

The current board:

<1>   0  0  F  0  0  
<2>   B  D  E  0  1  
<3>   A  0  0  0  0  
<4>   0  6  0  4  2  
<5>   0  0  0  3  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------8  10  11  0  1 -----
----------7  0  0  0  0 -----
----------0  6  0  4  2 -----
----------0  0  0  3  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (2,0) to (3,1)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 8.000000, threaten = 0.000000
now undo move from (2,0) to (3,1)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 0.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -29.500000
end search, score = -29.5
fku
org(r,c) = (2,0)
rand= 10  16  7
my  = 10  16  7
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 1
============================ver1
My result:
Red piece 1: (A3) -> (B4)

<1>   0  0  F  0  0  
<2>   B  D  E  0  1  
<3>   0  0  0  0  0  
<4>   0  A  0  4  2  
<5>   0  0  0  3  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
A3 B4
get R 1 E2 E4 C4 D4 0 0 B4 A2 0 B2 C2 C1

The current board:

<1>   0  0  F  0  0  
<2>   B  D  E  0  1  
<3>   0  0  0  0  0  
<4>   0  A  3  4  2  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------8  10  11  0  1 -----
----------0  0  0  0  0 -----
----------0  7  3  4  2 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.333333, threaten = 0.000000
now undo move from (3,1) to (4,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.333333, threaten = 0.000000
now undo move from (3,1) to (4,1)
eatnum = 0
now move from (3,1) to (3,2)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
now undo move from (3,1) to (3,2)
eatnum = 3
local_max = -6.166667
end search, score = -6.16667
fku
org(r,c) = (3,1)
rand= 16  22  7
my  = 16  22  7
org(r,c) = (3,1), tar(r,c) = (4,2), dice = 1
============================ver1
My result:
Red piece 1: (B4) -> (C5)

<1>   0  0  F  0  0  
<2>   B  D  E  0  1  
<3>   0  0  0  0  0  
<4>   0  0  3  4  2  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
B4 C5
get R 2 E2 E4 0 C4 0 0 C5 A2 0 B2 C2 C1

The current board:

<1>   0  0  F  0  0  
<2>   B  D  E  0  1  
<3>   0  0  0  0  0  
<4>   0  0  4  0  2  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  12  0  0 -----
----------8  10  11  0  1 -----
----------0  0  0  0  0 -----
----------0  0  4  0  2 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 50.166667, blue_a = 10.500000, threaten = 10.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 50.166667, blue_a = 10.500000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 50.166667, blue_a = 10.500000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 50.166667, blue_a = 10.500000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 50.166667, blue_a = 10.500000, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 50.166667, blue_a = 10.500000, threaten = 10.000000
now undo move from (1,0) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.500000, blue_a = 10.500000, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 0
now move from (1,0) to (1,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 10.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 10.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 10.500000, threaten = 0.000000
now undo move from (1,0) to (1,1)
eatnum = 10
local_max = 0.166667
end search, score = 0.166667
fku
org(r,c) = (1,0)
rand= 5  10  8
my  = 5  6  8
org(r,c) = (1,0), tar(r,c) = (1,1), dice = 2
============================ver1
My result:
Red piece 2: (A2) -> (B2)

<1>   0  0  F  0  0  
<2>   0  B  E  0  1  
<3>   0  0  0  0  0  
<4>   0  0  4  0  2  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
A2 B2
get R 2 E2 E4 0 B3 0 0 C5 B2 0 0 C2 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  B  E  0  1  
<3>   0  4  0  0  0  
<4>   0  0  0  0  2  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  12  0  0 -----
----------0  8  11  0  1 -----
----------0  4  0  0  0 -----
----------0  0  0  0  2 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 150.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 150.500000, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 0
now move from (1,1) to (2,1)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 1.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 1.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 1.000000, threaten = 0.000000
now undo move from (1,1) to (2,1)
eatnum = 4
now move from (1,1) to (1,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 48.166667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 48.166667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 48.166667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 48.166667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 48.166667, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 48.166667, blue_a = 150.500000, threaten = 0.000000
now undo move from (1,1) to (1,2)
eatnum = 11
local_max = 47.666667
end search, score = 47.6667
fku
org(r,c) = (1,1)
rand= 6  11  8
my  = 6  11  8
org(r,c) = (1,1), tar(r,c) = (2,1), dice = 2
============================ver1
My result:
Red piece 2: (B2) -> (B3)

<1>   0  0  F  0  0  
<2>   0  0  E  0  1  
<3>   0  B  0  0  0  
<4>   0  0  0  0  2  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 4
============================
B2 B3
get R 3 E2 D4 0 0 0 0 C5 B3 0 0 C2 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  0  E  0  1  
<3>   0  B  0  0  0  
<4>   0  0  0  2  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  12  0  0 -----
----------0  0  11  0  1 -----
----------0  8  0  0  0 -----
----------0  0  0  2  0 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
now undo move from (1,2) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
now undo move from (1,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
now undo move from (1,2) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 0.000000
now undo move from (2,1) to (3,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 52.666667, blue_a = 12.666667, threaten = 0.000000
now undo move from (2,1) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 157.666667, blue_a = 12.666667, threaten = 187.500000
now undo move from (2,1) to (2,2)
eatnum = 0
local_max = 94.333333
end search, score = 94.3333
fku
org(r,c) = (2,1)
rand= 11  17  8
my  = 11  17  8
org(r,c) = (2,1), tar(r,c) = (3,2), dice = 3
============================ver1
My result:
Red piece 2: (B3) -> (C4)

<1>   0  0  F  0  0  
<2>   0  0  E  0  1  
<3>   0  0  0  0  0  
<4>   0  0  B  2  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 4
============================
B3 C4
get R 6 E2 C4 0 0 0 0 C5 0 0 0 C2 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  0  E  0  1  
<3>   0  0  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 3
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  12  0  0 -----
----------0  0  11  0  1 -----
----------0  0  0  0  0 -----
----------0  0  2  0  0 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 162.500000, blue_a = 12.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 162.500000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 162.500000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 162.500000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 162.500000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 162.500000, blue_a = 12.666667, threaten = 0.000000
now undo move from (0,2) to (1,3)
eatnum = 0
now move from (0,2) to (1,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 12.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 12.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 12.666667, threaten = 0.000000
now undo move from (0,2) to (1,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 160.166667, blue_a = 12.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 160.166667, blue_a = 12.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 160.166667, blue_a = 12.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 160.166667, blue_a = 12.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 160.166667, blue_a = 12.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 160.166667, blue_a = 12.666667, threaten = 0.166667
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = 136.666667
end search, score = 136.667
fku
org(r,c) = (0,2)
rand= 2  3  12
my  = 2  7  12
org(r,c) = (0,2), tar(r,c) = (1,2), dice = 6
============================ver1
My result:
Red piece 6: (C1) -> (C2)

<1>   0  0  0  0  0  
<2>   0  0  F  0  1  
<3>   0  0  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
C1 C2
get R 6 D1 C4 0 0 0 0 C5 0 0 0 0 C2

The current board:

<1>   0  0  0  1  0  
<2>   0  0  F  0  0  
<3>   0  0  0  0  0  
<4>   0  0  2  0  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  0  1  0 -----
----------0  0  12  0  0 -----
----------0  0  0  0  0 -----
----------0  0  2  0  0 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 0.000000
now undo move from (1,2) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 187.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 15.000000, threaten = 187.500000
now undo move from (1,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 15.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 200.000000, blue_a = 15.000000, threaten = 0.000000
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = 300.000000
end search, score = 300
fku
org(r,c) = (1,2)
rand= 7  13  12
my  = 7  13  12
org(r,c) = (1,2), tar(r,c) = (2,3), dice = 6
============================ver1
My result:
Red piece 6: (C2) -> (D3)

<1>   0  0  0  1  0  
<2>   0  0  0  0  0  
<3>   0  0  0  F  0  
<4>   0  0  2  0  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
C2 D3
get R 3 D1 B3 0 0 0 0 C5 0 0 0 0 D3

The current board:

<1>   0  0  0  1  0  
<2>   0  0  0  0  0  
<3>   0  2  0  F  0  
<4>   0  0  0  0  0  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  0  1  0 -----
----------0  0  0  0  0 -----
----------0  2  0  12  0 -----
----------0  0  0  0  0 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
now undo move from (2,3) to (3,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
now undo move from (2,3) to (3,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 375.000000, blue_a = 190.000000, threaten = 0.000000
now undo move from (2,3) to (2,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3000.000000, blue_a = 190.000000, threaten = 0.000000
now undo move from (4,2) to (4,3)
eatnum = 0
local_max = 2050.000000
end search, score = 2050
fku
org(r,c) = (2,3)
rand= 13  18  12
my  = 13  19  12
org(r,c) = (2,3), tar(r,c) = (3,4), dice = 3
============================ver1
My result:
Red piece 6: (D3) -> (E4)

<1>   0  0  0  1  0  
<2>   0  0  0  0  0  
<3>   0  2  0  0  0  
<4>   0  0  0  0  F  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
D3 E4
get R 4 C1 B3 0 0 0 0 C5 0 0 0 0 E4

The current board:

<1>   0  0  1  0  0  
<2>   0  0  0  0  0  
<3>   0  2  0  0  0  
<4>   0  0  0  0  F  
<5>   0  0  A  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=1, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=12, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 2, piece_value= 225
----------0  0  1  0  0 -----
----------0  0  0  0  0 -----
----------0  2  0  0  0 -----
----------0  0  0  0  12 -----
----------0  0  7  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
red reach: 
new local
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
now undo move from (3,4) to (4,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5625.000000, blue_a = 225.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5625.000000, blue_a = 225.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5625.000000, blue_a = 225.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5625.000000, blue_a = 225.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5625.000000, blue_a = 225.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5625.000000, blue_a = 225.000000, threaten = 0.000000
now undo move from (4,2) to (4,3)
eatnum = 0
local_max = 4500.000000
end search, score = 4500
fku
org(r,c) = (4,2)
rand= 22  23  7
my  = 22  23  7
org(r,c) = (4,2), tar(r,c) = (4,3), dice = 4
============================ver1
My result:
Red piece 1: (C5) -> (D5)

<1>   0  0  1  0  0  
<2>   0  0  0  0  0  
<3>   0  2  0  0  0  
<4>   0  0  0  0  F  
<5>   0  0  0  A  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
C5 D5
get R 2 C1 A2 0 0 0 0 D5 0 0 0 0 E4

The current board:

<1>   0  0  1  0  0  
<2>   2  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  0  F  
<5>   0  0  0  A  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=1, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=12, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 3, piece_value= 3375
----------0  0  1  0  0 -----
----------2  0  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  0  12 -----
----------0  0  0  7  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
red reach: 
new local
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
now undo move from (3,4) to (4,4)
eatnum = 0
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
now undo move from (4,3) to (4,4)
eatnum = 0
local_max = -0.000000
end search, score = -2.22507e-308
fku
org(r,c) = (3,4)
rand= 23  24  7
my  = 19  24  12
org(r,c) = (3,4), tar(r,c) = (4,4), dice = 2
============================ver1
My result:
Red piece 1: (E4) -> (E5)

<1>   0  0  1  0  0  
<2>   2  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  A  F  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
E4 E5
exit

###
