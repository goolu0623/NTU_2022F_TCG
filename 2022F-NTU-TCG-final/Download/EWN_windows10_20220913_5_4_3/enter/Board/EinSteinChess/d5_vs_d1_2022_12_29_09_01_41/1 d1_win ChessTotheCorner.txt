* 9:1am Dec 29, 2022
* d5 vs d1
* order RB* board 5 6* time 240 0 0
* ini D4 E4 E3 D5 E5 C5 B2 A2 A3 B1 A1 C1
* 1. R 4 B1 B2
* 2. B 6 C5 C4
* 3. R 4 B2 B3
* 4. B 3 E3 D3
* 5. R 3 A3 A4
* 6. B 1 D4 C3
* 7. R 5 A1 A2
* 8. B 6 C4 C3
* 9. R 1 A4 A5
* 10. B 6 C3 B2
* 11. R 5 A2 A3
* 12. B 1 E4 D3
* 13. R 4 B3 B4
* 14. B 2 D3 C3
* 15. R 2 A5 B5
* 16. B 4 D5 C4
* 17. R 4 B4 B5
* 18. B 2 C3 B2
* 19. R 5 A3 B3
* 20. B 3 C4 B3
* 21. R 2 B5 C5
* 22. B 3 B3 A2
* 23. R 5 C5 D5
* 24. B 4 A2 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672275701965
1. 1672275701965
2. 1672275702029
3. 1672275702092
4. 1672275702154
5. 1672275702217
6. 1672275702277
7. 1672275702341
8. 1672275702403
9. 1672275702464
10. 1672275702527
11. 1672275702590
12. 1672275702651
13. 1672275702712
14. 1672275702776
15. 1672275702837
16. 1672275702900
17. 1672275702961
18. 1672275703026
19. 1672275703087
20. 1672275703149
21. 1672275703210
22. 1672275703275
23. 1672275703338
24. 1672275703398
Points   Total
   1         3
   2         4
   3         4
   4         6
   5         4
   6         3

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D4 E4 E3 D5 E5 C5 B2 A2 A3 B1 A1 C1
B1 B2
get R 4 D4 E4 E3 D5 E5 C4 0 A2 A3 B2 A1 C1
B2 B3
get R 3 D4 E4 D3 D5 E5 C4 0 A2 A3 B3 A1 C1
A3 A4
get R 5 C3 E4 D3 D5 E5 C4 0 A2 A4 B3 A1 C1
A1 A2
get R 1 0 E4 D3 D5 E5 C3 0 0 A4 B3 A2 C1
A4 A5
get R 5 0 E4 D3 D5 E5 B2 0 0 A5 B3 A2 C1
A2 A3
get R 4 0 D3 0 D5 E5 B2 0 0 A5 B3 A3 C1
B3 B4
get R 2 0 C3 0 D5 E5 B2 0 0 A5 B4 A3 C1
A5 B5
get R 4 0 C3 0 C4 E5 B2 0 0 B5 B4 A3 C1
B4 B5
get R 5 0 B2 0 C4 E5 0 0 0 0 B5 A3 C1
A3 B3
get R 2 0 B2 0 B3 E5 0 0 0 0 B5 0 C1
B5 C5
get R 5 0 B2 0 A2 E5 0 0 0 0 C5 0 C1
C5 D5
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D4 E4 E3 D5 E5 C5 B2 A2 A3 B1 A1 C1

The current board:

<1>   E  D  F  0  0  
<2>   B  A  0  0  0  
<3>   C  0  0  0  3  
<4>   0  0  0  1  2  
<5>   0  0  6  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------11  10  12  0  0 -----
----------8  7  0  0  0 -----
----------9  0  0  0  3 -----
----------0  0  0  1  2 -----
----------0  0  6  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now move from (0,1) to (1,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,1) to (1,2)
eatnum = 10
now move from (0,1) to (1,1)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,1) to (1,1)
eatnum = 7
now move from (0,1) to (0,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,1) to (0,2)
eatnum = 12
local_max = -14.333333
end search, score = -14.3333
fku
org(r,c) = (0,1)
illegal!
rand= 1  6  10
my  = 1  7  0
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 4
============================ver1
My result:
Red piece 4: (B1) -> (B2)

<1>   E  0  F  0  0  
<2>   B  D  0  0  0  
<3>   C  0  0  0  3  
<4>   0  0  0  1  2  
<5>   0  0  6  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B1 B2
get R 4 D4 E4 E3 D5 E5 C4 0 A2 A3 B2 A1 C1

The current board:

<1>   E  0  F  0  0  
<2>   B  D  0  0  0  
<3>   C  0  0  0  3  
<4>   0  0  6  1  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------11  0  12  0  0 -----
----------8  10  0  0  0 -----
----------9  0  0  0  3 -----
----------0  0  6  1  2 -----
----------0  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 5.666667, threaten = 75.000000
now move from (1,1) to (2,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 5.000000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -32.833333
end search, score = -32.8333
fku
org(r,c) = (1,1)
illegal!
rand= 6  11  10
my  = 6  12  0
org(r,c) = (1,1), tar(r,c) = (2,2), dice = 4
============================ver1
My result:
Red piece 4: (B2) -> (B3)

<1>   E  0  F  0  0  
<2>   B  0  0  0  0  
<3>   C  D  0  0  3  
<4>   0  0  6  1  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B2 B3
get R 3 D4 E4 D3 D5 E5 C4 0 A2 A3 B3 A1 C1

The current board:

<1>   E  0  F  0  0  
<2>   B  0  0  0  0  
<3>   C  D  0  3  0  
<4>   0  0  6  1  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------11  0  12  0  0 -----
----------8  0  0  0  0 -----
----------9  10  0  3  0 -----
----------0  0  6  1  2 -----
----------0  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
now move from (2,0) to (3,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
now undo move from (2,0) to (3,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
now undo move from (2,0) to (3,0)
eatnum = 0
now move from (2,0) to (2,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 0.000000
now undo move from (2,0) to (2,1)
eatnum = 10
local_max = -42.166667
end search, score = -42.1667
fku
org(r,c) = (2,0)
illegal!
rand= 10  15  9
my  = 10  11  0
org(r,c) = (2,0), tar(r,c) = (2,1), dice = 3
============================ver1
My result:
Red piece 3: (A3) -> (A4)

<1>   E  0  F  0  0  
<2>   B  0  0  0  0  
<3>   0  D  0  3  0  
<4>   C  0  6  1  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A3 A4
get R 5 C3 E4 D3 D5 E5 C4 0 A2 A4 B3 A1 C1

The current board:

<1>   E  0  F  0  0  
<2>   B  0  0  0  0  
<3>   0  D  1  3  0  
<4>   C  0  6  0  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 2, piece_value= 225
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------11  0  12  0  0 -----
----------8  0  0  0  0 -----
----------0  10  1  3  0 -----
----------9  0  6  0  2 -----
----------0  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 43.000000, threaten = 5.000000
now move from (0,0) to (1,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 2.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 43.000000, threaten = 2.500000
now undo move from (0,0) to (1,1)
eatnum = 11
now move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
now undo move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 43.000000, threaten = 2.666667
now undo move from (0,0) to (0,1)
eatnum = 0
local_max = -254.666667
end search, score = -254.667
fku
org(r,c) = (0,0)
illegal!
rand= 0  5  11
my  = 0  6  0
org(r,c) = (0,0), tar(r,c) = (1,1), dice = 5
============================ver1
My result:
Red piece 5: (A1) -> (A2)

<1>   0  0  F  0  0  
<2>   E  0  0  0  0  
<3>   0  D  1  3  0  
<4>   C  0  6  0  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 4
============================
A1 A2
get R 1 0 E4 D3 D5 E5 C3 0 0 A4 B3 A2 C1

The current board:

<1>   0  0  F  0  0  
<2>   E  0  0  0  0  
<3>   0  D  6  3  0  
<4>   C  0  0  0  2  
<5>   0  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------11  0  0  0  0 -----
----------0  10  6  3  0 -----
----------9  0  0  0  2 -----
----------0  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
now move from (3,0) to (4,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
now undo move from (3,0) to (4,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 40.666667, threaten = 0.000000
now undo move from (3,0) to (4,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 40.666667, threaten = 0.000000
now undo move from (3,0) to (3,1)
eatnum = 0
local_max = -193.000000
end search, score = -193
fku
org(r,c) = (3,0)
illegal!
rand= 15  20  9
my  = 15  21  0
org(r,c) = (3,0), tar(r,c) = (4,1), dice = 1
============================ver1
My result:
Red piece 3: (A4) -> (A5)

<1>   0  0  F  0  0  
<2>   E  0  0  0  0  
<3>   0  D  6  3  0  
<4>   0  0  0  0  2  
<5>   C  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
A4 A5
get R 5 0 E4 D3 D5 E5 B2 0 0 A5 B3 A2 C1

The current board:

<1>   0  0  F  0  0  
<2>   E  6  0  0  0  
<3>   0  D  0  3  0  
<4>   0  0  0  0  2  
<5>   C  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------11  6  0  0  0 -----
----------0  10  0  3  0 -----
----------0  0  0  0  2 -----
----------9  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (1,0) to (2,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 565.666667, threaten = 0.000000
now move from (1,0) to (2,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.333333, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.333333, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.333333, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.333333, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.333333, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.333333, blue_a = 565.666667, threaten = 0.000000
now undo move from (1,0) to (2,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 565.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 565.666667, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 0
now move from (1,0) to (1,1)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (1,1)
eatnum = 6
local_max = -7.500000
end search, score = -7.5
fku
org(r,c) = (1,0)
illegal!
rand= 5  10  11
my  = 5  6  0
org(r,c) = (1,0), tar(r,c) = (1,1), dice = 5
============================ver1
My result:
Red piece 5: (A2) -> (A3)

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  D  0  3  0  
<4>   0  0  0  0  2  
<5>   C  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
A2 A3
get R 4 0 D3 0 D5 E5 B2 0 0 A5 B3 A3 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  D  0  2  0  
<4>   0  0  0  0  0  
<5>   C  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------0  6  0  0  0 -----
----------11  10  0  2  0 -----
----------0  0  0  0  0 -----
----------9  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
now move from (2,1) to (3,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 570.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 570.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 570.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 570.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 570.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 570.500000, threaten = 0.000000
now undo move from (2,1) to (3,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 570.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 570.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 570.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 570.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 570.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 570.500000, threaten = 5.000000
now undo move from (2,1) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 570.500000, threaten = 75.000000
now undo move from (2,1) to (2,2)
eatnum = 0
local_max = -2280.833333
end search, score = -2280.83
fku
org(r,c) = (2,1)
illegal!
rand= 11  16  10
my  = 11  17  0
org(r,c) = (2,1), tar(r,c) = (3,2), dice = 4
============================ver1
My result:
Red piece 4: (B3) -> (B4)

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  0  0  2  0  
<4>   0  D  0  0  0  
<5>   C  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
B3 B4
get R 2 0 C3 0 D5 E5 B2 0 0 A5 B4 A3 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  0  2  0  0  
<4>   0  D  0  0  0  
<5>   C  0  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------0  6  0  0  0 -----
----------11  0  2  0  0 -----
----------0  10  0  0  0 -----
----------9  0  0  4  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
now move from (4,0) to (4,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 675.500000, threaten = 0.000000
now undo move from (4,0) to (4,1)
eatnum = 9
local_max = -2691.666667
end search, score = -2691.67
fku
org(r,c) = (4,0)
illegal!
rand= 20  21  9
my  = 20  21  0
org(r,c) = (4,0), tar(r,c) = (4,1), dice = 2
============================ver1
My result:
Red piece 3: (A5) -> (B5)

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  0  2  0  0  
<4>   0  D  0  0  0  
<5>   0  C  0  4  5  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
A5 B5
get R 4 0 C3 0 C4 E5 B2 0 0 B5 B4 A3 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  0  2  0  0  
<4>   0  D  4  0  0  
<5>   0  C  0  0  5  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------0  6  0  0  0 -----
----------11  0  2  0  0 -----
----------0  10  4  0  0 -----
----------0  9  0  0  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 680.166667, threaten = 0.000000
now move from (3,1) to (4,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 680.166667, threaten = 0.000000
now undo move from (3,1) to (4,2)
eatnum = 10
now move from (3,1) to (4,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 680.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 680.166667, threaten = 0.000000
now undo move from (3,1) to (4,1)
eatnum = 9
now move from (3,1) to (3,2)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 713.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 713.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 713.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 713.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 713.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 713.000000, threaten = 0.000000
now undo move from (3,1) to (3,2)
eatnum = 4
local_max = -2093.666667
end search, score = -2093.67
fku
org(r,c) = (3,1)
illegal!
rand= 16  21  10
my  = 16  17  0
org(r,c) = (3,1), tar(r,c) = (3,2), dice = 4
============================ver1
My result:
Red piece 4: (B4) -> (B5)

<1>   0  0  F  0  0  
<2>   0  6  0  0  0  
<3>   E  0  2  0  0  
<4>   0  0  4  0  0  
<5>   0  D  0  0  5  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
B4 B5
get R 5 0 B2 0 C4 E5 0 0 0 0 B5 A3 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  2  0  0  0  
<3>   E  0  0  0  0  
<4>   0  0  4  0  0  
<5>   0  D  0  0  5  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------0  2  0  0  0 -----
----------11  0  0  0  0 -----
----------0  0  4  0  0 -----
----------0  10  0  0  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
now move from (2,0) to (3,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 1692.833333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 1692.833333, threaten = 0.000000
now undo move from (2,0) to (3,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 1692.833333, threaten = 0.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 1692.833333, threaten = 0.000000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -5065.666667
end search, score = -5065.67
fku
org(r,c) = (2,0)
illegal!
rand= 10  11  11
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 5
============================ver1
My result:
Red piece 5: (A3) -> (B3)

<1>   0  0  F  0  0  
<2>   0  2  0  0  0  
<3>   0  E  0  0  0  
<4>   0  0  4  0  0  
<5>   0  D  0  0  5  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
============================
A3 B3
get R 2 0 B2 0 B3 E5 0 0 0 0 B5 0 C1

The current board:

<1>   0  0  F  0  0  
<2>   0  2  0  0  0  
<3>   0  4  0  0  0  
<4>   0  0  0  0  0  
<5>   0  D  0  0  5  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------0  2  0  0  0 -----
----------0  4  0  0  0 -----
----------0  0  0  0  0 -----
----------0  10  0  0  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 1762.833333, threaten = 0.000000
now move from (4,1) to (4,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1762.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1762.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1762.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1762.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1762.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1762.833333, threaten = 0.000000
now undo move from (4,1) to (4,2)
eatnum = 10
local_max = -5100.666667
end search, score = -5100.67
fku
org(r,c) = (4,1)
illegal!
rand= 21  22  10
my  = 21  22  0
org(r,c) = (4,1), tar(r,c) = (4,2), dice = 2
============================ver1
My result:
Red piece 4: (B5) -> (C5)

<1>   0  0  F  0  0  
<2>   0  2  0  0  0  
<3>   0  4  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  D  0  5  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
B5 C5
get R 5 0 B2 0 A2 E5 0 0 0 0 C5 0 C1

The current board:

<1>   0  0  F  0  0  
<2>   4  2  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  D  0  5  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=10, piece_distance= 2, piece_value= 225
piece_num=5, piece_distance= 0, piece_value= 1
----------0  0  12  0  0 -----
----------4  2  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  10  0  5 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
now move from (0,2) to (1,3)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2812.833333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 225.000000, blue_a = 2812.833333, threaten = 0.000000
now undo move from (0,2) to (1,3)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 192.500000, blue_a = 2812.833333, threaten = 0.000000
now undo move from (0,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.833333, blue_a = 2812.833333, threaten = 0.000000
now undo move from (0,2) to (0,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.833333, blue_a = 2812.833333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.833333, blue_a = 2812.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2812.833333, blue_a = 2812.833333, threaten = 0.000000
now undo move from (4,2) to (4,3)
eatnum = 0
local_max = -5625.666667
end search, score = -5625.67
fku
org(r,c) = (4,2)
rand= 2  8  12
my  = 22  23  10
org(r,c) = (4,2), tar(r,c) = (4,3), dice = 5
============================ver1
My result:
Red piece 6: (C5) -> (D5)

<1>   0  0  F  0  0  
<2>   4  2  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  D  5  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
C5 D5
exit

###
