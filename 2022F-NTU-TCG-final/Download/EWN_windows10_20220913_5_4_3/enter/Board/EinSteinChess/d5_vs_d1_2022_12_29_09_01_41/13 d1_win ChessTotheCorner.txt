* 9:3am Dec 29, 2022
* d5 vs d1
* order RB* board 5 6* time 240 0 0
* ini D5 E3 E4 E5 D4 C5 B1 A3 A2 A1 B2 C1
* 1. R 1 B1 C1
* 2. B 1 D5 C4
* 3. R 5 B2 C2
* 4. B 5 D4 C4
* 5. R 3 A2 A3
* 6. B 4 E5 D4
* 7. R 5 C2 D2
* 8. B 6 C5 C4
* 9. R 3 A3 B4
* 10. B 4 D4 C3
* 11. R 6 D2 D3
* 12. B 5 C3 B2
* 13. R 1 C1 D1
* 14. B 2 E3 D2
* 15. R 6 D3 E3
* 16. B 3 E4 D3
* 17. R 3 B4 C4
* 18. B 2 D2 C1
* 19. R 3 C4 C5
* 20. B 3 D3 C2
* 21. R 1 D1 E1
* 22. B 3 C2 B1
* 23. R 2 C5 D5
* 24. B 3 B1 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672275783172
1. 1672275783172
2. 1672275783234
3. 1672275783296
4. 1672275783359
5. 1672275783421
6. 1672275783483
7. 1672275783547
8. 1672275783609
9. 1672275783672
10. 1672275783732
11. 1672275783795
12. 1672275783856
13. 1672275783919
14. 1672275783980
15. 1672275784042
16. 1672275784104
17. 1672275784166
18. 1672275784229
19. 1672275784290
20. 1672275784352
21. 1672275784414
22. 1672275784475
23. 1672275784537
24. 1672275784600
Points   Total
   1         4
   2         3
   3         8
   4         2
   5         4
   6         3

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 1 D5 E3 E4 E5 D4 C5 B1 A3 A2 A1 B2 C1
B1 C1
get R 5 C4 E3 E4 E5 D4 C5 C1 A3 A2 A1 B2 0
B2 C2
get R 3 0 E3 E4 E5 C4 C5 C1 A3 A2 A1 C2 0
A2 A3
get R 5 0 E3 E4 D4 C4 C5 C1 0 A3 A1 C2 0
C2 D2
get R 3 0 E3 E4 D4 0 C4 C1 0 A3 A1 D2 0
A3 B4
get R 6 0 E3 E4 C3 0 C4 C1 0 B4 A1 D2 0
D2 D3
get R 1 0 E3 E4 B2 0 C4 C1 0 B4 A1 D3 0
C1 D1
get R 6 0 D2 E4 B2 0 C4 D1 0 B4 A1 D3 0
D3 E3
get R 3 0 D2 D3 B2 0 C4 D1 0 B4 A1 E3 0
B4 C4
get R 3 0 C1 D3 B2 0 0 D1 0 C4 A1 E3 0
C4 C5
get R 1 0 C1 C2 B2 0 0 D1 0 C5 A1 E3 0
D1 E1
get R 2 0 C1 B1 B2 0 0 E1 0 C5 A1 E3 0
C5 D5
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 1 D5 E3 E4 E5 D4 C5 B1 A3 A2 A1 B2 C1

The current board:

<1>   D  A  F  0  0  
<2>   C  E  0  0  0  
<3>   B  0  0  0  2  
<4>   0  0  0  5  3  
<5>   0  0  6  1  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  7  12  0  0 -----
----------9  11  0  0  0 -----
----------8  0  0  0  2 -----
----------0  0  0  5  3 -----
----------0  0  6  1  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,1) to (1,2)
eatnum = 7
now move from (0,1) to (1,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,1) to (1,1)
eatnum = 11
now move from (0,1) to (0,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,1) to (0,2)
eatnum = 12
local_max = -14.333333
end search, score = -14.3333
fku
org(r,c) = (0,1)
illegal!
rand= 1  2  7
my  = 1  7  0
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 1
============================ver1
My result:
Red piece 1: (B1) -> (C1)

<1>   D  0  A  0  0  
<2>   C  E  0  0  0  
<3>   B  0  0  0  2  
<4>   0  0  0  5  3  
<5>   0  0  6  1  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B1 C1
get R 5 C4 E3 E4 E5 D4 C5 C1 A3 A2 A1 B2 0

The current board:

<1>   D  0  A  0  0  
<2>   C  E  0  0  0  
<3>   B  0  0  0  2  
<4>   0  0  1  5  3  
<5>   0  0  6  0  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  0  7  0  0 -----
----------9  11  0  0  0 -----
----------8  0  0  0  2 -----
----------0  0  1  5  3 -----
----------0  0  6  0  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 5.666667, threaten = 75.000000
now move from (1,1) to (2,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.000000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -33.000000
end search, score = -33
fku
org(r,c) = (1,1)
illegal!
rand= 6  7  11
my  = 6  12  0
org(r,c) = (1,1), tar(r,c) = (2,2), dice = 5
============================ver1
My result:
Red piece 5: (B2) -> (C2)

<1>   D  0  A  0  0  
<2>   C  0  E  0  0  
<3>   B  0  0  0  2  
<4>   0  0  1  5  3  
<5>   0  0  6  0  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B2 C2
get R 3 0 E3 E4 E5 C4 C5 C1 A3 A2 A1 C2 0

The current board:

<1>   D  0  A  0  0  
<2>   C  0  E  0  0  
<3>   B  0  0  0  2  
<4>   0  0  5  0  3  
<5>   0  0  6  0  4  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  0  7  0  0 -----
----------9  0  11  0  0 -----
----------8  0  0  0  2 -----
----------0  0  5  0  3 -----
----------0  0  6  0  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
now move from (1,0) to (2,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (2,1)
eatnum = 9
now move from (1,0) to (2,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.166667
now undo move from (1,0) to (2,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 3.333333, threaten = 2.500000
now undo move from (1,0) to (1,1)
eatnum = 0
local_max = -10.833333
end search, score = -10.8333
fku
org(r,c) = (1,0)
illegal!
rand= 5  10  9
my  = 5  11  0
org(r,c) = (1,0), tar(r,c) = (2,1), dice = 3
============================ver1
My result:
Red piece 3: (A2) -> (A3)

<1>   D  0  A  0  0  
<2>   0  0  E  0  0  
<3>   C  0  0  0  2  
<4>   0  0  5  0  3  
<5>   0  0  6  0  4  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
A2 A3
get R 5 0 E3 E4 D4 C4 C5 C1 0 A3 A1 C2 0

The current board:

<1>   D  0  A  0  0  
<2>   0  0  E  0  0  
<3>   C  0  0  0  2  
<4>   0  0  5  4  3  
<5>   0  0  6  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------10  0  7  0  0 -----
----------0  0  11  0  0 -----
----------9  0  0  0  2 -----
----------0  0  5  4  3 -----
----------0  0  6  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
now move from (1,2) to (2,3)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,2) to (2,3)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 75.000000
now undo move from (1,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 5.000000
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = -27.166667
end search, score = -27.1667
fku
org(r,c) = (1,2)
illegal!
rand= 7  8  11
my  = 7  13  0
org(r,c) = (1,2), tar(r,c) = (2,3), dice = 5
============================ver1
My result:
Red piece 5: (C2) -> (D2)

<1>   D  0  A  0  0  
<2>   0  0  0  E  0  
<3>   C  0  0  0  2  
<4>   0  0  5  4  3  
<5>   0  0  6  0  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 4
============================
C2 D2
get R 3 0 E3 E4 D4 0 C4 C1 0 A3 A1 D2 0

The current board:

<1>   D  0  A  0  0  
<2>   0  0  0  E  0  
<3>   C  0  0  0  2  
<4>   0  0  6  4  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
----------10  0  7  0  0 -----
----------0  0  0  11  0 -----
----------9  0  0  0  2 -----
----------0  0  6  4  3 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
now move from (2,0) to (3,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 6.000000, blue_a = 10.500000, threaten = 5.000000
now undo move from (2,0) to (3,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 5.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 10.500000, threaten = 5.000000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -36.500000
end search, score = -36.5
fku
org(r,c) = (2,0)
illegal!
rand= 10  16  9
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 3
============================ver1
My result:
Red piece 3: (A3) -> (B4)

<1>   D  0  A  0  0  
<2>   0  0  0  E  0  
<3>   0  0  0  0  2  
<4>   0  C  6  4  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
A3 B4
get R 6 0 E3 E4 C3 0 C4 C1 0 B4 A1 D2 0

The current board:

<1>   D  0  A  0  0  
<2>   0  0  0  E  0  
<3>   0  0  4  0  2  
<4>   0  C  6  0  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
----------10  0  7  0  0 -----
----------0  0  0  11  0 -----
----------0  0  4  0  2 -----
----------0  9  6  0  3 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (1,3) to (2,4)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
now move from (1,3) to (2,4)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 80.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 80.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 80.500000, threaten = 0.000000
now undo move from (1,3) to (2,4)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 80.500000, threaten = 75.000000
now undo move from (1,3) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 80.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 80.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 80.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 80.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 80.500000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.500000, blue_a = 80.500000, threaten = 5.000000
now undo move from (1,3) to (1,4)
eatnum = 0
local_max = -235.666667
end search, score = -235.667
fku
org(r,c) = (1,3)
illegal!
rand= 8  13  11
my  = 8  14  0
org(r,c) = (1,3), tar(r,c) = (2,4), dice = 6
============================ver1
My result:
Red piece 5: (D2) -> (D3)

<1>   D  0  A  0  0  
<2>   0  0  0  0  0  
<3>   0  0  4  E  2  
<4>   0  C  6  0  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
D2 D3
get R 1 0 E3 E4 B2 0 C4 C1 0 B4 A1 D3 0

The current board:

<1>   D  0  A  0  0  
<2>   0  4  0  0  0  
<3>   0  0  0  E  2  
<4>   0  C  6  0  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
----------10  0  7  0  0 -----
----------0  4  0  0  0 -----
----------0  0  0  11  2 -----
----------0  9  6  0  3 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
now move from (0,2) to (1,3)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.666667, blue_a = 1130.500000, threaten = 37.833333
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.666667, blue_a = 1130.500000, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.666667, blue_a = 1130.500000, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.666667, blue_a = 1130.500000, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.666667, blue_a = 1130.500000, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.666667, blue_a = 1130.500000, threaten = 37.833333
now undo move from (0,2) to (1,3)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 85.166667, blue_a = 1130.500000, threaten = 42.833333
now undo move from (0,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1130.500000, threaten = 38.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1130.500000, threaten = 38.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1130.500000, threaten = 38.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1130.500000, threaten = 38.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1130.500000, threaten = 38.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1130.500000, threaten = 38.166667
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -4477.166667
end search, score = -4477.17
fku
org(r,c) = (0,2)
illegal!
rand= 2  3  7
my  = 2  8  0
org(r,c) = (0,2), tar(r,c) = (1,3), dice = 1
============================ver1
My result:
Red piece 1: (C1) -> (D1)

<1>   D  0  0  A  0  
<2>   0  4  0  0  0  
<3>   0  0  0  E  2  
<4>   0  C  6  0  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
C1 D1
get R 6 0 D2 E4 B2 0 C4 D1 0 B4 A1 D3 0

The current board:

<1>   D  0  0  A  0  
<2>   0  4  0  2  0  
<3>   0  0  0  E  0  
<4>   0  C  6  0  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
----------10  0  0  7  0 -----
----------0  4  0  2  0 -----
----------0  0  0  11  0 -----
----------0  9  6  0  3 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (2,3) to (3,4)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
now move from (2,3) to (3,4)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 1700.000000, threaten = 1.000000
now undo move from (2,3) to (3,4)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1130.500000, blue_a = 1700.000000, threaten = 1.000000
now undo move from (2,3) to (3,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1700.000000, threaten = 1.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1700.000000, threaten = 1.000000
now undo move from (2,3) to (2,4)
eatnum = 0
local_max = -3970.500000
end search, score = -3970.5
fku
org(r,c) = (2,3)
illegal!
rand= 13  14  11
my  = 13  19  0
org(r,c) = (2,3), tar(r,c) = (3,4), dice = 6
============================ver1
My result:
Red piece 5: (D3) -> (E3)

<1>   D  0  0  A  0  
<2>   0  4  0  2  0  
<3>   0  0  0  0  E  
<4>   0  C  6  0  3  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
D3 E3
get R 3 0 D2 D3 B2 0 C4 D1 0 B4 A1 E3 0

The current board:

<1>   D  0  0  A  0  
<2>   0  4  0  2  0  
<3>   0  0  0  3  E  
<4>   0  C  6  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
----------10  0  0  7  0 -----
----------0  4  0  2  0 -----
----------0  0  0  3  11 -----
----------0  9  6  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1137.500000, threaten = 0.666667
now move from (3,1) to (4,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1137.500000, threaten = 0.666667
now undo move from (3,1) to (4,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1137.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 1137.500000, threaten = 0.666667
now undo move from (3,1) to (4,1)
eatnum = 0
now move from (3,1) to (3,2)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1695.000000, threaten = 0.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1695.000000, threaten = 0.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1695.000000, threaten = 0.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1695.000000, threaten = 0.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1695.000000, threaten = 0.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1695.000000, threaten = 0.833333
now undo move from (3,1) to (3,2)
eatnum = 6
local_max = -4400.166667
end search, score = -4400.17
fku
org(r,c) = (3,1)
illegal!
rand= 16  17  9
my  = 16  22  0
org(r,c) = (3,1), tar(r,c) = (4,2), dice = 3
============================ver1
My result:
Red piece 3: (B4) -> (C4)

<1>   D  0  0  A  0  
<2>   0  4  0  2  0  
<3>   0  0  0  3  E  
<4>   0  0  C  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
B4 C4
get R 3 0 C1 D3 B2 0 0 D1 0 C4 A1 E3 0

The current board:

<1>   D  0  2  A  0  
<2>   0  4  0  0  0  
<3>   0  0  0  3  E  
<4>   0  0  C  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 2, piece_value= 225
----------10  0  2  7  0 -----
----------0  4  0  0  0 -----
----------0  0  0  3  11 -----
----------0  0  9  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
now move from (3,2) to (4,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 1765.000000, threaten = 0.500000
now undo move from (3,2) to (4,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1765.000000, threaten = 0.500000
now undo move from (3,2) to (4,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 1765.000000, threaten = 0.500000
now undo move from (3,2) to (3,3)
eatnum = 0
local_max = -4095.000000
end search, score = -4095
fku
org(r,c) = (3,2)
illegal!
rand= 17  22  9
my  = 17  23  0
org(r,c) = (3,2), tar(r,c) = (4,3), dice = 3
============================ver1
My result:
Red piece 3: (C4) -> (C5)

<1>   D  0  2  A  0  
<2>   0  4  0  0  0  
<3>   0  0  0  3  E  
<4>   0  0  0  0  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
C4 C5
get R 1 0 C1 C2 B2 0 0 D1 0 C5 A1 E3 0

The current board:

<1>   D  0  2  A  0  
<2>   0  4  3  0  0  
<3>   0  0  0  0  E  
<4>   0  0  0  0  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 2, piece_value= 225
----------10  0  2  7  0 -----
----------0  4  3  0  0 -----
----------0  0  0  0  11 -----
----------0  0  0  0  0 -----
----------0  0  9  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
now move from (0,3) to (1,4)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1800.000000, threaten = 0.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 187.666667, blue_a = 1800.000000, threaten = 0.500000
now undo move from (0,3) to (1,4)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 1800.000000, threaten = 0.500000
now undo move from (0,3) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1800.000000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.500000, blue_a = 1800.000000, threaten = 0.500000
now undo move from (0,3) to (0,4)
eatnum = 0
local_max = -5212.833333
end search, score = -5212.83
fku
org(r,c) = (0,3)
illegal!
rand= 3  4  7
my  = 3  9  0
org(r,c) = (0,3), tar(r,c) = (1,4), dice = 1
============================ver1
My result:
Red piece 1: (D1) -> (E1)

<1>   D  0  2  0  A  
<2>   0  4  3  0  0  
<3>   0  0  0  0  E  
<4>   0  0  0  0  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
D1 E1
get R 2 0 C1 B1 B2 0 0 E1 0 C5 A1 E3 0

The current board:

<1>   D  3  2  0  A  
<2>   0  4  0  0  0  
<3>   0  0  0  0  E  
<4>   0  0  0  0  0  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 3, piece_value= 3375
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 2, piece_value= 225
----------10  3  2  0  7 -----
----------0  4  0  0  0 -----
----------0  0  0  0  11 -----
----------0  0  0  0  0 -----
----------0  0  9  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1200.500000, blue_a = 2325.000000, threaten = 0.666667
now move from (4,2) to (4,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 76.000000, blue_a = 2325.000000, threaten = 0.666667
now undo move from (4,2) to (4,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 2325.000000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 155.166667, blue_a = 2325.000000, threaten = 0.666667
now undo move from (0,4) to (1,4)
eatnum = 0
local_max = -5775.166667
end search, score = -5775.17
fku
org(r,c) = (4,2)
illegal!
rand= 22  23  9
my  = 22  23  0
org(r,c) = (4,2), tar(r,c) = (4,3), dice = 2
============================ver1
My result:
Red piece 3: (C5) -> (D5)

<1>   D  3  2  0  A  
<2>   0  4  0  0  0  
<3>   0  0  0  0  E  
<4>   0  0  0  0  0  
<5>   0  0  0  C  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
C5 D5
exit

###
