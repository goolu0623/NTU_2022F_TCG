* 9:3am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini E3 E5 C5 D5 E4 D4 A3 A1 C1 B1 A2 B2
* 1. B 1 E3 D3
* 2. R 1 A3 B3
* 3. B 3 C5 B5
* 4. R 1 B3 C4
* 5. B 4 D5 C4
* 6. R 4 B1 C1
* 7. B 1 D3 C3
* 8. R 1 A1 B2
* 9. B 1 C3 B2
* 10. R 2 C1 D2
* 11. B 4 C4 C3
* 12. R 3 D2 E3
* 13. B 1 B2 A2
* 14. R 5 E3 E4
* 15. B 6 D4 C3
* 16. R 5 E4 E5
* ChessTotheCorner d5 wins
* Comment 0 0
0. 1672275816931
1. 1672275816931
2. 1672275816993
3. 1672275817054
4. 1672275817117
5. 1672275817179
6. 1672275817240
7. 1672275817302
8. 1672275817366
9. 1672275817428
10. 1672275817492
11. 1672275817553
12. 1672275817616
13. 1672275817679
14. 1672275817743
15. 1672275817805
16. 1672275817867
Points   Total
   1         7
   2         1
   3         2
   4         3
   5         2
   6         1

# 8 10 12 14 16 18 20 22 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 1 D3 E5 C5 D5 E4 D4 A3 A1 C1 B1 A2 B2
A3 B3
get R 1 D3 E5 B5 D5 E4 D4 B3 A1 C1 B1 A2 B2
B3 C4
get R 4 D3 E5 B5 C4 E4 D4 0 A1 C1 B1 A2 B2
B1 C1
get R 1 C3 E5 B5 C4 E4 D4 0 A1 0 C1 A2 B2
A1 B2
get R 2 B2 E5 B5 C4 E4 D4 0 0 0 C1 A2 0
C1 D2
get R 3 B2 E5 B5 C3 E4 D4 0 0 0 D2 A2 0
D2 E3
get R 5 A2 E5 B5 C3 E4 D4 0 0 0 E3 0 0
E3 E4
get R 5 A2 E5 B5 0 0 C3 0 0 0 E4 0 0
E4 E5
exit

# 8 10 12 14 16 18 20 22 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 1 D3 E5 C5 D5 E4 D4 A3 A1 C1 B1 A2 B2

The current board:

<1>   B  D  C  0  0  
<2>   E  F  0  0  0  
<3>   A  0  0  1  0  
<4>   0  0  0  6  5  
<5>   0  0  3  4  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  10  9  0  0 -----
----------11  12  0  0  0 -----
----------7  0  0  1  0 -----
----------0  0  0  6  5 -----
----------0  0  3  4  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now move from (2,0) to (3,1)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
now undo move from (2,0) to (3,1)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.166667
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -30.666667
end search, score = -30.6667
fku
org(r,c) = (2,0)
illegal!
rand= 10  11  7
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 1
============================ver1
My result:
Red piece 1: (A3) -> (B3)

<1>   B  D  C  0  0  
<2>   E  F  0  0  0  
<3>   0  A  0  1  0  
<4>   0  0  0  6  5  
<5>   0  0  3  4  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
A3 B3
get R 1 D3 E5 B5 D5 E4 D4 B3 A1 C1 B1 A2 B2

The current board:

<1>   B  D  C  0  0  
<2>   E  F  0  0  0  
<3>   0  A  0  1  0  
<4>   0  0  0  6  5  
<5>   0  3  0  4  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  10  9  0  0 -----
----------11  12  0  0  0 -----
----------0  7  0  1  0 -----
----------0  0  0  6  5 -----
----------0  3  0  4  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
now move from (2,1) to (3,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
now undo move from (2,1) to (3,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now undo move from (2,1) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 37.500000
now undo move from (2,1) to (2,2)
eatnum = 0
local_max = -30.666667
end search, score = -30.6667
fku
org(r,c) = (2,1)
illegal!
rand= 11  17  7
my  = 11  17  0
org(r,c) = (2,1), tar(r,c) = (3,2), dice = 1
============================ver1
My result:
Red piece 1: (B3) -> (C4)

<1>   B  D  C  0  0  
<2>   E  F  0  0  0  
<3>   0  0  0  1  0  
<4>   0  0  A  6  5  
<5>   0  3  0  4  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
B3 C4
get R 4 D3 E5 B5 C4 E4 D4 0 A1 C1 B1 A2 B2

The current board:

<1>   B  D  C  0  0  
<2>   E  F  0  0  0  
<3>   0  0  0  1  0  
<4>   0  0  4  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  10  9  0  0 -----
----------11  12  0  0  0 -----
----------0  0  0  1  0 -----
----------0  0  4  6  5 -----
----------0  3  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
now move from (0,1) to (1,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.000000
now undo move from (0,1) to (1,2)
eatnum = 10
now move from (0,1) to (1,1)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 2.500000
now undo move from (0,1) to (1,1)
eatnum = 12
now move from (0,1) to (0,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.000000, threaten = 0.166667
now undo move from (0,1) to (0,2)
eatnum = 9
local_max = -44.500000
end search, score = -44.5
fku
org(r,c) = (0,1)
illegal!
rand= 1  2  10
my  = 1  7  0
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 4
============================ver1
My result:
Red piece 4: (B1) -> (C1)

<1>   B  0  D  0  0  
<2>   E  F  0  0  0  
<3>   0  0  0  1  0  
<4>   0  0  4  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 4
============================
B1 C1
get R 1 C3 E5 B5 C4 E4 D4 0 A1 0 C1 A2 B2

The current board:

<1>   B  0  D  0  0  
<2>   E  F  0  0  0  
<3>   0  0  1  0  0  
<4>   0  0  4  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 4
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 2, piece_value= 225
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  10  0  0 -----
----------11  12  0  0  0 -----
----------0  0  1  0  0 -----
----------0  0  4  6  5 -----
----------0  3  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (0,0) to (1,1)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 43.000000, threaten = 2.500000
now move from (0,0) to (1,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 43.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 43.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 43.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 43.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 43.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 43.000000, threaten = 0.000000
now undo move from (0,0) to (1,1)
eatnum = 8
now move from (0,0) to (1,0)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
now undo move from (0,0) to (1,0)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 43.000000, threaten = 0.166667
now undo move from (0,0) to (0,1)
eatnum = 0
local_max = -252.333333
end search, score = -252.333
fku
org(r,c) = (0,0)
illegal!
rand= 0  6  8
my  = 0  6  0
org(r,c) = (0,0), tar(r,c) = (1,1), dice = 1
============================ver1
My result:
Red piece 2: (A1) -> (B2)

<1>   0  0  D  0  0  
<2>   E  B  0  0  0  
<3>   0  0  1  0  0  
<4>   0  0  4  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 3
============================
A1 B2
get R 2 B2 E5 B5 C4 E4 D4 0 0 0 C1 A2 0

The current board:

<1>   0  0  D  0  0  
<2>   E  1  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  4  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 2
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  10  0  0 -----
----------11  1  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  4  6  5 -----
----------0  3  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
now move from (0,2) to (1,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
now undo move from (0,2) to (1,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 568.000000, threaten = 0.000000
now undo move from (0,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 568.000000, threaten = 0.000000
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -3397.666667
end search, score = -3397.67
fku
org(r,c) = (0,2)
illegal!
rand= 2  8  10
my  = 2  8  0
org(r,c) = (0,2), tar(r,c) = (1,3), dice = 2
============================ver1
My result:
Red piece 4: (C1) -> (D2)

<1>   0  0  0  0  0  
<2>   E  1  0  D  0  
<3>   0  0  0  0  0  
<4>   0  0  4  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 2
============================
C1 D2
get R 3 B2 E5 B5 C3 E4 D4 0 0 0 D2 A2 0

The current board:

<1>   0  0  0  0  0  
<2>   E  1  0  D  0  
<3>   0  0  4  0  0  
<4>   0  0  0  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 2
generate start: 
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 3, piece_value= 3375
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  0  0 -----
----------11  1  0  10  0 -----
----------0  0  4  0  0 -----
----------0  0  0  6  5 -----
----------0  3  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
now move from (1,3) to (2,4)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 603.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 603.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 603.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 603.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 603.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 603.000000, threaten = 0.000000
now undo move from (1,3) to (2,4)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 150.333333, blue_a = 603.000000, threaten = 37.500000
now undo move from (1,3) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 603.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 603.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 603.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 603.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 603.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 603.000000, threaten = 2.500000
now undo move from (1,3) to (1,4)
eatnum = 0
local_max = -3505.166667
end search, score = -3505.17
fku
org(r,c) = (1,3)
illegal!
rand= 8  14  10
my  = 8  14  0
org(r,c) = (1,3), tar(r,c) = (2,4), dice = 3
============================ver1
My result:
Red piece 4: (D2) -> (E3)

<1>   0  0  0  0  0  
<2>   E  1  0  0  0  
<3>   0  0  4  0  D  
<4>   0  0  0  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 2
============================
D2 E3
get R 5 A2 E5 B5 C3 E4 D4 0 0 0 E3 0 0

The current board:

<1>   0  0  0  0  0  
<2>   1  0  0  0  0  
<3>   0  0  4  0  D  
<4>   0  0  0  6  5  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 1
generate start: 
piece_num=1, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  0  0 -----
----------1  0  0  0  0 -----
----------0  0  4  0  10 -----
----------0  0  0  6  5 -----
----------0  3  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (2,4) to (3,4)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 642.833333, threaten = 562.500000
now move from (2,4) to (3,4)
eatnum = 10
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
now undo move from (2,4) to (3,4)
eatnum = 10
local_max = -401.666667
end search, score = -401.667
fku
org(r,c) = (2,4)
illegal!
rand= 14  19  10
my  = 14  19  0
org(r,c) = (2,4), tar(r,c) = (3,4), dice = 5
============================ver1
My result:
Red piece 4: (E3) -> (E4)

<1>   0  0  0  0  0  
<2>   1  0  0  0  0  
<3>   0  0  4  0  0  
<4>   0  0  0  6  D  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 1
============================
E3 E4
get R 5 A2 E5 B5 0 0 C3 0 0 0 E4 0 0

The current board:

<1>   0  0  0  0  0  
<2>   1  0  0  0  0  
<3>   0  0  6  0  0  
<4>   0  0  0  0  D  
<5>   0  3  0  0  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 1
generate start: 
piece_num=1, piece_distance= 3, piece_value= 3375
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 3, piece_value= 3375
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  0  0  0 -----
----------1  0  0  0  0 -----
----------0  0  6  0  0 -----
----------0  0  0  0  10 -----
----------0  3  0  0  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (3,4) to (4,4)
eatnum = 2
start search dep = 1, lim = 1
red reach: 
now move from (3,4) to (4,4)
eatnum = 10
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
start search dep = 1, lim = 1
now undo move from (3,4) to (4,4)
eatnum = 10
local_max = -0.000000
end search, score = -2.22507e-308
fku
org(r,c) = (3,4)
illegal!
rand= 19  24  10
my  = 19  24  0
org(r,c) = (3,4), tar(r,c) = (4,4), dice = 5
============================ver1
My result:
Red piece 4: (E4) -> (E5)

<1>   0  0  0  0  0  
<2>   1  0  0  0  0  
<3>   0  0  6  0  0  
<4>   0  0  0  0  0  
<5>   0  3  0  0  D  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 1
============================
E4 E5
exit

###
