* 9:2am Dec 29, 2022
* d5 vs d1
* order RB* board 5 6* time 240 0 0
* ini D4 E4 C5 E3 D5 E5 B2 A2 C1 A3 B1 A1
* 1. R 2 A2 B2
* 2. B 2 E4 D3
* 3. R 1 B2 C2
* 4. B 3 C5 C4
* 5. R 4 A3 B4
* 6. B 6 E5 D4
* 7. R 2 C2 D3
* 8. B 3 C4 B3
* 9. R 3 C1 D2
* 10. B 6 D4 D3
* 11. R 1 D2 E3
* 12. B 2 B3 A2
* 13. R 5 B1 B2
* 14. B 4 D5 C4
* 15. R 1 E3 E4
* 16. B 3 A2 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672275769872
1. 1672275769872
2. 1672275769935
3. 1672275769996
4. 1672275770059
5. 1672275770121
6. 1672275770183
7. 1672275770244
8. 1672275770306
9. 1672275770370
10. 1672275770432
11. 1672275770495
12. 1672275770556
13. 1672275770619
14. 1672275770680
15. 1672275770741
16. 1672275770803
Points   Total
   1         3
   2         4
   3         4
   4         2
   5         1
   6         2

# 8 10 12 14 16 18 20 22 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 2 D4 E4 C5 E3 D5 E5 B2 A2 C1 A3 B1 A1
A2 B2
get R 1 D4 D3 C5 E3 D5 E5 0 B2 C1 A3 B1 A1
B2 C2
get R 4 D4 D3 C4 E3 D5 E5 0 C2 C1 A3 B1 A1
A3 B4
get R 2 0 D3 C4 E3 D5 D4 0 C2 C1 B4 B1 A1
C2 D3
get R 3 0 0 B3 E3 D5 D4 0 D3 C1 B4 B1 A1
C1 D2
get R 1 0 0 B3 E3 D5 D3 0 0 D2 B4 B1 A1
D2 E3
get R 5 0 0 A2 0 D5 D3 0 0 E3 B4 B1 A1
B1 B2
get R 1 0 0 A2 0 C4 D3 0 0 E3 B4 B2 A1
E3 E4
exit

# 8 10 12 14 16 18 20 22 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 2 D4 E4 C5 E3 D5 E5 B2 A2 C1 A3 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   B  A  0  0  0  
<3>   D  0  0  0  4  
<4>   0  0  0  1  2  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------8  7  0  0  0 -----
----------10  0  0  0  4 -----
----------0  0  0  1  2 -----
----------0  0  3  5  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now move from (1,0) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (2,1)
eatnum = 8
now move from (1,0) to (2,0)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 10
now move from (1,0) to (1,1)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 0.000000
now undo move from (1,0) to (1,1)
eatnum = 7
local_max = -14.166667
end search, score = -14.1667
fku
org(r,c) = (1,0)
illegal!
rand= 5  6  8
my  = 5  11  0
org(r,c) = (1,0), tar(r,c) = (2,1), dice = 2
============================ver1
My result:
Red piece 2: (A2) -> (B2)

<1>   F  E  C  0  0  
<2>   0  B  0  0  0  
<3>   D  0  0  0  4  
<4>   0  0  0  1  2  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A2 B2
get R 1 D4 D3 C5 E3 D5 E5 0 B2 C1 A3 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   0  B  0  0  0  
<3>   D  0  0  2  4  
<4>   0  0  0  1  0  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------0  8  0  0  0 -----
----------10  0  0  2  4 -----
----------0  0  0  1  0 -----
----------0  0  3  5  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 5.666667, threaten = 37.500000
now move from (1,1) to (2,2)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = 4.166667
end search, score = 4.16667
fku
org(r,c) = (1,1)
illegal!
rand= 6  7  8
my  = 6  12  0
org(r,c) = (1,1), tar(r,c) = (2,2), dice = 1
============================ver1
My result:
Red piece 2: (B2) -> (C2)

<1>   F  E  C  0  0  
<2>   0  0  B  0  0  
<3>   D  0  0  2  4  
<4>   0  0  0  1  0  
<5>   0  0  3  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B2 C2
get R 4 D4 D3 C4 E3 D5 E5 0 C2 C1 A3 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   0  0  B  0  0  
<3>   D  0  0  2  4  
<4>   0  0  3  1  0  
<5>   0  0  0  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------0  0  8  0  0 -----
----------10  0  0  2  4 -----
----------0  0  3  1  0 -----
----------0  0  0  5  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
now move from (2,0) to (3,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 8.000000, threaten = 2.500000
now undo move from (2,0) to (3,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.000000, threaten = 2.500000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.000000, threaten = 2.500000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -42.500000
end search, score = -42.5
fku
org(r,c) = (2,0)
illegal!
rand= 10  16  10
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 4
============================ver1
My result:
Red piece 4: (A3) -> (B4)

<1>   F  E  C  0  0  
<2>   0  0  B  0  0  
<3>   0  0  0  2  4  
<4>   0  D  3  1  0  
<5>   0  0  0  5  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A3 B4
get R 2 0 D3 C4 E3 D5 D4 0 C2 C1 B4 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   0  0  B  0  0  
<3>   0  0  0  2  4  
<4>   0  D  3  6  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------0  0  8  0  0 -----
----------0  0  0  2  4 -----
----------0  10  3  6  0 -----
----------0  0  0  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (1,2) to (2,3)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
now move from (1,2) to (2,3)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 10.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 10.333333, threaten = 0.000000
now undo move from (1,2) to (2,3)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 10.333333, threaten = 37.500000
now undo move from (1,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.333333, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.333333, threaten = 2.500000
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = -0.833333
end search, score = -0.833333
fku
org(r,c) = (1,2)
illegal!
rand= 7  13  8
my  = 7  13  0
org(r,c) = (1,2), tar(r,c) = (2,3), dice = 2
============================ver1
My result:
Red piece 2: (C2) -> (D3)

<1>   F  E  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  0  B  4  
<4>   0  D  3  6  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
C2 D3
get R 3 0 0 B3 E3 D5 D4 0 D3 C1 B4 B1 A1

The current board:

<1>   F  E  C  0  0  
<2>   0  0  0  0  0  
<3>   0  3  0  B  4  
<4>   0  D  0  6  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=8, piece_distance= 2, piece_value= 225
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  9  0  0 -----
----------0  0  0  0  0 -----
----------0  3  0  8  4 -----
----------0  10  0  6  0 -----
----------0  0  0  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
now move from (0,2) to (1,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.333333, threaten = 37.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.333333, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 115.333333, threaten = 37.500000
now undo move from (0,2) to (1,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.333333, blue_a = 115.333333, threaten = 40.000000
now undo move from (0,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 115.333333, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 115.333333, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 115.333333, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 115.333333, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 115.333333, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 115.333333, threaten = 37.666667
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -381.000000
end search, score = -381
fku
org(r,c) = (0,2)
illegal!
rand= 2  8  9
my  = 2  8  0
org(r,c) = (0,2), tar(r,c) = (1,3), dice = 3
============================ver1
My result:
Red piece 3: (C1) -> (D2)

<1>   F  E  0  0  0  
<2>   0  0  0  C  0  
<3>   0  3  0  B  4  
<4>   0  D  0  6  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
C1 D2
get R 1 0 0 B3 E3 D5 D3 0 0 D2 B4 B1 A1

The current board:

<1>   F  E  0  0  0  
<2>   0  0  0  C  0  
<3>   0  3  0  6  4  
<4>   0  D  0  0  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  0  0  0 -----
----------0  0  0  9  0 -----
----------0  3  0  6  4 -----
----------0  10  0  0  0 -----
----------0  0  0  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
now move from (1,3) to (2,4)
eatnum = 4
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 152.833333, threaten = 0.000000
now move from (1,3) to (2,4)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
now undo move from (1,3) to (2,4)
eatnum = 9
now move from (1,3) to (2,3)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 150.500000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 150.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 150.500000, threaten = 0.000000
now undo move from (1,3) to (2,3)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 10.333333, blue_a = 152.833333, threaten = 0.000000
now undo move from (1,3) to (1,4)
eatnum = 0
local_max = -185.666667
end search, score = -185.667
fku
org(r,c) = (1,3)
illegal!
rand= 8  14  9
my  = 8  13  0
org(r,c) = (1,3), tar(r,c) = (2,3), dice = 1
============================ver1
My result:
Red piece 3: (D2) -> (E3)

<1>   F  E  0  0  0  
<2>   0  0  0  0  0  
<3>   0  3  0  6  C  
<4>   0  D  0  0  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
D2 E3
get R 5 0 0 A2 0 D5 D3 0 0 E3 B4 B1 A1

The current board:

<1>   F  E  0  0  0  
<2>   3  0  0  0  0  
<3>   0  0  0  6  C  
<4>   0  D  0  0  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 3, piece_value= 3375
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
----------12  11  0  0  0 -----
----------3  0  0  0  0 -----
----------0  0  0  6  9 -----
----------0  10  0  0  0 -----
----------0  0  0  5  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
now move from (0,1) to (1,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 2252.833333, threaten = 0.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 2252.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 2252.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 2252.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 2252.833333, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.833333, blue_a = 2252.833333, threaten = 0.500000
now undo move from (0,1) to (1,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 117.666667, blue_a = 2252.833333, threaten = 3.000000
now undo move from (0,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 2252.833333, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 2252.833333, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 2252.833333, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 2252.833333, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 2252.833333, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 115.333333, blue_a = 2252.833333, threaten = 0.666667
now undo move from (0,1) to (0,2)
eatnum = 0
local_max = -6641.166667
end search, score = -6641.17
fku
org(r,c) = (0,1)
illegal!
rand= 1  6  11
my  = 1  7  0
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 5
============================ver1
My result:
Red piece 5: (B1) -> (B2)

<1>   F  0  0  0  0  
<2>   3  E  0  0  0  
<3>   0  0  0  6  C  
<4>   0  D  0  0  0  
<5>   0  0  0  5  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
B1 B2
get R 1 0 0 A2 0 C4 D3 0 0 E3 B4 B2 A1

The current board:

<1>   F  0  0  0  0  
<2>   3  E  0  0  0  
<3>   0  0  0  6  C  
<4>   0  D  5  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 3, piece_value= 3375
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
----------12  0  0  0  0 -----
----------3  11  0  0  0 -----
----------0  0  0  6  9 -----
----------0  10  5  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = -999999999999999.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1692.666667, blue_a = 2257.500000, threaten = 0.500000
now move from (2,4) to (3,4)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 2257.500000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 2257.500000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 2257.500000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 2257.500000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 2257.500000, threaten = 0.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.666667, blue_a = 2257.500000, threaten = 0.500000
now undo move from (2,4) to (3,4)
eatnum = 9
local_max = -5080.333333
end search, score = -5080.33
fku
org(r,c) = (2,4)
illegal!
rand= 14  19  9
my  = 14  19  0
org(r,c) = (2,4), tar(r,c) = (3,4), dice = 1
============================ver1
My result:
Red piece 3: (E3) -> (E4)

<1>   F  0  0  0  0  
<2>   3  E  0  0  0  
<3>   0  0  0  6  0  
<4>   0  D  5  0  C  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
E3 E4
exit

###
