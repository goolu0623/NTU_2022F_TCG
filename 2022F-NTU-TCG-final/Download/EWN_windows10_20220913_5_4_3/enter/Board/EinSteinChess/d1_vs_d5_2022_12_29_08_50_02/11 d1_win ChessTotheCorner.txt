* 8:51am Dec 29, 2022
* d1 vs d5
* order RB* board 5 6* time 240 0 0
* ini E4 E3 C5 E5 D5 D4 A2 A3 C1 A1 B1 B2
* 1. R 4 A1 B1
* 2. B 4 E5 D5
* 3. R 1 A2 B3
* 4. B 4 D5 C5
* 5. R 4 B1 C2
* 6. B 2 E3 D3
* 7. R 2 A3 B3
* 8. B 6 D4 C4
* 9. R 6 B2 C2
* 10. B 6 C4 B4
* 11. R 4 C2 C3
* 12. B 6 B4 A4
* 13. R 2 B3 B4
* 14. B 1 E4 D4
* 15. R 1 B4 C5
* 16. B 2 D3 C3
* 17. R 2 C5 D5
* 18. B 1 D4 C4
* 19. R 5 C1 D2
* 20. B 2 C3 B3
* 21. R 4 D2 E3
* 22. B 4 B3 A3
* 23. R 3 E3 E4
* 24. B 3 A3 A2
* 25. R 2 D5 E5
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672275072172
1. 1672275072172
2. 1672275072235
3. 1672275072297
4. 1672275072360
5. 1672275072421
6. 1672275072483
7. 1672275072545
8. 1672275072607
9. 1672275072668
10. 1672275072730
11. 1672275072793
12. 1672275072855
13. 1672275072918
14. 1672275072979
15. 1672275073041
16. 1672275073104
17. 1672275073166
18. 1672275073229
19. 1672275073292
20. 1672275073355
21. 1672275073418
22. 1672275073480
23. 1672275073541
24. 1672275073603
25. 1672275073664
Points   Total
   1         4
   2         7
   3         2
   4         7
   5         1
   6         4

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get B 4 E4 E3 C5 E5 D5 D4 A2 A3 C1 B1 0 B2
E5 D5
get B 4 E4 E3 C5 D5 0 D4 B3 A3 C1 B1 0 B2
D5 C5
get B 2 E4 E3 0 C5 0 D4 B3 A3 C1 C2 0 B2
E3 D3
get B 6 E4 D3 0 C5 0 D4 0 B3 C1 C2 0 B2
D4 C4
get B 6 E4 D3 0 C5 0 C4 0 B3 C1 0 0 C2
C4 B4
get B 6 E4 D3 0 C5 0 B4 0 B3 C1 0 0 C3
B4 A4
get B 1 E4 D3 0 C5 0 A4 0 B4 C1 0 0 C3
E4 D4
get B 2 D4 D3 0 0 0 A4 0 C5 C1 0 0 C3
D3 C3
get B 1 D4 C3 0 0 0 A4 0 D5 C1 0 0 0
D4 C4
get B 2 C4 C3 0 0 0 A4 0 D5 D2 0 0 0
C3 B3
get B 4 C4 B3 0 0 0 A4 0 D5 E3 0 0 0
B3 A3
get B 3 C4 A3 0 0 0 A4 0 D5 E4 0 0 0
A3 A2
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get B 4 E4 E3 C5 E5 D5 D4 A2 A3 C1 B1 0 B2

The current board:

<1>   0  D  C  0  0  
<2>   A  F  0  0  0  
<3>   B  0  0  0  2  
<4>   0  0  0  6  1  
<5>   0  0  3  5  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  10  9  0  0 -----
----------7  12  0  0  0 -----
----------8  0  0  0  2 -----
----------0  0  0  6  1 -----
----------0  0  3  5  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (4,4) to (3,3)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (4,4) to (3,3)
eatnum = 6
now move from (4,4) to (3,4)
eatnum = 1
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (4,4) to (3,4)
eatnum = 1
now move from (4,4) to (4,3)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.833333, threaten = 0.000000
now undo move from (4,4) to (4,3)
eatnum = 5
local_max = -23.333333
end search, score = -23.3333
fku
org(r,c) = (4,4)
rand= 24  23  4
my  = 24  23  4
org(r,c) = (4,4), tar(r,c) = (4,3), dice = 4
============================ver1
My result:
Blue piece 4: (E5) -> (D5)

<1>   0  D  C  0  0  
<2>   A  F  0  0  0  
<3>   B  0  0  0  2  
<4>   0  0  0  6  1  
<5>   0  0  3  4  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
E5 D5
get B 4 E4 E3 C5 D5 0 D4 B3 A3 C1 B1 0 B2

The current board:

<1>   0  D  C  0  0  
<2>   0  F  0  0  0  
<3>   B  A  0  0  2  
<4>   0  0  0  6  1  
<5>   0  0  3  4  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  10  9  0  0 -----
----------0  12  0  0  0 -----
----------8  7  0  0  2 -----
----------0  0  0  6  1 -----
----------0  0  3  4  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.500000
now undo move from (4,3) to (3,2)
eatnum = 0
now move from (4,3) to (3,3)
eatnum = 6
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.000000, threaten = 0.000000
now undo move from (4,3) to (3,3)
eatnum = 6
now move from (4,3) to (4,2)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 6.000000, threaten = 0.000000
now undo move from (4,3) to (4,2)
eatnum = 3
local_max = -34.833333
end search, score = -34.8333
fku
org(r,c) = (4,3)
rand= 23  22  4
my  = 23  22  4
org(r,c) = (4,3), tar(r,c) = (4,2), dice = 4
============================ver1
My result:
Blue piece 4: (D5) -> (C5)

<1>   0  D  C  0  0  
<2>   0  F  0  0  0  
<3>   B  A  0  0  2  
<4>   0  0  0  6  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
D5 C5
get B 2 E4 E3 0 C5 0 D4 B3 A3 C1 C2 0 B2

The current board:

<1>   0  0  C  0  0  
<2>   0  F  D  0  0  
<3>   B  A  0  0  2  
<4>   0  0  0  6  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  0  9  0  0 -----
----------0  12  10  0  0 -----
----------8  7  0  0  2 -----
----------0  0  0  6  1 -----
----------0  0  4  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 2.500000
now undo move from (2,4) to (1,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 6.000000, threaten = 0.000000
now undo move from (2,4) to (1,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 12.833333, blue_a = 10.666667, threaten = 5.000000
now undo move from (2,4) to (2,3)
eatnum = 0
local_max = -58.500000
end search, score = -58.5
fku
org(r,c) = (2,4)
rand= 14  8  2
my  = 14  13  2
org(r,c) = (2,4), tar(r,c) = (2,3), dice = 2
============================ver1
My result:
Blue piece 2: (E3) -> (D3)

<1>   0  0  C  0  0  
<2>   0  F  D  0  0  
<3>   B  A  0  2  0  
<4>   0  0  0  6  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
E3 D3
get B 6 E4 D3 0 C5 0 D4 0 B3 C1 C2 0 B2

The current board:

<1>   0  0  C  0  0  
<2>   0  F  D  0  0  
<3>   0  B  0  2  0  
<4>   0  0  0  6  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  0  9  0  0 -----
----------0  12  10  0  0 -----
----------0  8  0  2  0 -----
----------0  0  0  6  1 -----
----------0  0  4  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 80.666667, threaten = 155.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 80.666667, threaten = 155.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 80.666667, threaten = 155.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 80.666667, threaten = 155.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 80.666667, threaten = 155.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 80.666667, threaten = 155.000000
now undo move from (3,3) to (2,2)
eatnum = 0
now move from (3,3) to (2,3)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 6.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 6.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 6.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 6.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 6.166667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 6.166667, threaten = 5.000000
now undo move from (3,3) to (2,3)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.166667, blue_a = 10.666667, threaten = 10.000000
now undo move from (3,3) to (3,2)
eatnum = 0
local_max = -60.000000
end search, score = -60
fku
org(r,c) = (3,3)
rand= 18  12  6
my  = 18  17  6
org(r,c) = (3,3), tar(r,c) = (3,2), dice = 6
============================ver1
My result:
Blue piece 6: (D4) -> (C4)

<1>   0  0  C  0  0  
<2>   0  F  D  0  0  
<3>   0  B  0  2  0  
<4>   0  0  6  0  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
D4 C4
get B 6 E4 D3 0 C5 0 C4 0 B3 C1 0 0 C2

The current board:

<1>   0  0  C  0  0  
<2>   0  0  F  0  0  
<3>   0  B  0  2  0  
<4>   0  0  6  0  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  0  9  0  0 -----
----------0  0  12  0  0 -----
----------0  8  0  2  0 -----
----------0  0  6  0  1 -----
----------0  0  4  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (3,2) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 80.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 80.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 80.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 80.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 80.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.333333, blue_a = 80.666667, threaten = 5.000000
now undo move from (3,2) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 80.666667, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 80.666667, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 80.666667, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 80.666667, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 80.666667, threaten = 80.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 80.666667, threaten = 80.000000
now undo move from (3,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 10.666667, threaten = 10.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 13.000000, blue_a = 10.666667, threaten = 10.000000
now undo move from (3,2) to (3,1)
eatnum = 0
local_max = -38.333333
end search, score = -38.3333
fku
org(r,c) = (3,2)
rand= 17  11  6
my  = 17  16  6
org(r,c) = (3,2), tar(r,c) = (3,1), dice = 6
============================ver1
My result:
Blue piece 6: (C4) -> (B4)

<1>   0  0  C  0  0  
<2>   0  0  F  0  0  
<3>   0  B  0  2  0  
<4>   0  6  0  0  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
C4 B4
get B 6 E4 D3 0 C5 0 B4 0 B3 C1 0 0 C3

The current board:

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  B  F  2  0  
<4>   0  6  0  0  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  0  9  0  0 -----
----------0  0  0  0  0 -----
----------0  8  12  2  0 -----
----------0  6  0  0  1 -----
----------0  0  4  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 80.666667, threaten = 0.000000
now undo move from (3,1) to (2,0)
eatnum = 0
now move from (3,1) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 80.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 80.666667, threaten = 0.000000
now undo move from (3,1) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.000000
now undo move from (3,1) to (3,0)
eatnum = 0
local_max = -343.333333
end search, score = -343.333
fku
org(r,c) = (3,1)
rand= 16  10  6
my  = 16  15  6
org(r,c) = (3,1), tar(r,c) = (3,0), dice = 6
============================ver1
My result:
Blue piece 6: (B4) -> (A4)

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  B  F  2  0  
<4>   6  0  0  0  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
B4 A4
get B 1 E4 D3 0 C5 0 A4 0 B4 C1 0 0 C3

The current board:

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  F  2  0  
<4>   6  B  0  0  1  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  0  9  0  0 -----
----------0  0  0  0  0 -----
----------0  0  12  2  0 -----
----------6  8  0  0  1 -----
----------0  0  4  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (3,4) to (2,3)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.166667, threaten = 0.333333
now undo move from (3,4) to (2,3)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 10.666667, threaten = 0.333333
now undo move from (3,4) to (2,4)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.000000, threaten = 5.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.000000, threaten = 5.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.000000, threaten = 5.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.000000, threaten = 5.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.000000, threaten = 5.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 13.000000, threaten = 5.333333
now undo move from (3,4) to (3,3)
eatnum = 0
local_max = -346.333333
end search, score = -346.333
fku
org(r,c) = (3,4)
rand= 19  18  1
my  = 19  18  1
org(r,c) = (3,4), tar(r,c) = (3,3), dice = 1
============================ver1
My result:
Blue piece 1: (E4) -> (D4)

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  F  2  0  
<4>   6  B  0  1  0  
<5>   0  0  4  0  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
============================
E4 D4
get B 2 D4 D3 0 0 0 A4 0 C5 C1 0 0 C3

The current board:

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  F  2  0  
<4>   6  0  0  1  0  
<5>   0  0  B  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 2, piece_value= 225
----------0  0  9  0  0 -----
----------0  0  0  0  0 -----
----------0  0  12  2  0 -----
----------6  0  0  1  0 -----
----------0  0  8  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 162.500000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 162.500000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 162.500000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 162.500000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 162.500000, threaten = 117.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 162.500000, threaten = 117.500000
now undo move from (2,3) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 22.500000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 22.500000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 22.500000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 22.500000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 22.500000, threaten = 12.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 22.500000, threaten = 12.500000
now undo move from (2,3) to (1,3)
eatnum = 0
now move from (2,3) to (2,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 162.500000, threaten = 0.000000
now undo move from (2,3) to (2,2)
eatnum = 12
local_max = 11.166667
end search, score = 11.1667
fku
org(r,c) = (2,3)
rand= 13  7  2
my  = 13  12  2
org(r,c) = (2,3), tar(r,c) = (2,2), dice = 2
============================ver1
My result:
Blue piece 2: (D3) -> (C3)

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  2  0  0  
<4>   6  0  0  1  0  
<5>   0  0  B  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
D3 C3
get B 1 D4 C3 0 0 0 A4 0 D5 C1 0 0 0

The current board:

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  2  0  0  
<4>   6  0  0  1  0  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 3, piece_value= 3375
----------0  0  9  0  0 -----
----------0  0  0  0  0 -----
----------0  0  2  0  0 -----
----------6  0  0  1  0 -----
----------0  0  0  8  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (3,3) to (2,2)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 200.000000, threaten = 0.000000
now undo move from (3,3) to (2,2)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
now undo move from (3,3) to (2,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1125.666667, blue_a = 162.500000, threaten = 0.000000
now undo move from (3,3) to (3,2)
eatnum = 0
local_max = -2088.833333
end search, score = -2088.83
fku
org(r,c) = (3,3)
rand= 18  17  1
my  = 18  17  1
org(r,c) = (3,3), tar(r,c) = (3,2), dice = 1
============================ver1
My result:
Blue piece 1: (D4) -> (C4)

<1>   0  0  C  0  0  
<2>   0  0  0  0  0  
<3>   0  0  2  0  0  
<4>   6  0  1  0  0  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
D4 C4
get B 2 C4 C3 0 0 0 A4 0 D5 D2 0 0 0

The current board:

<1>   0  0  0  0  0  
<2>   0  0  0  C  0  
<3>   0  0  2  0  0  
<4>   6  0  1  0  0  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 3, piece_value= 3375
----------0  0  0  0  0 -----
----------0  0  0  9  0 -----
----------0  0  2  0  0 -----
----------6  0  1  0  0 -----
----------0  0  0  8  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (2,2) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
now undo move from (2,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1135.000000, blue_a = 162.500000, threaten = 0.000000
now undo move from (2,2) to (2,1)
eatnum = 0
local_max = -2107.500000
end search, score = -2107.5
fku
org(r,c) = (2,2)
rand= 12  11  2
my  = 12  11  2
org(r,c) = (2,2), tar(r,c) = (2,1), dice = 2
============================ver1
My result:
Blue piece 2: (C3) -> (B3)

<1>   0  0  0  0  0  
<2>   0  0  0  C  0  
<3>   0  2  0  0  0  
<4>   6  0  1  0  0  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
C3 B3
get B 4 C4 B3 0 0 0 A4 0 D5 E3 0 0 0

The current board:

<1>   0  0  0  0  0  
<2>   0  0  0  0  0  
<3>   0  2  0  0  C  
<4>   6  0  1  0  0  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 3, piece_value= 3375
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
----------0  2  0  0  9 -----
----------6  0  1  0  0 -----
----------0  0  0  8  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 302.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 302.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 302.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 302.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 302.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 302.500000, threaten = 0.000000
now undo move from (3,0) to (2,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (2,1) to (1,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (2,1) to (1,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 162.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1275.000000, blue_a = 162.500000, threaten = 0.000000
now undo move from (2,1) to (2,0)
eatnum = 0
local_max = -2387.500000
end search, score = -2387.5
fku
org(r,c) = (2,1)
rand= 11  10  2
my  = 11  10  2
org(r,c) = (2,1), tar(r,c) = (2,0), dice = 4
============================ver1
My result:
Blue piece 2: (B3) -> (A3)

<1>   0  0  0  0  0  
<2>   0  0  0  0  0  
<3>   2  0  0  0  C  
<4>   6  0  1  0  0  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
B3 A3
get B 3 C4 A3 0 0 0 A4 0 D5 E4 0 0 0

The current board:

<1>   0  0  0  0  0  
<2>   0  0  0  0  0  
<3>   2  0  0  0  0  
<4>   6  0  1  0  C  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 3, piece_value= 3375
piece_num=8, piece_distance= 3, piece_value= 3375
----------0  0  0  0  0 -----
----------0  0  0  0  0 -----
----------2  0  0  0  0 -----
----------6  0  1  0  9 -----
----------0  0  0  8  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (3,0) to (2,0)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 200.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 200.000000, threaten = 0.000000
now undo move from (3,0) to (2,0)
eatnum = 2
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3375.000000, blue_a = 2262.500000, threaten = 0.000000
now undo move from (2,0) to (1,0)
eatnum = 0
local_max = -4487.500000
end search, score = -4487.5
fku
org(r,c) = (2,0)
rand= 10  5  2
my  = 10  5  2
org(r,c) = (2,0), tar(r,c) = (1,0), dice = 3
============================ver1
My result:
Blue piece 2: (A3) -> (A2)

<1>   0  0  0  0  0  
<2>   2  0  0  0  0  
<3>   0  0  0  0  0  
<4>   6  0  1  0  C  
<5>   0  0  0  B  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
A3 A2
exit

###
