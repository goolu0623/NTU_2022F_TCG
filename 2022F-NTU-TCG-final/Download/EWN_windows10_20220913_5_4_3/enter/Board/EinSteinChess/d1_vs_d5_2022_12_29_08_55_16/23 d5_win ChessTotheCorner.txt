* 8:57am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini D5 E4 E3 C5 D4 E5 B1 A2 A3 C1 B2 A1
* 1. B 5 D4 D3
* 2. R 4 C1 D1
* 3. B 5 D3 D2
* 4. R 3 A3 B3
* 5. B 3 E3 D3
* 6. R 3 B3 B4
* 7. B 1 D5 C5
* 8. R 2 A2 A3
* 9. B 5 D2 C1
* 10. R 3 B4 C5
* 11. B 3 D3 C2
* 12. R 5 B2 C2
* 13. B 6 E5 E4
* 14. R 3 C5 D5
* 15. B 4 C1 B1
* 16. R 3 D5 E5
* ChessTotheCorner d5 wins
* Comment 0 0
0. 1672275465525
1. 1672275465525
2. 1672275465586
3. 1672275465648
4. 1672275465710
5. 1672275465772
6. 1672275465834
7. 1672275465895
8. 1672275465958
9. 1672275466019
10. 1672275466082
11. 1672275466145
12. 1672275466207
13. 1672275466270
14. 1672275466333
15. 1672275466395
16. 1672275466457
Points   Total
   1         1
   2         1
   3         7
   4         2
   5         4
   6         1

# 8 10 12 14 16 18 20 22 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D5 E4 E3 C5 D3 E5 B1 A2 A3 C1 B2 A1
C1 D1
get R 3 D5 E4 E3 C5 D2 E5 B1 A2 A3 D1 B2 A1
A3 B3
get R 3 D5 E4 D3 C5 D2 E5 B1 A2 B3 D1 B2 A1
B3 B4
get R 2 C5 E4 D3 0 D2 E5 B1 A2 B4 D1 B2 A1
A2 A3
get R 3 C5 E4 D3 0 C1 E5 B1 A3 B4 D1 B2 A1
B4 C5
get R 5 0 E4 C2 0 C1 E5 B1 A3 C5 D1 B2 A1
B2 C2
get R 3 0 0 0 0 C1 E4 B1 A3 C5 D1 C2 A1
C5 D5
get R 3 0 0 0 0 B1 E4 0 A3 D5 D1 C2 A1
D5 E5
exit

# 8 10 12 14 16 18 20 22 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D5 E4 E3 C5 D3 E5 B1 A2 A3 C1 B2 A1

The current board:

<1>   F  A  D  0  0  
<2>   B  E  0  0  0  
<3>   C  0  0  5  3  
<4>   0  0  0  0  2  
<5>   0  0  4  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  10  0  0 -----
----------8  11  0  0  0 -----
----------9  0  0  5  3 -----
----------0  0  0  0  2 -----
----------0  0  4  1  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
now move from (0,2) to (1,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 3.333333, threaten = 0.000000
now undo move from (0,2) to (1,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 5.000000
now undo move from (0,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -14.166667
end search, score = -14.1667
fku
org(r,c) = (0,2)
illegal!
rand= 2  3  10
my  = 2  8  0
org(r,c) = (0,2), tar(r,c) = (1,3), dice = 4
============================ver1
My result:
Red piece 4: (C1) -> (D1)

<1>   F  A  0  D  0  
<2>   B  E  0  0  0  
<3>   C  0  0  5  3  
<4>   0  0  0  0  2  
<5>   0  0  4  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
C1 D1
get R 3 D5 E4 E3 C5 D2 E5 B1 A2 A3 D1 B2 A1

The current board:

<1>   F  A  0  D  0  
<2>   B  E  0  5  0  
<3>   C  0  0  0  3  
<4>   0  0  0  0  2  
<5>   0  0  4  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  0  10  0 -----
----------8  11  0  5  0 -----
----------9  0  0  0  3 -----
----------0  0  0  0  2 -----
----------0  0  4  1  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
now move from (2,0) to (3,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 3.333333, threaten = 0.166667
now undo move from (2,0) to (3,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 3.333333, threaten = 0.333333
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 3.333333, threaten = 2.666667
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -16.666667
end search, score = -16.6667
fku
org(r,c) = (2,0)
illegal!
rand= 10  11  9
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 3
============================ver1
My result:
Red piece 3: (A3) -> (B3)

<1>   F  A  0  D  0  
<2>   B  E  0  5  0  
<3>   0  C  0  0  3  
<4>   0  0  0  0  2  
<5>   0  0  4  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
A3 B3
get R 3 D5 E4 D3 C5 D2 E5 B1 A2 B3 D1 B2 A1

The current board:

<1>   F  A  0  D  0  
<2>   B  E  0  5  0  
<3>   0  C  0  3  0  
<4>   0  0  0  0  2  
<5>   0  0  4  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  0  10  0 -----
----------8  11  0  5  0 -----
----------0  9  0  3  0 -----
----------0  0  0  0  2 -----
----------0  0  4  1  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
now move from (2,1) to (3,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
now undo move from (2,1) to (3,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 5.166667
now undo move from (2,1) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 5.666667, threaten = 75.166667
now undo move from (2,1) to (2,2)
eatnum = 0
local_max = -30.666667
end search, score = -30.6667
fku
org(r,c) = (2,1)
illegal!
rand= 11  16  9
my  = 11  17  0
org(r,c) = (2,1), tar(r,c) = (3,2), dice = 3
============================ver1
My result:
Red piece 3: (B3) -> (B4)

<1>   F  A  0  D  0  
<2>   B  E  0  5  0  
<3>   0  0  0  3  0  
<4>   0  C  0  0  2  
<5>   0  0  4  1  6  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
============================
B3 B4
get R 2 C5 E4 D3 0 D2 E5 B1 A2 B4 D1 B2 A1

The current board:

<1>   F  A  0  D  0  
<2>   B  E  0  5  0  
<3>   0  0  0  3  0  
<4>   0  C  0  0  2  
<5>   0  0  1  0  6  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  0  10  0 -----
----------8  11  0  5  0 -----
----------0  0  0  3  0 -----
----------0  9  0  0  2 -----
----------0  0  1  0  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 10.500000, threaten = 2.833333
now move from (1,0) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.833333
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 10.500000, threaten = 2.833333
now undo move from (1,0) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 10.500000, threaten = 2.833333
now undo move from (1,0) to (2,0)
eatnum = 0
now move from (1,0) to (1,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 2.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 10.500000, threaten = 2.833333
now undo move from (1,0) to (1,1)
eatnum = 11
local_max = -47.166667
end search, score = -47.1667
fku
org(r,c) = (1,0)
illegal!
rand= 5  10  8
my  = 5  11  0
org(r,c) = (1,0), tar(r,c) = (2,1), dice = 2
============================ver1
My result:
Red piece 2: (A2) -> (A3)

<1>   F  A  0  D  0  
<2>   0  E  0  5  0  
<3>   B  0  0  3  0  
<4>   0  C  0  0  2  
<5>   0  0  1  0  6  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
============================
A2 A3
get R 3 C5 E4 D3 0 C1 E5 B1 A3 B4 D1 B2 A1

The current board:

<1>   F  A  5  D  0  
<2>   0  E  0  0  0  
<3>   B  0  0  3  0  
<4>   0  C  0  0  2  
<5>   0  0  1  0  6  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  5  10  0 -----
----------0  11  0  0  0 -----
----------8  0  0  3  0 -----
----------0  9  0  0  2 -----
----------0  0  1  0  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (3,1) to (4,2)
eatnum = 1
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
now move from (3,1) to (4,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 80.500000, threaten = 0.333333
now undo move from (3,1) to (4,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 80.500000, threaten = 0.333333
now undo move from (3,1) to (4,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 80.500000, threaten = 0.333333
now undo move from (3,1) to (3,2)
eatnum = 0
local_max = -281.666667
end search, score = -281.667
fku
org(r,c) = (3,1)
illegal!
rand= 16  22  9
my  = 16  22  0
org(r,c) = (3,1), tar(r,c) = (4,2), dice = 3
============================ver1
My result:
Red piece 3: (B4) -> (C5)

<1>   F  A  5  D  0  
<2>   0  E  0  0  0  
<3>   B  0  0  3  0  
<4>   0  0  0  0  2  
<5>   0  0  C  0  6  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 6
============================
B4 C5
get R 5 0 E4 C2 0 C1 E5 B1 A3 C5 D1 B2 A1

The current board:

<1>   F  A  5  D  0  
<2>   0  E  3  0  0  
<3>   B  0  0  0  0  
<4>   0  0  0  0  2  
<5>   0  0  C  0  6  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 2, piece_value= 225
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 0, piece_value= 1
----------12  7  5  10  0 -----
----------0  11  3  0  0 -----
----------8  0  0  0  0 -----
----------0  0  0  0  2 -----
----------0  0  9  0  6 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 150.500000, threaten = 0.666667
now move from (1,1) to (2,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.500000, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.500000, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.500000, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.500000, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.500000, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.500000, blue_a = 150.500000, threaten = 0.666667
now undo move from (1,1) to (2,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 150.500000, threaten = 0.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 150.500000, threaten = 0.666667
now undo move from (1,1) to (2,1)
eatnum = 0
now move from (1,1) to (1,2)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 113.333333, threaten = 0.333333
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 113.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 113.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 113.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 113.333333, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 40.666667, blue_a = 113.333333, threaten = 0.333333
now undo move from (1,1) to (1,2)
eatnum = 3
local_max = -299.666667
end search, score = -299.667
fku
org(r,c) = (1,1)
illegal!
rand= 6  7  11
my  = 6  7  0
org(r,c) = (1,1), tar(r,c) = (1,2), dice = 5
============================ver1
My result:
Red piece 5: (B2) -> (C2)

<1>   F  A  5  D  0  
<2>   0  0  E  0  0  
<3>   B  0  0  0  0  
<4>   0  0  0  0  2  
<5>   0  0  C  0  6  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 6
============================
B2 C2
get R 3 0 0 0 0 C1 E4 B1 A3 C5 D1 C2 A1

The current board:

<1>   F  A  5  D  0  
<2>   0  0  E  0  0  
<3>   B  0  0  0  0  
<4>   0  0  0  0  6  
<5>   0  0  C  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 6
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 2, piece_value= 225
----------12  7  5  10  0 -----
----------0  0  11  0  0 -----
----------8  0  0  0  0 -----
----------0  0  0  0  6 -----
----------0  0  9  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 565.666667, blue_a = 187.666667, threaten = 0.333333
now move from (4,2) to (4,3)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 187.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 187.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 187.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 187.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 187.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 187.666667, threaten = 0.333333
now undo move from (4,2) to (4,3)
eatnum = 9
local_max = 190.000000
end search, score = 190
fku
org(r,c) = (4,2)
illegal!
rand= 22  23  9
my  = 22  23  0
org(r,c) = (4,2), tar(r,c) = (4,3), dice = 3
============================ver1
My result:
Red piece 3: (C5) -> (D5)

<1>   F  A  5  D  0  
<2>   0  0  E  0  0  
<3>   B  0  0  0  0  
<4>   0  0  0  0  6  
<5>   0  0  0  C  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 6
============================
C5 D5
get R 3 0 0 0 0 B1 E4 0 A3 D5 D1 C2 A1

The current board:

<1>   F  5  0  D  0  
<2>   0  0  E  0  0  
<3>   B  0  0  0  0  
<4>   0  0  0  0  6  
<5>   0  0  0  C  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 5
generate start: 
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 3, piece_value= 3375
----------12  5  0  10  0 -----
----------0  0  11  0  0 -----
----------8  0  0  0  0 -----
----------0  0  0  0  6 -----
----------0  0  0  9  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
red reach: 
now move from (4,3) to (4,4)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 2812.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 2812.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 2812.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 2812.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 2812.666667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 2812.666667, threaten = 0.333333
now undo move from (4,3) to (4,4)
eatnum = 9
local_max = -0.000000
end search, score = -2.22507e-308
fku
org(r,c) = (4,3)
illegal!
rand= 23  24  9
my  = 23  24  0
org(r,c) = (4,3), tar(r,c) = (4,4), dice = 3
============================ver1
My result:
Red piece 3: (D5) -> (E5)

<1>   F  5  0  D  0  
<2>   0  0  E  0  0  
<3>   B  0  0  0  0  
<4>   0  0  0  0  6  
<5>   0  0  0  0  C  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 5
============================
D5 E5
exit

###
