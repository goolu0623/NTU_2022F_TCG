* 8:55am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini D5 E5 D4 E4 C5 E3 B1 A1 B2 A2 C1 A3
* 1. B 6 E3 D3
* 2. R 4 A2 A3
* 3. B 4 E4 D4
* 4. R 1 B1 C2
* 5. B 6 D3 D2
* 6. R 4 A3 B4
* 7. B 4 D4 C4
* 8. R 3 B2 C3
* 9. B 5 C5 C4
* 10. R 2 A1 A2
* 11. B 6 D2 C1
* 12. R 6 B4 C5
* 13. B 5 C4 C3
* 14. R 6 C5 D5
* 15. B 3 E5 D5
* 16. R 2 A2 A3
* 17. B 2 D5 C4
* 18. R 2 A3 A4
* 19. B 4 C3 B2
* 20. R 3 A4 A5
* 21. B 6 C1 B1
* 22. R 1 C2 D3
* 23. B 5 B2 B1
* 24. R 1 D3 D4
* 25. B 1 C4 B3
* 26. R 1 D4 E5
* ChessTotheCorner d5 wins
* Comment 0 0
0. 1672275316686
1. 1672275316686
2. 1672275316734
3. 1672275316749
4. 1672275316796
5. 1672275316813
6. 1672275316857
7. 1672275316873
8. 1672275316920
9. 1672275316935
10. 1672275316981
11. 1672275316998
12. 1672275317046
13. 1672275317060
14. 1672275317107
15. 1672275317124
16. 1672275317171
17. 1672275317185
18. 1672275317233
19. 1672275317249
20. 1672275317296
21. 1672275317311
22. 1672275317357
23. 1672275317374
24. 1672275317421
25. 1672275317437
26. 1672275317482
Points   Total
   1         5
   2         4
   3         3
   4         5
   5         3
   6         6

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D5 E5 D4 E4 C5 D3 B1 A1 B2 A2 C1 A3
A2 A3
get R 1 D5 E5 0 D4 C5 D3 B1 A1 B2 A3 C1 0
B1 C2
get R 4 D5 E5 0 D4 C5 D2 C2 A1 B2 A3 C1 0
A3 B4
get R 3 D5 E5 0 C4 C5 D2 C2 A1 B2 B4 C1 0
B2 C3
get R 2 D5 E5 0 0 C4 D2 C2 A1 C3 B4 C1 0
A1 A2
get R 6 D5 E5 0 0 C4 C1 C2 A2 C3 B4 0 0
B4 C5
get R 6 D5 E5 0 0 C3 C1 C2 A2 0 C5 0 0
C5 D5
get R 2 0 D5 0 0 C3 C1 C2 A2 0 0 0 0
A2 A3
get R 2 0 C4 0 0 C3 C1 C2 A3 0 0 0 0
A3 A4
get R 3 0 C4 0 0 B2 C1 C2 A4 0 0 0 0
A4 A5
get R 1 0 C4 0 0 B2 B1 C2 A5 0 0 0 0
C2 D3
get R 1 0 C4 0 0 B1 0 D3 A5 0 0 0 0
D3 D4
get R 1 0 B3 0 0 B1 0 D4 A5 0 0 0 0
D4 E5
exit

# 8 10 12 14 16 18 20 22 24 26 28 30 32 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 D5 E5 D4 E4 C5 D3 B1 A1 B2 A2 C1 A3

The current board:

<1>   B  A  E  0  0  
<2>   D  C  0  0  0  
<3>   F  0  0  6  0  
<4>   0  0  0  3  4  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=12, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  7  11  0  0 -----
----------10  9  0  0  0 -----
----------12  0  0  6  0 -----
----------0  0  0  3  4 -----
----------0  0  5  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 0.000000
now move from (1,0) to (2,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,0) to (2,1)
eatnum = 10
now move from (1,0) to (2,0)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,0) to (2,0)
eatnum = 12
now move from (1,0) to (1,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 0.000000
now undo move from (1,0) to (1,1)
eatnum = 9
local_max = -28.166667
end search, score = -28.1667
fku
org(r,c) = (1,0)
illegal!
rand= 5  10  10
my  = 5  6  0
org(r,c) = (1,0), tar(r,c) = (1,1), dice = 4
============================ver1
My result:
Red piece 4: (A2) -> (A3)

<1>   B  A  E  0  0  
<2>   0  C  0  0  0  
<3>   D  0  0  6  0  
<4>   0  0  0  3  4  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A2 A3
get R 1 D5 E5 0 D4 C5 D3 B1 A1 B2 A3 C1 0

The current board:

<1>   B  A  E  0  0  
<2>   0  C  0  0  0  
<3>   D  0  0  6  0  
<4>   0  0  0  4  0  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  7  11  0  0 -----
----------0  9  0  0  0 -----
----------10  0  0  6  0 -----
----------0  0  0  4  0 -----
----------0  0  5  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 2.500000
now move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.000000
now undo move from (0,1) to (1,2)
eatnum = 7
now move from (0,1) to (1,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.166667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 8.166667, threaten = 2.500000
now undo move from (0,1) to (1,1)
eatnum = 9
now move from (0,1) to (0,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.166667, threaten = 0.166667
now undo move from (0,1) to (0,2)
eatnum = 11
local_max = -37.500000
end search, score = -37.5
fku
org(r,c) = (0,1)
illegal!
rand= 1  7  7
my  = 1  7  0
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 1
============================ver1
My result:
Red piece 1: (B1) -> (C2)

<1>   B  0  E  0  0  
<2>   0  C  A  0  0  
<3>   D  0  0  6  0  
<4>   0  0  0  4  0  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
B1 C2
get R 4 D5 E5 0 D4 C5 D2 C2 A1 B2 A3 C1 0

The current board:

<1>   B  0  E  0  0  
<2>   0  C  A  6  0  
<3>   D  0  0  0  0  
<4>   0  0  0  4  0  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  11  0  0 -----
----------0  9  7  6  0 -----
----------10  0  0  0  0 -----
----------0  0  0  4  0 -----
----------0  0  5  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
now move from (2,0) to (3,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 0.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 0.166667
now undo move from (2,0) to (3,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.333333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 0.333333
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 2.666667
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -32.833333
end search, score = -32.8333
fku
org(r,c) = (2,0)
illegal!
rand= 10  16  10
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 4
============================ver1
My result:
Red piece 4: (A3) -> (B4)

<1>   B  0  E  0  0  
<2>   0  C  A  6  0  
<3>   0  0  0  0  0  
<4>   0  D  0  4  0  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
A3 B4
get R 3 D5 E5 0 C4 C5 D2 C2 A1 B2 B4 C1 0

The current board:

<1>   B  0  E  0  0  
<2>   0  C  A  6  0  
<3>   0  0  0  0  0  
<4>   0  D  4  0  0  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  11  0  0 -----
----------0  9  7  6  0 -----
----------0  0  0  0  0 -----
----------0  10  4  0  0 -----
----------0  0  5  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 8.166667, threaten = 77.666667
now move from (1,1) to (2,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.666667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.166667, blue_a = 8.166667, threaten = 2.666667
now undo move from (1,1) to (2,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 8.000000, blue_a = 8.166667, threaten = 7.666667
now undo move from (1,1) to (2,1)
eatnum = 0
now move from (1,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 7.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 8.166667, threaten = 7.666667
now undo move from (1,1) to (1,2)
eatnum = 7
local_max = -35.333333
end search, score = -35.3333
fku
org(r,c) = (1,1)
illegal!
rand= 6  12  9
my  = 6  12  0
org(r,c) = (1,1), tar(r,c) = (2,2), dice = 3
============================ver1
My result:
Red piece 3: (B2) -> (C3)

<1>   B  0  E  0  0  
<2>   0  0  A  6  0  
<3>   0  0  C  0  0  
<4>   0  D  4  0  0  
<5>   0  0  5  1  2  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
============================
B2 C3
get R 2 D5 E5 0 0 C4 D2 C2 A1 C3 B4 C1 0

The current board:

<1>   B  0  E  0  0  
<2>   0  0  A  6  0  
<3>   0  0  C  0  0  
<4>   0  D  5  0  0  
<5>   0  0  0  1  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------8  0  11  0  0 -----
----------0  0  7  6  0 -----
----------0  0  9  0  0 -----
----------0  10  5  0  0 -----
----------0  0  0  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 45.333333, blue_a = 10.666667, threaten = 75.166667
now move from (0,0) to (1,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 10.666667, threaten = 75.166667
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 82.833333, blue_a = 10.666667, threaten = 75.166667
now undo move from (0,0) to (1,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
now undo move from (0,0) to (1,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 10.666667, threaten = 75.166667
now undo move from (0,0) to (0,1)
eatnum = 0
local_max = -35.000000
end search, score = -35
fku
org(r,c) = (0,0)
illegal!
rand= 0  5  8
my  = 0  6  0
org(r,c) = (0,0), tar(r,c) = (1,1), dice = 2
============================ver1
My result:
Red piece 2: (A1) -> (A2)

<1>   0  0  E  0  0  
<2>   B  0  A  6  0  
<3>   0  0  C  0  0  
<4>   0  D  5  0  0  
<5>   0  0  0  1  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
A1 A2
get R 6 D5 E5 0 0 C4 C1 C2 A2 C3 B4 0 0

The current board:

<1>   0  0  6  0  0  
<2>   B  0  A  0  0  
<3>   0  0  C  0  0  
<4>   0  D  5  0  0  
<5>   0  0  0  1  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
generate start: 
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=9, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  6  0  0 -----
----------8  0  7  0  0 -----
----------0  0  9  0  0 -----
----------0  10  5  0  0 -----
----------0  0  0  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
now move from (3,1) to (4,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 45.666667, threaten = 75.000000
now undo move from (3,1) to (4,2)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 47.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 47.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 47.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 47.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 47.666667, blue_a = 45.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 47.666667, blue_a = 45.666667, threaten = 75.000000
now undo move from (3,1) to (4,1)
eatnum = 0
now move from (3,1) to (3,2)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 150.833333, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 152.666667, blue_a = 150.833333, threaten = 0.000000
now undo move from (3,1) to (3,2)
eatnum = 5
local_max = -105.000000
end search, score = -105
fku
org(r,c) = (3,1)
illegal!
rand= 16  22  10
my  = 16  22  0
org(r,c) = (3,1), tar(r,c) = (4,2), dice = 6
============================ver1
My result:
Red piece 4: (B4) -> (C5)

<1>   0  0  6  0  0  
<2>   B  0  A  0  0  
<3>   0  0  C  0  0  
<4>   0  0  5  0  0  
<5>   0  0  D  1  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 4
============================
B4 C5
get R 6 D5 E5 0 0 C3 C1 C2 A2 0 C5 0 0

The current board:

<1>   0  0  6  0  0  
<2>   B  0  A  0  0  
<3>   0  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  D  1  2  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 3
generate start: 
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=10, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  6  0  0 -----
----------8  0  7  0  0 -----
----------0  0  5  0  0 -----
----------0  0  0  0  0 -----
----------0  0  10  1  2 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (4,2) to (4,3)
eatnum = 1
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 2252.833333, blue_a = 150.666667, threaten = 5.000000
now move from (4,2) to (4,3)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
now undo move from (4,2) to (4,3)
eatnum = 10
local_max = 1795.833333
end search, score = 1795.83
fku
org(r,c) = (4,2)
illegal!
rand= 22  23  10
my  = 22  23  0
org(r,c) = (4,2), tar(r,c) = (4,3), dice = 6
============================ver1
My result:
Red piece 4: (C5) -> (D5)

<1>   0  0  6  0  0  
<2>   B  0  A  0  0  
<3>   0  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  D  2  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
============================
C5 D5
get R 2 0 D5 0 0 C3 C1 C2 A2 0 0 0 0

The current board:

<1>   0  0  6  0  0  
<2>   B  0  A  0  0  
<3>   0  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  2  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 0, piece_value= 1
----------0  0  6  0  0 -----
----------8  0  7  0  0 -----
----------0  0  5  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  2  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
now move from (1,0) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
now undo move from (1,0) to (2,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 150.666667, threaten = 5.000000
now undo move from (1,0) to (2,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 150.666667, threaten = 5.000000
now undo move from (1,0) to (1,1)
eatnum = 0
local_max = -442.000000
end search, score = -442
fku
org(r,c) = (1,0)
illegal!
rand= 5  10  8
my  = 5  11  0
org(r,c) = (1,0), tar(r,c) = (2,1), dice = 2
============================ver1
My result:
Red piece 2: (A2) -> (A3)

<1>   0  0  6  0  0  
<2>   0  0  A  0  0  
<3>   B  0  5  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  2  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
A2 A3
get R 2 0 C4 0 0 C3 C1 C2 A3 0 0 0 0

The current board:

<1>   0  0  6  0  0  
<2>   0  0  A  0  0  
<3>   B  0  5  0  0  
<4>   0  0  2  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
----------0  0  6  0  0 -----
----------0  0  7  0  0 -----
----------8  0  5  0  0 -----
----------0  0  2  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
now move from (2,0) to (3,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
now undo move from (2,0) to (3,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 160.000000, threaten = 5.000000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 160.000000, threaten = 5.000000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -470.000000
end search, score = -470
fku
org(r,c) = (2,0)
illegal!
rand= 10  15  8
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 2
============================ver1
My result:
Red piece 2: (A3) -> (A4)

<1>   0  0  6  0  0  
<2>   0  0  A  0  0  
<3>   0  0  5  0  0  
<4>   B  0  2  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
A3 A4
get R 3 0 C4 0 0 B2 C1 C2 A4 0 0 0 0

The current board:

<1>   0  0  6  0  0  
<2>   0  5  A  0  0  
<3>   0  0  0  0  0  
<4>   B  0  2  0  0  
<5>   0  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 2, piece_value= 225
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
----------0  0  6  0  0 -----
----------0  5  7  0  0 -----
----------0  0  0  0  0 -----
----------8  0  2  0  0 -----
----------0  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
now move from (3,0) to (4,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
now undo move from (3,0) to (4,1)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 1735.000000, threaten = 0.000000
now undo move from (3,0) to (4,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 15.000000, blue_a = 1735.000000, threaten = 0.000000
now undo move from (3,0) to (3,1)
eatnum = 0
local_max = -5190.000000
end search, score = -5190
fku
org(r,c) = (3,0)
illegal!
rand= 15  20  8
my  = 15  21  0
org(r,c) = (3,0), tar(r,c) = (4,1), dice = 3
============================ver1
My result:
Red piece 2: (A4) -> (A5)

<1>   0  0  6  0  0  
<2>   0  5  A  0  0  
<3>   0  0  0  0  0  
<4>   0  0  2  0  0  
<5>   B  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
A4 A5
get R 1 0 C4 0 0 B2 B1 C2 A5 0 0 0 0

The current board:

<1>   0  6  0  0  0  
<2>   0  5  A  0  0  
<3>   0  0  0  0  0  
<4>   0  0  2  0  0  
<5>   B  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=6, piece_distance= 3, piece_value= 3375
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
----------0  6  0  0  0 -----
----------0  5  7  0  0 -----
----------0  0  0  0  0 -----
----------0  0  2  0  0 -----
----------8  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
now move from (1,2) to (2,3)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
now undo move from (1,2) to (2,3)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
now undo move from (1,2) to (2,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 2260.000000, threaten = 0.000000
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = -6741.666667
end search, score = -6741.67
fku
org(r,c) = (1,2)
illegal!
rand= 7  13  7
my  = 7  13  0
org(r,c) = (1,2), tar(r,c) = (2,3), dice = 1
============================ver1
My result:
Red piece 1: (C2) -> (D3)

<1>   0  6  0  0  0  
<2>   0  5  0  0  0  
<3>   0  0  0  A  0  
<4>   0  0  2  0  0  
<5>   B  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
============================
C2 D3
get R 1 0 C4 0 0 B1 0 D3 A5 0 0 0 0

The current board:

<1>   0  5  0  0  0  
<2>   0  0  0  0  0  
<3>   0  0  0  A  0  
<4>   0  0  2  0  0  
<5>   B  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=7, piece_distance= 2, piece_value= 225
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=8, piece_distance= 0, piece_value= 1
----------0  5  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  7  0 -----
----------0  0  2  0  0 -----
----------8  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
now move from (2,3) to (3,4)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2260.000000, threaten = 0.000000
now undo move from (2,3) to (3,4)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 563.333333, blue_a = 2260.000000, threaten = 0.000000
now undo move from (2,3) to (3,3)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 2260.000000, threaten = 0.000000
now undo move from (2,3) to (2,4)
eatnum = 0
local_max = -3956.666667
end search, score = -3956.67
fku
org(r,c) = (2,3)
illegal!
rand= 13  18  7
my  = 13  19  0
org(r,c) = (2,3), tar(r,c) = (3,4), dice = 1
============================ver1
My result:
Red piece 1: (D3) -> (D4)

<1>   0  5  0  0  0  
<2>   0  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  2  A  0  
<5>   B  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
D3 D4
get R 1 0 B3 0 0 B1 0 D4 A5 0 0 0 0

The current board:

<1>   0  5  0  0  0  
<2>   0  0  0  0  0  
<3>   0  2  0  0  0  
<4>   0  0  0  A  0  
<5>   B  0  0  0  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 3, piece_value= 3375
piece_num=8, piece_distance= 0, piece_value= 1
----------0  5  0  0  0 -----
----------0  0  0  0  0 -----
----------0  2  0  0  0 -----
----------0  0  0  7  0 -----
----------8  0  0  0  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
red reach: 
now move from (3,3) to (4,4)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2400.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2400.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2400.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2400.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2400.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 2400.000000, threaten = 0.000000
now undo move from (3,3) to (4,4)
eatnum = 7
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
now undo move from (3,3) to (4,3)
eatnum = 0
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
start search dep = 1, lim = 1
red reach: 
now undo move from (3,3) to (3,4)
eatnum = 0
local_max = -0.000000
end search, score = -2.22507e-308
fku
org(r,c) = (3,3)
illegal!
rand= 18  24  7
my  = 18  24  0
org(r,c) = (3,3), tar(r,c) = (4,4), dice = 1
============================ver1
My result:
Red piece 1: (D4) -> (E5)

<1>   0  5  0  0  0  
<2>   0  0  0  0  0  
<3>   0  2  0  0  0  
<4>   0  0  0  0  0  
<5>   B  0  0  0  A  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
D4 E5
exit

###
