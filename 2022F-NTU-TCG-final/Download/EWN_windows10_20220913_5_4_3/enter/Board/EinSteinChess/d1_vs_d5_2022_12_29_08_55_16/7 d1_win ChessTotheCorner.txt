* 8:55am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini E3 C5 D5 E5 E4 D4 A3 C1 B1 A1 A2 B2
* 1. B 2 C5 C4
* 2. R 4 A1 A2
* 3. B 2 C4 B4
* 4. R 6 B2 C3
* 5. B 2 B4 A3
* 6. R 1 C1 C2
* 7. B 2 A3 A2
* 8. R 1 C2 D2
* 9. B 2 A2 A1
* ChessTotheCorner d1 wins
* Comment 0 0
0. 1672275356965
1. 1672275356965
2. 1672275357027
3. 1672275357089
4. 1672275357151
5. 1672275357212
6. 1672275357276
7. 1672275357339
8. 1672275357401
9. 1672275357462
Points   Total
   1         2
   2         5
   3         0
   4         1
   5         0
   6         1

# 8 10 12 14 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 E3 C4 D5 E5 E4 D4 A3 C1 B1 A1 A2 B2
A1 A2
get R 6 E3 B4 D5 E5 E4 D4 A3 C1 B1 A2 0 B2
B2 C3
get R 1 E3 A3 D5 E5 E4 D4 0 C1 B1 A2 0 C3
C1 C2
get R 1 E3 A2 D5 E5 E4 D4 0 C2 B1 0 0 C3
C2 D2
exit

# 8 10 12 14 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 4 E3 C4 D5 E5 E4 D4 A3 C1 B1 A1 A2 B2

The current board:

<1>   D  C  B  0  0  
<2>   E  F  0  0  0  
<3>   A  0  0  0  1  
<4>   0  0  2  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  9  8  0  0 -----
----------11  12  0  0  0 -----
----------7  0  0  0  1 -----
----------0  0  2  6  5 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,0) to (1,1)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
now move from (0,0) to (1,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,0) to (1,1)
eatnum = 10
now move from (0,0) to (1,0)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,0) to (1,0)
eatnum = 11
now move from (0,0) to (0,1)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.166667, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,0) to (0,1)
eatnum = 9
local_max = -30.666667
end search, score = -30.6667
fku
org(r,c) = (0,0)
illegal!
rand= 0  5  10
my  = 0  6  0
org(r,c) = (0,0), tar(r,c) = (1,1), dice = 4
============================ver1
My result:
Red piece 4: (A1) -> (A2)

<1>   0  C  B  0  0  
<2>   D  F  0  0  0  
<3>   A  0  0  0  1  
<4>   0  0  2  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
A1 A2
get R 6 E3 B4 D5 E5 E4 D4 A3 C1 B1 A2 0 B2

The current board:

<1>   0  C  B  0  0  
<2>   D  F  0  0  0  
<3>   A  0  0  0  1  
<4>   0  2  0  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  9  8  0  0 -----
----------10  12  0  0  0 -----
----------7  0  0  0  1 -----
----------0  2  0  6  5 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 5.666667, threaten = 37.666667
now move from (1,1) to (2,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 5.666667, threaten = 0.166667
now undo move from (1,1) to (2,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.833333, blue_a = 5.666667, threaten = 2.666667
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = 4.166667
end search, score = 4.16667
fku
org(r,c) = (1,1)
illegal!
rand= 6  12  12
my  = 6  12  0
org(r,c) = (1,1), tar(r,c) = (2,2), dice = 6
============================ver1
My result:
Red piece 6: (B2) -> (C3)

<1>   0  C  B  0  0  
<2>   D  0  0  0  0  
<3>   A  0  F  0  1  
<4>   0  2  0  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B2 C3
get R 1 E3 A3 D5 E5 E4 D4 0 C1 B1 A2 0 C3

The current board:

<1>   0  C  B  0  0  
<2>   D  0  0  0  0  
<3>   2  0  F  0  1  
<4>   0  0  0  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 4
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 2, piece_value= 225
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  9  8  0  0 -----
----------10  0  0  0  0 -----
----------2  0  12  0  1 -----
----------0  0  0  6  5 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
now move from (0,2) to (1,3)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.666667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.666667
now undo move from (0,2) to (1,3)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 80.500000, blue_a = 40.666667, threaten = 40.166667
now undo move from (0,2) to (1,2)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.833333
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.833333, blue_a = 40.666667, threaten = 37.833333
now undo move from (0,2) to (0,3)
eatnum = 0
local_max = -203.666667
end search, score = -203.667
fku
org(r,c) = (0,2)
illegal!
rand= 2  7  8
my  = 2  8  0
org(r,c) = (0,2), tar(r,c) = (1,3), dice = 1
============================ver1
My result:
Red piece 2: (C1) -> (C2)

<1>   0  C  0  0  0  
<2>   D  0  B  0  0  
<3>   2  0  F  0  1  
<4>   0  0  0  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 4
============================
C1 C2
get R 1 E3 A2 D5 E5 E4 D4 0 C2 B1 0 0 C3

The current board:

<1>   0  C  0  0  0  
<2>   2  0  B  0  0  
<3>   0  0  F  0  1  
<4>   0  0  0  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 3
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=2, piece_distance= 3, piece_value= 3375
piece_num=8, piece_distance= 1, piece_value= 15
piece_num=12, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------0  9  0  0  0 -----
----------2  0  8  0  0 -----
----------0  0  12  0  1 -----
----------0  0  0  6  5 -----
----------0  0  0  3  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 188.000000, blue_a = 565.666667, threaten = 112.500000
now move from (1,2) to (2,3)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 565.666667, threaten = 37.500000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 565.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 565.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 565.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 565.666667, threaten = 37.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.333333, blue_a = 565.666667, threaten = 37.500000
now undo move from (1,2) to (2,3)
eatnum = 8
now move from (1,2) to (2,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 565.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 565.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 565.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 565.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 565.666667, threaten = 75.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 565.666667, threaten = 75.000000
now undo move from (1,2) to (2,2)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 565.666667, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 565.666667, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 565.666667, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 565.666667, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 565.666667, threaten = 42.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 118.000000, blue_a = 565.666667, threaten = 42.500000
now undo move from (1,2) to (1,3)
eatnum = 0
local_max = -3318.166667
end search, score = -3318.17
fku
org(r,c) = (1,2)
illegal!
rand= 7  8  8
my  = 7  13  0
org(r,c) = (1,2), tar(r,c) = (2,3), dice = 1
============================ver1
My result:
Red piece 2: (C2) -> (D2)

<1>   0  C  0  0  0  
<2>   2  0  0  B  0  
<3>   0  0  F  0  1  
<4>   0  0  0  6  5  
<5>   0  0  0  3  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 3
============================
C2 D2
exit

###
