* 8:56am Dec 29, 2022
* d1 vs d5
* order BR* board 5 6* time 240 0 0
* ini D5 E4 C5 E5 E3 D4 B1 A2 C1 A1 A3 B2
* 1. B 5 E3 D3
* 2. R 1 B1 B2
* 3. B 3 C5 C4
* 4. R 1 B2 B3
* 5. B 4 E5 E4
* 6. R 1 B3 C4
* 7. B 5 D3 C3
* 8. R 5 A3 B4
* 9. B 4 E4 D4
* 10. R 6 B4 B5
* 11. B 4 D4 C4
* 12. R 6 B5 C5
* 13. B 5 C3 B2
* 14. R 4 A1 A2
* 15. B 5 B2 A2
* 16. R 5 C5 D5
* 17. B 4 C4 B3
* 18. R 6 D5 E5
* ChessTotheCorner d5 wins
* Comment 0 0
0. 1672275370057
1. 1672275370057
2. 1672275370118
3. 1672275370178
4. 1672275370240
5. 1672275370302
6. 1672275370365
7. 1672275370426
8. 1672275370488
9. 1672275370550
10. 1672275370612
11. 1672275370674
12. 1672275370737
13. 1672275370799
14. 1672275370861
15. 1672275370924
16. 1672275370984
17. 1672275371047
18. 1672275371109
Points   Total
   1         3
   2         0
   3         1
   4         5
   5         6
   6         3

# 8 10 12 14 16 18 20 22 24 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 1 D5 E4 C5 E5 D3 D4 B1 A2 C1 A1 A3 B2
B1 B2
get R 1 D5 E4 C4 E5 D3 D4 B2 A2 C1 A1 A3 0
B2 B3
get R 1 D5 0 C4 E4 D3 D4 B3 A2 C1 A1 A3 0
B3 C4
get R 5 D5 0 0 E4 C3 D4 C4 A2 C1 A1 A3 0
A3 B4
get R 6 D5 0 0 D4 C3 0 C4 A2 C1 A1 B4 0
B4 B5
get R 6 D5 0 0 C4 C3 0 0 A2 C1 A1 B5 0
B5 C5
get R 4 D5 0 0 C4 B2 0 0 A2 C1 A1 C5 0
A1 A2
get R 5 D5 0 0 C4 A2 0 0 0 C1 0 C5 0
C5 D5
get R 6 0 0 0 B3 A2 0 0 0 C1 0 D5 0
D5 E5
exit

# 8 10 12 14 16 18 20 22 24 #
name
r10922150:AI
version
1.0.0
time_setting 240 0 0
1
board_setting 5 6 2
1
get R 1 D5 E4 C5 E5 D3 D4 B1 A2 C1 A1 A3 B2

The current board:

<1>   D  A  C  0  0  
<2>   B  F  0  0  0  
<3>   E  0  0  5  0  
<4>   0  0  0  6  2  
<5>   0  0  3  1  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 6
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=12, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=3, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  7  9  0  0 -----
----------8  12  0  0  0 -----
----------11  0  0  5  0 -----
----------0  0  0  6  2 -----
----------0  0  3  1  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 5.666667, blue_a = 5.666667, threaten = 2.500000
now move from (0,1) to (1,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 0.000000
now undo move from (0,1) to (1,2)
eatnum = 7
now move from (0,1) to (1,1)
eatnum = 12
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 2.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 5.666667, threaten = 2.500000
now undo move from (0,1) to (1,1)
eatnum = 12
now move from (0,1) to (0,2)
eatnum = 9
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.500000, blue_a = 5.666667, threaten = 0.166667
now undo move from (0,1) to (0,2)
eatnum = 9
local_max = -30.666667
end search, score = -30.6667
fku
org(r,c) = (0,1)
illegal!
rand= 1  6  7
my  = 1  7  0
org(r,c) = (0,1), tar(r,c) = (1,2), dice = 1
============================ver1
My result:
Red piece 1: (B1) -> (B2)

<1>   D  0  C  0  0  
<2>   B  A  0  0  0  
<3>   E  0  0  5  0  
<4>   0  0  0  6  2  
<5>   0  0  3  1  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B1 B2
get R 1 D5 E4 C4 E5 D3 D4 B2 A2 C1 A1 A3 0

The current board:

<1>   D  0  C  0  0  
<2>   B  A  0  0  0  
<3>   E  0  0  5  0  
<4>   0  0  3  6  2  
<5>   0  0  0  1  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=2, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
piece_num=4, piece_distance= 0, piece_value= 1
----------10  0  9  0  0 -----
----------8  7  0  0  0 -----
----------11  0  0  5  0 -----
----------0  0  3  6  2 -----
----------0  0  0  1  4 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 8.000000, threaten = 75.000000
now move from (1,1) to (2,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 8.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 8.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 8.000000, threaten = 0.000000
now undo move from (1,1) to (2,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
now undo move from (1,1) to (2,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 8.000000, threaten = 5.000000
now undo move from (1,1) to (1,2)
eatnum = 0
local_max = -47.000000
end search, score = -47
fku
org(r,c) = (1,1)
illegal!
rand= 6  11  7
my  = 6  12  0
org(r,c) = (1,1), tar(r,c) = (2,2), dice = 1
============================ver1
My result:
Red piece 1: (B2) -> (B3)

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   E  A  0  5  0  
<4>   0  0  3  6  2  
<5>   0  0  0  1  4  

     <A><B><C><D><E>

The number of blue pieces: 6
The number of red pieces: 5
============================
B2 B3
get R 1 D5 0 C4 E4 D3 D4 B3 A2 C1 A1 A3 0

The current board:

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   E  A  0  5  0  
<4>   0  0  3  6  4  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 5
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=7, piece_distance= 1, piece_value= 15
piece_num=5, piece_distance= 1, piece_value= 15
piece_num=3, piece_distance= 1, piece_value= 15
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------10  0  9  0  0 -----
----------8  0  0  0  0 -----
----------11  7  0  5  0 -----
----------0  0  3  6  4 -----
----------0  0  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (2,1) to (3,2)
eatnum = 3
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
now move from (2,1) to (3,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 6.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 6.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 6.000000, threaten = 0.000000
now undo move from (2,1) to (3,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 6.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 6.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 6.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 6.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 6.000000, threaten = 7.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 3.333333, blue_a = 6.000000, threaten = 7.500000
now undo move from (2,1) to (3,1)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 6.000000, threaten = 112.500000
now undo move from (2,1) to (2,2)
eatnum = 0
local_max = -23.000000
end search, score = -23
fku
org(r,c) = (2,1)
illegal!
rand= 11  17  7
my  = 11  17  0
org(r,c) = (2,1), tar(r,c) = (3,2), dice = 1
============================ver1
My result:
Red piece 1: (B3) -> (C4)

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   E  0  0  5  0  
<4>   0  0  A  6  4  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
B3 C4
get R 5 D5 0 0 E4 C3 D4 C4 A2 C1 A1 A3 0

The current board:

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   E  0  5  0  0  
<4>   0  0  A  6  4  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=11, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=7, piece_distance= 2, piece_value= 225
piece_num=6, piece_distance= 1, piece_value= 15
piece_num=4, piece_distance= 0, piece_value= 1
piece_num=1, piece_distance= 0, piece_value= 1
----------10  0  9  0  0 -----
----------8  0  0  0  0 -----
----------11  0  5  0  0 -----
----------0  0  7  6  4 -----
----------0  0  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
now move from (2,0) to (3,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
now undo move from (2,0) to (3,1)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 41.000000, threaten = 112.500000
now undo move from (2,0) to (3,0)
eatnum = 0
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 41.000000, threaten = 112.500000
now undo move from (2,0) to (2,1)
eatnum = 0
local_max = -233.500000
end search, score = -233.5
fku
org(r,c) = (2,0)
illegal!
rand= 10  16  11
my  = 10  16  0
org(r,c) = (2,0), tar(r,c) = (3,1), dice = 5
============================ver1
My result:
Red piece 5: (A3) -> (B4)

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   0  0  5  0  0  
<4>   0  E  A  6  4  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 4
The number of red pieces: 5
============================
A3 B4
get R 6 D5 0 0 D4 C3 0 C4 A2 C1 A1 B4 0

The current board:

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   0  0  5  0  0  
<4>   0  E  A  4  0  
<5>   0  0  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 5
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=7, piece_distance= 2, piece_value= 225
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
----------10  0  9  0  0 -----
----------8  0  0  0  0 -----
----------0  0  5  0  0 -----
----------0  11  7  4  0 -----
----------0  0  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.000000, blue_a = 83.000000, threaten = 112.500000
now move from (3,1) to (4,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 38.333333, blue_a = 83.000000, threaten = 112.500000
now undo move from (3,1) to (4,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 83.000000, threaten = 112.500000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 43.000000, blue_a = 83.000000, threaten = 112.500000
now undo move from (3,1) to (4,1)
eatnum = 0
now move from (3,1) to (3,2)
eatnum = 7
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
now undo move from (3,1) to (3,2)
eatnum = 7
local_max = -173.333333
end search, score = -173.333
fku
org(r,c) = (3,1)
illegal!
rand= 16  21  11
my  = 16  17  0
org(r,c) = (3,1), tar(r,c) = (3,2), dice = 6
============================ver1
My result:
Red piece 5: (B4) -> (B5)

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   0  0  5  0  0  
<4>   0  0  A  4  0  
<5>   0  E  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 5
============================
B4 B5
get R 6 D5 0 0 C4 C3 0 0 A2 C1 A1 B5 0

The current board:

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   0  0  5  0  0  
<4>   0  0  4  0  0  
<5>   0  E  0  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 2, piece_value= 225
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 1, piece_value= 15
piece_num=1, piece_distance= 0, piece_value= 1
----------10  0  9  0  0 -----
----------8  0  0  0  0 -----
----------0  0  5  0  0 -----
----------0  0  4  0  0 -----
----------0  11  0  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 83.000000, threaten = 0.000000
now move from (4,1) to (4,2)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 83.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 83.000000, threaten = 0.000000
now undo move from (4,1) to (4,2)
eatnum = 11
local_max = -173.333333
end search, score = -173.333
fku
org(r,c) = (4,1)
illegal!
rand= 21  22  11
my  = 21  22  0
org(r,c) = (4,1), tar(r,c) = (4,2), dice = 6
============================ver1
My result:
Red piece 5: (B5) -> (C5)

<1>   D  0  C  0  0  
<2>   B  0  0  0  0  
<3>   0  0  5  0  0  
<4>   0  0  4  0  0  
<5>   0  0  E  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
============================
B5 C5
get R 4 D5 0 0 C4 B2 0 0 A2 C1 A1 C5 0

The current board:

<1>   D  0  C  0  0  
<2>   B  5  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  4  0  0  
<5>   0  0  E  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 4
generate start: 
piece_num=10, piece_distance= 0, piece_value= 1
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=8, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
----------10  0  9  0  0 -----
----------8  5  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  4  0  0 -----
----------0  0  11  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (0,0) to (1,1)
eatnum = 5
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 78.000000, blue_a = 13.000000, threaten = 0.000000
now move from (0,0) to (1,1)
eatnum = 10
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 13.000000, threaten = 0.000000
new local
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 113.166667, blue_a = 13.000000, threaten = 0.000000
now undo move from (0,0) to (1,1)
eatnum = 10
now move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
now undo move from (0,0) to (1,0)
eatnum = 8
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 75.666667, blue_a = 13.000000, threaten = 0.000000
now undo move from (0,0) to (0,1)
eatnum = 0
local_max = 87.166667
end search, score = 87.1667
fku
org(r,c) = (0,0)
illegal!
rand= 0  5  10
my  = 0  6  0
org(r,c) = (0,0), tar(r,c) = (1,1), dice = 4
============================ver1
My result:
Red piece 4: (A1) -> (A2)

<1>   0  0  C  0  0  
<2>   D  5  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  4  0  0  
<5>   0  0  E  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 3
============================
A1 A2
get R 5 D5 0 0 C4 A2 0 0 0 C1 0 C5 0

The current board:

<1>   0  0  C  0  0  
<2>   5  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  4  0  0  
<5>   0  0  E  1  0  

     <A><B><C><D><E>

The number of blue pieces: 3
The number of red pieces: 2
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 1, piece_value= 15
piece_num=11, piece_distance= 2, piece_value= 225
piece_num=1, piece_distance= 0, piece_value= 1
----------0  0  9  0  0 -----
----------5  0  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  4  0  0 -----
----------0  0  11  1  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
now move from (4,2) to (4,3)
eatnum = 1
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1688.166667, blue_a = 1135.000000, threaten = 0.000000
now move from (4,2) to (4,3)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1135.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1135.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1135.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1135.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1135.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1135.000000, threaten = 0.000000
now undo move from (4,2) to (4,3)
eatnum = 11
local_max = -581.833333
end search, score = -581.833
fku
org(r,c) = (4,2)
illegal!
rand= 22  23  11
my  = 22  23  0
org(r,c) = (4,2), tar(r,c) = (4,3), dice = 5
============================ver1
My result:
Red piece 5: (C5) -> (D5)

<1>   0  0  C  0  0  
<2>   5  0  0  0  0  
<3>   0  0  0  0  0  
<4>   0  0  4  0  0  
<5>   0  0  0  E  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
C5 D5
get R 6 0 0 0 B3 A2 0 0 0 C1 0 D5 0

The current board:

<1>   0  0  C  0  0  
<2>   5  0  0  0  0  
<3>   0  4  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  E  0  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
generate start: 
piece_num=9, piece_distance= 0, piece_value= 1
piece_num=5, piece_distance= 3, piece_value= 3375
piece_num=4, piece_distance= 2, piece_value= 225
piece_num=11, piece_distance= 3, piece_value= 3375
----------0  0  9  0  0 -----
----------5  0  0  0  0 -----
----------0  4  0  0  0 -----
----------0  0  0  0  0 -----
----------0  0  0  11  0 -----
init board done
start search
start search dep = 0, lim = 1
local_max alpha = 0.000000
start search dep = 1, lim = 1
red reach: 
now move from (4,3) to (4,4)
eatnum = 11
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1275.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1275.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1275.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1275.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1275.000000, threaten = 0.000000
start search dep = 1, lim = 1
start evaluate: 
evaluate red_a = 1.000000, blue_a = 1275.000000, threaten = 0.000000
now undo move from (4,3) to (4,4)
eatnum = 11
local_max = -0.000000
end search, score = -2.22507e-308
fku
org(r,c) = (4,3)
illegal!
rand= 23  24  11
my  = 23  24  0
org(r,c) = (4,3), tar(r,c) = (4,4), dice = 6
============================ver1
My result:
Red piece 5: (D5) -> (E5)

<1>   0  0  C  0  0  
<2>   5  0  0  0  0  
<3>   0  4  0  0  0  
<4>   0  0  0  0  0  
<5>   0  0  0  0  E  

     <A><B><C><D><E>

The number of blue pieces: 2
The number of red pieces: 2
============================
D5 E5
exit

###
